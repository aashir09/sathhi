{"version":3,"file":"static/js/1171.edd01112.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/question/Question.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Loader1 from 'src/content/Loader';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Breadcrumbs,\r\n  Typography,\r\n  Stack,\r\n  Button,\r\n  Container,\r\n  Card,\r\n  TableContainer,\r\n  TablePagination,\r\n  Divider,\r\n  IconButton,\r\n  Switch,\r\n  Tooltip,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  FormHelperText,\r\n  Paper\r\n} from '@mui/material';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\nimport JoditEditor from 'jodit-react';\r\nimport '../smallScreen.css';\r\nimport { FormControl } from '@mui/material';\r\nimport { useRef } from 'react';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst initialState = {\r\n  id: 0,\r\n  question: '',\r\n  answer: '',\r\n  name: ''\r\n};\r\n\r\nexport default function Question() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [ischeck, setIsCheck] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isDel, setIsDel] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [check, setCheck] = useState(false);\r\n  const [Del, setDel] = useState(false);\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(10);\r\n  const [pageCategories, setPageCategories] = useState<number>(0);\r\n  const [limitCategories, setLimitCategories] = useState<number>(10);\r\n  const [rowCategories, setRowCategories] = useState<number>(10);\r\n  const [question, setQuestion] = useState<any>(initialState);\r\n  const [user, setUser] = useState([]);\r\n  const [isNameError, setNameError] = useState(false);\r\n  const [NameErrorMsg, setNameErrorMsg] = useState('');\r\n  const [answer, setAnswer] = useState<any>('');\r\n  const [isQuestionError, setQuestionError] = useState(false);\r\n  const [QuestionErrorMsg, setQuestionErrorMsg] = useState('');\r\n  const [isAnswerError, setAnswerError] = useState(false);\r\n  const [AnswerErrorMsg, setAnswerErrorMsg] = useState('');\r\n  const [isUserError, setUserError] = useState(false);\r\n  const [UserErrorMsg, setUserErrorMsg] = useState('');\r\n  const [errorFlag, setErrorFlag] = useState(false);\r\n  let [credentail, setCredentail] = useState<any>();\r\n\r\n  const [isReadPermission, setIsReadPermission] = useState(true);\r\n  const [isWritePermission, setIsWritePermission] = useState(true);\r\n  const [isEditPermission, setIsEditPermission] = useState(true);\r\n  const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n    setCredentail(cred);\r\n    if (cred) {\r\n      if (cred.roleId != 1) {\r\n        let ind = cred.pagePermissions.findIndex((c: any) => c.title === \"Block Users\");\r\n        if (ind >= 0) {\r\n          setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n          setIsWritePermission(cred.pagePermissions[ind].isAddPermission)\r\n          setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n          setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n          if (cred.pagePermissions[ind].isReadPermission)\r\n            getData(page, limit, pageCategories, limitCategories);\r\n        }\r\n      } else {\r\n        getData(page, limit, pageCategories, limitCategories);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const editor = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const reg = new RegExp(/^[a-zA-Z_ ]+$/);\r\n  const validateName = (arr) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      if (reg.test(arr.target.value)) {\r\n        setNameError(false);\r\n        setNameErrorMsg('');\r\n      } else {\r\n        setNameError(true);\r\n        setNameErrorMsg('Alphabet and space allowed');\r\n      }\r\n    } else {\r\n      setNameError(true);\r\n      setNameErrorMsg('Question Category is required');\r\n    }\r\n  };\r\n\r\n  const validateQuestion = (arr: any) => {\r\n    const { name, value } = arr.target;\r\n    if (value) {\r\n      setQuestionError(false);\r\n      setQuestionErrorMsg('');\r\n    } else {\r\n      setQuestionError(true);\r\n      setQuestionErrorMsg('Question is required');\r\n    }\r\n  };\r\n\r\n  const validateAnswer = (e: string) => {\r\n    if (e) {\r\n      setAnswerError(false);\r\n      setAnswerErrorMsg('');\r\n    } else {\r\n      setAnswerError(true);\r\n      setAnswerErrorMsg('Answer is required');\r\n    }\r\n  };\r\n\r\n  const validateForm = (e: any) => {\r\n    e.preventDefault();\r\n    var flag = true;\r\n    if (!question.name) {\r\n      setNameError(true);\r\n      setNameErrorMsg('Question Category is required');\r\n      flag = false;\r\n    } else {\r\n      if (reg.test(question.name)) {\r\n        setNameError(false);\r\n        setNameErrorMsg('');\r\n        flag = true;\r\n      } else {\r\n        setNameError(true);\r\n        setNameErrorMsg('Alphabet and space allowed');\r\n        flag = false;\r\n      }\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const validateForm1 = (e: any) => {\r\n    e.preventDefault();\r\n    let flag = true;\r\n    if (!question.question) {\r\n      setQuestionError(true);\r\n      setQuestionErrorMsg('Question is required');\r\n      flag = false;\r\n    } else {\r\n      setQuestionError(false);\r\n      setQuestionErrorMsg('');\r\n    }\r\n    if (!answer) {\r\n      setAnswerError(true);\r\n      setAnswerErrorMsg('Answer is required');\r\n      flag = false;\r\n    } else {\r\n      setAnswerError(false);\r\n      setAnswerErrorMsg('');\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const handleChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    setQuestion({\r\n      ...question,\r\n      [name]: value\r\n    });\r\n    if (errorFlag === true) {\r\n      setUserError(false);\r\n      setErrorFlag(false);\r\n    }\r\n  };\r\n\r\n  const handleChange1 = (e: any) => {\r\n    let obj = {\r\n      answer: e\r\n    };\r\n    setAnswer(obj);\r\n    if (errorFlag === true) {\r\n      setUserError(false);\r\n      setErrorFlag(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsCheck(false);\r\n    setIsOpen(false);\r\n    setIsDel(false);\r\n    setOpen(false);\r\n    setCheck(false);\r\n    setDel(false);\r\n  };\r\n\r\n  const handleClickisAdd = async (id: any, str: any) => {\r\n    setQuestion({ categoriesId: id, name: str });\r\n    setIsOpen(true);\r\n    setNameError(false);\r\n    setNameErrorMsg('');\r\n    setUserError(false);\r\n    setUserErrorMsg('');\r\n    setAnswerError(false);\r\n    setAnswerErrorMsg('');\r\n    setQuestionError(false);\r\n    setQuestionErrorMsg('');\r\n  };\r\n\r\n  const handleClickisEdit = (\r\n    no: number,\r\n    que: string,\r\n    ans: string,\r\n    name: any\r\n  ) => {\r\n    let obj = {\r\n      id: no,\r\n      question: que,\r\n      answer: ans,\r\n      name: name\r\n    };\r\n    setQuestion(obj);\r\n    setIsOpen(true);\r\n    setUserError(false);\r\n    setUserErrorMsg('');\r\n    setNameError(false);\r\n    setNameErrorMsg('');\r\n    setAnswerError(false);\r\n    setAnswerErrorMsg('');\r\n    setQuestionError(false);\r\n    setQuestionErrorMsg('');\r\n  };\r\n\r\n  const handleSwitch = (id: number, status: number) => {\r\n    let obj = {\r\n      id: id,\r\n      status: status\r\n    };\r\n    setQuestion(obj);\r\n    setIsCheck(true);\r\n  };\r\n\r\n  const handleSwitchCheck = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: question.id\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/questionCategories/activeInactiveQuestion',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setIsCheck(false);\r\n    getData(\r\n      page * limit,\r\n      limit,\r\n      pageCategories * limitCategories,\r\n      limitCategories\r\n    );\r\n  };\r\n\r\n  const handleClickisDelete = (id: number) => {\r\n    let obj = {\r\n      id: id\r\n    };\r\n    setQuestion(obj);\r\n    setIsDel(true);\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: question.id\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/questionCategories/deleteQuestion',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setIsDel(false);\r\n    getData(\r\n      page * limit,\r\n      limit,\r\n      pageCategories * limitCategories,\r\n      limitCategories\r\n    );\r\n  };\r\n\r\n  const getData = async (\r\n    startIndex: number,\r\n    fetchRecord: number,\r\n    startIndexCategories: number,\r\n    fetchRecordCategories: number\r\n  ) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let obj = {\r\n        startIndex: startIndex,\r\n        fetchRecord: fetchRecord,\r\n        startIndexCategories: startIndexCategories,\r\n        fetchRecordCategories: fetchRecordCategories\r\n      };\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/questionCategories/getQuestion',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setUser(res.recordList);\r\n      setRowCategories(res.totalRecords);\r\n      if (res && res.status == 200) {\r\n        setIsOpen(false);\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 400) {\r\n        setIsOpen(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 500) {\r\n        setIsOpen(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        setIsOpen(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        setIsOpen(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setIsOpen(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const saveQuestion = async (arr: any) => {\r\n    try {\r\n      let flag = validateForm1(arr);\r\n      if (flag) {\r\n        if (question.id) {\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          let val = {\r\n            id: question.id,\r\n            question: question.question,\r\n            answer: answer.answer\r\n          };\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/questionCategories/insertUpdateQuestion',\r\n            val,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status === 200) {\r\n            setIsOpen(false);\r\n            getData(\r\n              page * limit,\r\n              limit,\r\n              pageCategories * limitCategories,\r\n              limitCategories\r\n            );\r\n          } else if (res && res.status === 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res && res.status === 400) {\r\n            flag = false;\r\n            if (!(flag && errorFlag)) {\r\n              setUserError(true);\r\n              setUserErrorMsg(res.message);\r\n              setErrorFlag(true);\r\n            }\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        } else {\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          let obj = {\r\n            question: question.question,\r\n            answer: answer.answer,\r\n            categoriesId: question.categoriesId\r\n          };\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/questionCategories/insertUpdateQuestion',\r\n            obj,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            getData(0, limit, 0, limitCategories);\r\n            setPage(0);\r\n            setIsOpen(false);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 400) {\r\n            flag = false;\r\n            if (!(flag && errorFlag)) {\r\n              setUserError(true);\r\n              setUserErrorMsg(res.message);\r\n              setErrorFlag(true);\r\n            }\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setIsOpen(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const saveQuestionCategories = async (e: any) => {\r\n    try {\r\n      let flag = validateForm(e);\r\n      if (flag) {\r\n        if (question.id) {\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          let val = {\r\n            id: question.id,\r\n            name: question.name\r\n          };\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/questionCategories/insertUpdateQuestionCategories',\r\n            val,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status === 200) {\r\n            setOpen(false);\r\n            getData(\r\n              page * limit,\r\n              limit,\r\n              pageCategories * limitCategories,\r\n              limitCategories\r\n            );\r\n          } else if (res && res.status === 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res && res.status === 400) {\r\n            flag = false;\r\n            if (!(flag && errorFlag)) {\r\n              setUserError(true);\r\n              setUserErrorMsg(res.message);\r\n              setErrorFlag(true);\r\n            }\r\n          } else if (res.status == 500) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        } else {\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          let obj = {\r\n            name: question.name\r\n          };\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/questionCategories/insertUpdateQuestionCategories',\r\n            obj,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status === 200) {\r\n            setOpen(false);\r\n            getData(0, limit, 0, limitCategories);\r\n          } else if (res && res.status === 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res && res.status === 400) {\r\n            flag = false;\r\n            if (!(flag && errorFlag)) {\r\n              setUserError(true);\r\n              setUserErrorMsg(res.message);\r\n              setErrorFlag(true);\r\n            }\r\n          } else if (res.status == 500) {\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleAddForCategoryName = async () => {\r\n    setOpen(true);\r\n    setQuestion(initialState);\r\n    setNameError(false);\r\n    setNameErrorMsg('');\r\n    setAnswerError(false);\r\n    setAnswerErrorMsg('');\r\n    setUserError(false);\r\n    setUserErrorMsg('');\r\n    setQuestionError(false);\r\n    setQuestionErrorMsg('');\r\n  };\r\n\r\n  const handleEditCategoryName = (id: any, str: string) => {\r\n    let obj = {\r\n      id: id,\r\n      name: str\r\n    };\r\n    setQuestion(obj);\r\n    setOpen(true);\r\n    setNameError(false);\r\n    setNameErrorMsg('');\r\n    setAnswerError(false);\r\n    setAnswerErrorMsg('');\r\n    setUserError(false);\r\n    setUserErrorMsg('');\r\n    setQuestionError(false);\r\n    setQuestionErrorMsg('');\r\n  };\r\n\r\n  const handleSwitchCategories = (id: number, status: number) => {\r\n    let obj = {\r\n      id: id,\r\n      status: status\r\n    };\r\n    setQuestion(obj);\r\n    setCheck(true);\r\n  };\r\n\r\n  const handleSwitchCheckCategories = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: question.id\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/questionCategories/activeInactiveQuestionCategories',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setCheck(false);\r\n    getData(\r\n      page * limit,\r\n      limit,\r\n      pageCategories * limitCategories,\r\n      limitCategories\r\n    );\r\n  };\r\n\r\n  const handleDeleteCategoriesDialog = (id: number) => {\r\n    let obj = {\r\n      id: id\r\n    };\r\n    setQuestion(obj);\r\n    setDel(true);\r\n  };\r\n\r\n  const handleDeleteCategories = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: question.id\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/questionCategories/deleteQuestionCategories',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setDel(false);\r\n    getData(\r\n      page * limit,\r\n      limit,\r\n      pageCategories * limitCategories,\r\n      limitCategories\r\n    );\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n    getData(\r\n      newPage * limit,\r\n      limit,\r\n      pageCategories * limitCategories,\r\n      limitCategories\r\n    );\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n    setPage(0);\r\n    getData(0, parseInt(event.target.value), 0, limitCategories);\r\n  };\r\n\r\n  const handleCategoriesPageChange = (event: any, newPage: number): void => {\r\n    setPageCategories(newPage);\r\n    getData(newPage * limitCategories, limitCategories, page * limit, limit);\r\n  };\r\n\r\n  const handleCategoriesLimitChange = (\r\n    event: ChangeEvent<HTMLInputElement>\r\n  ): void => {\r\n    setLimitCategories(parseInt(event.target.value));\r\n    setPageCategories(0);\r\n    getData(0, parseInt(event.target.value), 0, limit);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        style={{ top: '10%', left: '80%' }}\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>FAQs</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box pt={1.1} pb={1.1} pl={1}>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link to=\"/admin\" style={{ display: 'flex', color: 'black' }}>\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                    fontWeight=\"bold\"\r\n                  >\r\n                    FAQs\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item>\r\n              {isWritePermission ?\r\n                <>\r\n                  <Button\r\n                    className=\"buttonLarge\"\r\n                    sx={{ lineHeight: '2.04' }}\r\n                    variant=\"contained\"\r\n                    onClick={handleAddForCategoryName}\r\n                    size=\"small\"\r\n                  >\r\n                    <AddTwoToneIcon fontSize=\"small\" /> Create Question Categories\r\n                  </Button>\r\n                  <Button\r\n                    className=\"button\"\r\n                    sx={{ lineHeight: '2.04' }}\r\n                    variant=\"contained\"\r\n                    onClick={handleAddForCategoryName}\r\n                    size=\"small\"\r\n                  >\r\n                    <AddTwoToneIcon fontSize=\"small\" />\r\n                  </Button>\r\n                </>\r\n                : <></>}\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card className=\"appcard\">\r\n              <div>\r\n                {isLoading ? (\r\n                  <Loader1 title=\"Loading...\" />\r\n                ) : (\r\n                  <>\r\n                    {user && user.length > 0 ? (\r\n                      <>\r\n                        <TableContainer className=\"apptableContainer\">\r\n                          {user.map((arr: any, index: number) => (\r\n                            <Accordion key={arr.id} sx={{ mt: 1 }}>\r\n                              <AccordionSummary\r\n                                expandIcon={\r\n                                  <ExpandMoreIcon sx={{ color: '#495fff' }} />\r\n                                }\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\"\r\n                                sx={{\r\n                                  bgcolor: '#c7cdfd',\r\n                                  display: 'flex',\r\n                                  justifyContent: 'space-between'\r\n                                }}\r\n                              >\r\n                                <Grid container justifyContent=\"space-between\">\r\n                                  <Grid\r\n                                    item\r\n                                    sx={{\r\n                                      display: 'flex',\r\n                                      justifyContent: 'center',\r\n                                      alignItems: 'center'\r\n                                    }}\r\n                                  >\r\n                                    <Typography\r\n                                      sx={{\r\n                                        fontSize: '17px',\r\n                                        fontWeight: 'bold',\r\n                                        textTransform: 'capitalize',\r\n                                        color: '#495fff'\r\n                                      }}\r\n                                    >\r\n                                      {arr.name}\r\n                                    </Typography>\r\n                                  </Grid>\r\n                                  <Grid\r\n                                    item\r\n                                    sx={{\r\n                                      display: 'flex',\r\n                                      justifyContent: 'center',\r\n                                      alignItems: 'center'\r\n                                    }}\r\n                                  >\r\n                                    {isEditPermission ?\r\n                                      <>\r\n                                        <Tooltip\r\n                                          title={\r\n                                            arr.isActive === 0\r\n                                              ? 'Inactive'\r\n                                              : 'Active'\r\n                                          }\r\n                                          arrow\r\n                                        >\r\n                                          <Switch\r\n                                            disabled={credentail?.email === \"demo@admin.com\"}\r\n                                            checked={\r\n                                              arr.isActive === 0 ? false : true\r\n                                            }\r\n                                            onClick={(e) =>\r\n                                              handleSwitchCategories(\r\n                                                arr.id,\r\n                                                arr.isActive\r\n                                              )\r\n                                            }\r\n                                            inputProps={{\r\n                                              'aria-label': 'controlled'\r\n                                            }}\r\n                                          />\r\n                                        </Tooltip>\r\n                                        <Tooltip title=\"Edit \" arrow>\r\n                                          <Button\r\n                                            disabled={credentail?.email === \"demo@admin.com\"}\r\n                                            sx={{\r\n                                              backgroundColor: '#5569ff',\r\n                                              color: 'white',\r\n                                              mr: 1\r\n                                            }}\r\n                                            size=\"small\"\r\n                                            variant=\"contained\"\r\n                                            onClick={(e) =>\r\n                                              handleEditCategoryName(\r\n                                                arr.id,\r\n                                                arr.name\r\n                                              )\r\n                                            }\r\n                                          >\r\n                                            <EditTwoToneIcon fontSize=\"small\" />\r\n                                          </Button>\r\n                                        </Tooltip>\r\n                                      </>\r\n                                      : <></>}\r\n                                    {isWritePermission ?\r\n                                      <Tooltip title=\"Add \" arrow>\r\n                                        <Button\r\n                                          disabled={credentail?.email === \"demo@admin.com\"}\r\n                                          sx={{\r\n                                            backgroundColor: '#5569ff',\r\n                                            color: 'white',\r\n                                            mr: 1\r\n                                          }}\r\n                                          size=\"small\"\r\n                                          variant=\"contained\"\r\n                                          onClick={(e) => {\r\n                                            handleClickisAdd(arr.id, arr.name);\r\n                                          }}\r\n                                        >\r\n                                          <AddTwoToneIcon fontSize=\"small\" />\r\n                                        </Button>\r\n                                      </Tooltip>\r\n                                      : <></>}\r\n                                    {isDeletePermission ?\r\n                                      <Tooltip title=\"Delete\" arrow>\r\n                                        <Button\r\n                                          disabled={credentail?.email === \"demo@admin.com\"}\r\n                                          sx={{\r\n                                            backgroundColor: '#5569ff',\r\n                                            color: 'white',\r\n                                            mr: 1\r\n                                          }}\r\n                                          size=\"small\"\r\n                                          variant=\"contained\"\r\n                                          onClick={(e) =>\r\n                                            handleDeleteCategoriesDialog(arr.id)\r\n                                          }\r\n                                        >\r\n                                          <DeleteIcon fontSize=\"small\" />\r\n                                        </Button>\r\n                                      </Tooltip>\r\n                                      : <></>}\r\n\r\n                                  </Grid>\r\n                                </Grid>\r\n                              </AccordionSummary>\r\n                              {arr.question.map((data: any, index: number) => (\r\n                                <>\r\n                                  <AccordionDetails key={data.id}>\r\n                                    <Box\r\n                                      sx={{\r\n                                        display: 'flex',\r\n                                        justifyContent: 'space-between',\r\n                                        bgcolor: 'aliceblue',\r\n                                        alignItems: 'center'\r\n                                      }}\r\n                                    >\r\n                                      <Typography\r\n                                        sx={{\r\n                                          fontSize: {\r\n                                            lg: '18px',\r\n                                            md: '17px',\r\n                                            sm: '16px',\r\n                                            xs: '15px'\r\n                                          },\r\n                                          fontWeight: 'bold',\r\n                                          p: 1\r\n                                        }}\r\n                                      >\r\n                                        {data.question}\r\n                                      </Typography>\r\n                                      <div\r\n                                        style={{\r\n                                          padding: '9px',\r\n                                          display: 'flex'\r\n                                        }}\r\n                                      >\r\n                                        {isEditPermission ? <>\r\n                                          <Tooltip\r\n                                            title={\r\n                                              data.isActive === 0\r\n                                                ? 'Inactive'\r\n                                                : 'Active'\r\n                                            }\r\n                                            arrow\r\n                                          >\r\n                                            <Switch\r\n                                              disabled={credentail?.email === \"demo@admin.com\"}\r\n                                              checked={\r\n                                                data.isActive === 0 ? false : true\r\n                                              }\r\n                                              onClick={(e) =>\r\n                                                handleSwitch(\r\n                                                  data.id,\r\n                                                  data.isActive\r\n                                                )\r\n                                              }\r\n                                              inputProps={{\r\n                                                'aria-label': 'controlled'\r\n                                              }}\r\n                                            />\r\n                                          </Tooltip>\r\n                                          <Tooltip title=\"Edit \" arrow>\r\n                                            <Button\r\n                                              disabled={credentail?.email === \"demo@admin.com\"}\r\n                                              sx={{\r\n                                                backgroundColor: '#5569ff',\r\n                                                color: 'white',\r\n                                                mx: 1\r\n                                              }}\r\n                                              size=\"small\"\r\n                                              variant=\"contained\"\r\n                                              onClick={(e) =>\r\n                                                handleClickisEdit(\r\n                                                  data.id,\r\n                                                  data.question,\r\n                                                  data.answer,\r\n                                                  arr.name\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              <EditTwoToneIcon fontSize=\"small\" />\r\n                                            </Button>\r\n                                          </Tooltip>\r\n                                        </> : <></>}\r\n                                        {isDeletePermission ?\r\n                                          <Tooltip title=\"Delete\" arrow>\r\n                                            <Button\r\n                                              disabled={credentail?.email === \"demo@admin.com\"}\r\n                                              sx={{\r\n                                                backgroundColor: '#5569ff',\r\n                                                color: 'white'\r\n                                              }}\r\n                                              size=\"small\"\r\n                                              variant=\"contained\"\r\n                                              onClick={(e) =>\r\n                                                handleClickisDelete(data.id)\r\n                                              }\r\n                                            >\r\n                                              <DeleteIcon fontSize=\"small\" />\r\n                                            </Button>\r\n                                          </Tooltip>\r\n                                          : <></>}\r\n                                      </div>\r\n                                    </Box>\r\n                                    <Typography\r\n                                      sx={{ fontSize: '16.5px', p: 1 }}\r\n                                      dangerouslySetInnerHTML={{\r\n                                        __html: data.answer\r\n                                      }}\r\n                                    />\r\n                                  </AccordionDetails>\r\n                                </>\r\n                              ))}\r\n                              <Divider />\r\n                              <Box p={2}>\r\n                                <TablePagination\r\n                                  component=\"div\"\r\n                                  count={arr.questionCount}\r\n                                  onPageChange={handlePageChange}\r\n                                  onRowsPerPageChange={handleLimitChange}\r\n                                  page={page}\r\n                                  rowsPerPage={limit}\r\n                                  rowsPerPageOptions={[10, 20, 30, 40]}\r\n                                />\r\n                              </Box>\r\n                            </Accordion>\r\n                          ))}\r\n                        </TableContainer>\r\n                        <Box p={2}>\r\n                          <TablePagination\r\n                            component=\"div\"\r\n                            count={rowCategories}\r\n                            onPageChange={handleCategoriesPageChange}\r\n                            onRowsPerPageChange={handleCategoriesLimitChange}\r\n                            page={pageCategories}\r\n                            rowsPerPage={limitCategories}\r\n                            rowsPerPageOptions={[10, 20, 30, 40]}\r\n                          />\r\n                        </Box>\r\n                      </>\r\n                    ) : (\r\n                      <Paper\r\n                        sx={{\r\n                          display: 'flex',\r\n                          justifyContent: 'center',\r\n                          alignItems: 'center',\r\n                          textAlign: 'center',\r\n                          verticalAlign: 'middle',\r\n                          boxShadow: 'none'\r\n                        }}\r\n                        className=\"apptableContainer\"\r\n                      >\r\n                        <Typography variant=\"h5\" paragraph>\r\n                          Data not Found\r\n                        </Typography>\r\n                      </Paper>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n\r\n      {/* question */}\r\n      <div>\r\n        <Dialog open={ischeck} onClose={handleClose} fullWidth maxWidth=\"xs\">\r\n          <DialogTitle\r\n            sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n          >\r\n            {question.status === 0 ? 'Inactive' : 'Active'}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText\r\n              style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n            >\r\n              {question.status === 0\r\n                ? 'Are you sure you want to Active?'\r\n                : 'Are you sure you want to Inactive?'}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} variant=\"outlined\" style={{marginRight: '10px'}}>Cancel</Button>\r\n            <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={handleSwitchCheck} variant=\"outlined\" style={{marginRight: '10px'}}>Yes</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      <div>\r\n        <Dialog open={isDel} onClose={handleClose} fullWidth maxWidth=\"xs\">\r\n          <DialogTitle\r\n            sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n          >\r\n            Delete\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText\r\n              style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n            >\r\n              Are you sure you want to Delete?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} variant=\"outlined\" style={{marginRight: '10px'}}>Cancel</Button>\r\n            <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={handleDelete} variant=\"outlined\" style={{marginRight: '10px'}}>Yes</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      <div>\r\n        <Dialog open={isOpen} onClose={handleClose} fullWidth>\r\n          <DialogTitle\r\n            sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n          >\r\n            {question.id ? 'Edit Question' : 'Add Question'}{' '}\r\n            {'(' + question.name + ')'}\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: 'absolute',\r\n                right: 13,\r\n                top: 13,\r\n                color: (theme) => theme.palette.grey[500]\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <FormControl fullWidth>\r\n              <label>Question</label>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Question\"\r\n                type=\"text\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                name=\"question\"\r\n                value={question.question}\r\n                onChange={(e) => {\r\n                  handleChange(e);\r\n                  validateQuestion(e);\r\n                }}\r\n                required={true}\r\n              />\r\n            </FormControl>\r\n            <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n              {isQuestionError && QuestionErrorMsg}\r\n            </FormHelperText>\r\n            <FormControl sx={{ mt: 2 }} fullWidth>\r\n              <label>Answer</label>\r\n              <div style={{ marginTop: '9px' }}>\r\n                <JoditEditor\r\n                  ref={editor}\r\n                  value={question.answer}\r\n                  className=\"answer\"\r\n                  onChange={(e: any) => {\r\n                    handleChange1(e);\r\n                    validateAnswer(e);\r\n                  }}\r\n                />\r\n              </div>\r\n              <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                {isAnswerError && AnswerErrorMsg}\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </DialogContent>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              padding: '8px'\r\n            }}\r\n          >\r\n            <FormHelperText\r\n              style={{\r\n                color: 'red',\r\n                height: '22px',\r\n                margin: 'none',\r\n                padding: '8px 0px'\r\n              }}\r\n            >\r\n              {isUserError && UserErrorMsg}\r\n            </FormHelperText>\r\n            <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={saveQuestion}>Save</Button>\r\n          </Box>\r\n        </Dialog>\r\n      </div>\r\n\r\n      {/* Categories */}\r\n      <div>\r\n        <Dialog open={check} onClose={handleClose} fullWidth maxWidth=\"xs\">\r\n          <DialogTitle\r\n            sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n          >\r\n            {question.status === 0 ? 'Inactive' : 'Active'}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText\r\n              style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n            >\r\n              {question.status === 0\r\n                ? 'Are you sure you want to Active?'\r\n                : 'Are you sure you want to Inactive?'}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} variant=\"outlined\" style={{marginRight: '10px'}}>Cancel</Button>\r\n            <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={handleSwitchCheckCategories} variant=\"outlined\" style={{marginRight: '10px'}}>Yes</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      <div>\r\n        <Dialog open={Del} onClose={handleClose} fullWidth maxWidth=\"xs\">\r\n          <DialogTitle\r\n            sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n          >\r\n            Delete\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText\r\n              style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n            >\r\n              Are you sure you want to Delete?\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} variant=\"outlined\" style={{marginRight: '10px'}}>Cancel</Button>\r\n            <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={handleDeleteCategories} variant=\"outlined\" style={{marginRight: '10px'}}>Yes</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      <div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          PaperProps={{ sx: { height: '40%' } }}\r\n          fullWidth\r\n          maxWidth=\"xs\"\r\n        >\r\n          <DialogTitle\r\n            sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n          >\r\n            {question.id ? 'Edit Question Category ' : 'Add Question Category'}\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleClose}\r\n              sx={{\r\n                position: 'absolute',\r\n                right: 13,\r\n                top: 13,\r\n                color: (theme) => theme.palette.grey[500]\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"Question Category\"\r\n              type=\"text\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              name=\"name\"\r\n              value={question.name}\r\n              onChange={(arr) => {\r\n                handleChange(arr);\r\n                validateName(arr);\r\n              }}\r\n              required={true}\r\n            />\r\n            <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n              {isNameError && NameErrorMsg}\r\n            </FormHelperText>\r\n          </DialogContent>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              padding: '8px'\r\n            }}\r\n          >\r\n            <FormHelperText\r\n              style={{\r\n                color: 'red',\r\n                height: '22px',\r\n                margin: 'none',\r\n                padding: '8px 0px'\r\n              }}\r\n            >\r\n              {isUserError && UserErrorMsg}\r\n            </FormHelperText>\r\n            <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={saveQuestionCategories}>Save</Button>\r\n          </Box>\r\n        </Dialog>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","initialState","id","question","answer","name","Question","isLoading","setIsLoading","useState","ischeck","setIsCheck","isOpen","setIsOpen","isDel","setIsDel","open","setOpen","check","setCheck","Del","setDel","page","setPage","limit","setLimit","pageCategories","setPageCategories","limitCategories","setLimitCategories","rowCategories","setRowCategories","setQuestion","user","setUser","isNameError","setNameError","NameErrorMsg","setNameErrorMsg","setAnswer","isQuestionError","setQuestionError","QuestionErrorMsg","setQuestionErrorMsg","isAnswerError","setAnswerError","AnswerErrorMsg","setAnswerErrorMsg","isUserError","setUserError","UserErrorMsg","setUserErrorMsg","errorFlag","setErrorFlag","credentail","setCredentail","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","useEffect","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","isAddPermission","getData","editor","useRef","navigate","useNavigate","reg","RegExp","handleChange","e","value","target","handleClose","async","startIndex","fetchRecord","startIndexCategories","fetchRecordCategories","token","refreshToken","obj","res","APIservice","httpPost","recordList","totalRecords","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","POSITION","TOP_RIGHT","handleAddForCategoryName","handlePageChange","event","newPage","handleLimitChange","parseInt","_jsxs","_Fragment","ToastContainer","style","top","left","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","pt","pb","pl","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","color","HomeIcon","Typography","variant","fontWeight","Button","sx","lineHeight","onClick","size","AddTwoToneIcon","fontSize","direction","xs","Card","Loader1","length","TableContainer","map","arr","index","Accordion","mt","AccordionSummary","expandIcon","ExpandMoreIcon","bgcolor","textTransform","Tooltip","isActive","arrow","Switch","disabled","email","checked","handleSwitchCategories","inputProps","backgroundColor","mr","handleEditCategoryName","str","EditTwoToneIcon","categoriesId","handleClickisAdd","handleDeleteCategoriesDialog","DeleteIcon","data","AccordionDetails","lg","md","sm","p","padding","handleSwitch","mx","handleClickisEdit","no","que","ans","handleClickisDelete","dangerouslySetInnerHTML","__html","Divider","TablePagination","component","count","questionCount","onPageChange","onRowsPerPageChange","rowsPerPage","rowsPerPageOptions","handleCategoriesPageChange","Paper","textAlign","verticalAlign","boxShadow","paragraph","Dialog","onClose","fullWidth","DialogTitle","m","DialogContent","DialogContentText","letterSpacing","DialogActions","marginRight","IconButton","right","palette","grey","CloseIcon","dividers","FormControl","TextField","autoFocus","margin","label","type","onChange","validateQuestion","required","FormHelperText","height","marginTop","JoditEditor","ref","handleChange1","validateAnswer","flag","preventDefault","validateForm1","val","console","log","PaperProps","test","validateName","validateForm"],"sourceRoot":""}