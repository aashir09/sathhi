{"version":3,"file":"static/js/9673.00b0f10a.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/UserList/UserList.tsx","../node_modules/@mui/icons-material/AddTwoTone.js","../node_modules/@mui/icons-material/LockPerson.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Box,\r\n  Breadcrumbs,\r\n  Stack,\r\n  Typography,\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  FormHelperText,\r\n  IconButton,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n  useTheme,\r\n  styled,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  TextField,\r\n  FormLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  InputAdornment,\r\n  Paper,\r\n  Checkbox\r\n} from '@mui/material';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\nimport validator from 'validator';\r\nimport Footer from 'src/components/Footer';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Loader1 from 'src/content/Loader';\r\nimport { Form, Row, Col } from 'react-bootstrap';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../smallScreen.css';\r\nimport { UserPages } from 'src/models/userpages';\r\nimport LockPersonIcon from '@mui/icons-material/LockPerson';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2)\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle\r\n      sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n      {...other}\r\n    >\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 13,\r\n            top: 13,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\n\r\nconst initialState = {\r\n  id: 0,\r\n  // image: '',\r\n  firstName: '',\r\n  middleName: '',\r\n  lastName: '',\r\n  email: '',\r\n  confirmEmail: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  contactNo: '',\r\n  gender: '',\r\n  isReceiveMail: false,\r\n  isReceiveNotification: false\r\n};\r\n\r\nfunction UserList() {\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [limit, setLimit] = React.useState<number>(10);\r\n  const [row, setRow] = useState<number>(10);\r\n  const [isDel, setIsDel] = React.useState(false);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showPassword1, setShowPassword1] = useState(false);\r\n  const [user, setUser] = React.useState<any>([]);\r\n  const [userValue, setUserValue] = React.useState<any>(initialState);\r\n  const [image, setImage] = React.useState('');\r\n  const [isloading, setIsLoading] = React.useState(false);\r\n  const [ischeck, setIsCheck] = useState(false);\r\n  const [isGenderError, setGenderError] = useState(false);\r\n  const [GenderErrorMsg, setGenderErrorMsg] = useState('');\r\n  const [isUserError, setUserError] = useState(false);\r\n  const [UserErrorMsg, setUserErrorMsg] = useState('');\r\n  const [isblock, setIsBlock] = useState(false);\r\n  const [errorFlag, setErrorFlag] = useState(false);\r\n  let [searchString, setSearchString] = useState('');\r\n  const navigate = useNavigate();\r\n  let [credentail, setCredentail] = useState<any>();\r\n  const [userPages, setUserPages] = useState<UserPages[]>([]);\r\n  const [isUserPagePermissionOpen, setIsUserPagePermissionOpen] = useState(false);\r\n  // window.onpopstate = () => {\r\n  //   navigate(-1);\r\n  // }  \r\n\r\n  const [isReadPermission, setIsReadPermission] = useState(true);\r\n  const [isWritePermission, setIsWritePermission] = useState(true);\r\n  const [isEditPermission, setIsEditPermission] = useState(true);\r\n  const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n\r\n  let [apiUrl, setApiUrl] = useState<any>();\r\n\r\n  React.useEffect(() => {\r\n    let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n    setCredentail(cred);\r\n    if (cred) {\r\n      if (cred.roleId != 1) {\r\n        let ind = cred.pagePermissions.findIndex((c: any) => c.title === \"Block Users\");\r\n        if (ind >= 0) {\r\n          setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n          setIsWritePermission(cred.pagePermissions[ind].isAddPermission)\r\n          setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n          setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n          if (cred.pagePermissions[ind].isReadPermission)\r\n            loadData();\r\n          loadjson();\r\n        }\r\n      } else {\r\n        loadData();\r\n        loadjson();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const loadjson = async () => {\r\n    let res = await fetch('/admin/variable.json'); // Adjust the file path as needed\r\n    let url = await res.json();\r\n    setApiUrl(url);\r\n    apiUrl = url;\r\n  }\r\n\r\n  const loadData = async () => {\r\n    await getdata(page, limit);\r\n    //await getUserPages();\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const getdata = async (startIndex: number, fetchRecord: number) => {\r\n    try {\r\n      if (searchString) {\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord,\r\n          searchString: searchString ? searchString : ''\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/users/getAllUsers',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setUser(res.recordList);\r\n        setRow(res.totalRecords);\r\n      } else {\r\n        setIsLoading(true);\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/users/getAllUsers',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setUser(res.recordList);\r\n        setRow(res.totalRecords);\r\n        if (res && res.status == 200) {\r\n          setIsOpen(false);\r\n        } else if (res.status == 401) {\r\n          navigate('/admin');\r\n          localStorage.clear();\r\n        } else if (res.status == 500) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 400) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 300) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 404) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsOpen(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const [isFirstNameError, setFirstNameError] = useState(false);\r\n  const [firstNameErrorMsg, setFirstNameErrorMsg] = useState('');\r\n  const validateFirstName = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    if (value) {\r\n      if (validator.isAlpha(value)) {\r\n        setFirstNameError(false);\r\n        setFirstNameErrorMsg('');\r\n      } else {\r\n        setFirstNameError(true);\r\n        setFirstNameErrorMsg('Only alphabet');\r\n      }\r\n    } else {\r\n      setFirstNameError(true);\r\n      setFirstNameErrorMsg('Firstname is required');\r\n    }\r\n  };\r\n\r\n  const [isMiddleNameError, setMiddleNameError] = useState(false);\r\n  const [middleNameErrorMsg, setMiddleNameErrorMsg] = useState('');\r\n  const validateMiddleName = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    if (value) {\r\n      if (validator.isAlpha(value)) {\r\n        setMiddleNameError(false);\r\n        setMiddleNameErrorMsg('');\r\n      } else {\r\n        setMiddleNameError(true);\r\n        setMiddleNameErrorMsg('Only alphabet');\r\n      }\r\n    } else {\r\n      setMiddleNameError(true);\r\n      setMiddleNameErrorMsg('Middlename is required');\r\n    }\r\n  };\r\n\r\n  const [isLastNameError, setLastNameError] = useState(false);\r\n  const [lastNameErrorMsg, setLastNameErrorMsg] = useState('');\r\n  const validateLastName = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    if (value) {\r\n      if (validator.isAlpha(value)) {\r\n        setLastNameError(false);\r\n        setLastNameErrorMsg('');\r\n      } else {\r\n        setLastNameError(true);\r\n        setLastNameErrorMsg(' Only alphabet');\r\n      }\r\n    } else {\r\n      setLastNameError(true);\r\n      setLastNameErrorMsg('Lastname is required');\r\n    }\r\n  };\r\n\r\n  const [isEmailValidateError, setIsEmailValidateError] = useState(false);\r\n  const [emailValidateErrorMsg, setEmailValidateErrorMsg] = useState('');\r\n  const validateEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    if (value) {\r\n      if (validator.isEmail(value)) {\r\n        setIsEmailValidateError(false);\r\n        setEmailValidateErrorMsg('');\r\n      } else {\r\n        setIsEmailValidateError(true);\r\n        setEmailValidateErrorMsg('Invalid Email');\r\n      }\r\n    } else {\r\n      setIsEmailValidateError(true);\r\n      setEmailValidateErrorMsg('Email is required');\r\n    }\r\n  };\r\n\r\n  const mediumRegex = new RegExp(\r\n    '^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{8,})'\r\n  );\r\n  const [isPasswordValidateError, setIsPasswordValidateError] = useState(false);\r\n  const [passwordValidateErrorMsg, setPasswordValidateErrorMsg] = useState('');\r\n  const ValidatePassword = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    if (value) {\r\n      if (!mediumRegex.test(event.target.value)) {\r\n        setIsPasswordValidateError(true);\r\n        setPasswordValidateErrorMsg('The password must be more than 8 characters and contain both letters and numbers');\r\n      } else {\r\n        setIsPasswordValidateError(false);\r\n        setPasswordValidateErrorMsg('');\r\n      }\r\n    } else {\r\n      setIsPasswordValidateError(true);\r\n      setPasswordValidateErrorMsg('Password is required');\r\n    }\r\n  };\r\n\r\n  const [isEmailError, setIsEmailError] = useState(false);\r\n  const [confirmEmailValidateErrorMsg, setConfirmEmailValidateErrorMsg] = useState('');\r\n  const confirmEmailValidation = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    if (value) {\r\n      if (!(userValue.email === value)) {\r\n        setIsEmailError(true);\r\n        setConfirmEmailValidateErrorMsg('Email and confirm email must matched');\r\n      } else {\r\n        setIsEmailError(false);\r\n        setConfirmEmailValidateErrorMsg('');\r\n      }\r\n    } else {\r\n      setIsEmailError(true);\r\n      setConfirmEmailValidateErrorMsg('Confirm email is required');\r\n    }\r\n  };\r\n\r\n  const [isConfirmPasswordError, setIsConfirmPasswordError] = useState(false);\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\r\n  const confirmPasswordValidation = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    if (value) {\r\n      if (!(userValue.password === value)) {\r\n        setIsConfirmPasswordError(true);\r\n        setConfirmPasswordError('Password and confirm password must matched');\r\n      } else {\r\n        setIsConfirmPasswordError(false);\r\n        setConfirmPasswordError('');\r\n      }\r\n    } else {\r\n      setIsConfirmPasswordError(true);\r\n      setConfirmPasswordError('Confirm password is required');\r\n    }\r\n  };\r\n\r\n  const phoneRegex = new RegExp(\r\n    '^[+]?[(]?[0-9]{3}[)]?[-s.]?[0-9]{3}[-s.]?[0-9]{4,6}$'\r\n  );\r\n  const [isPhoneValidateError, setIsPhoneValidateError] = useState(false);\r\n  const [phoneValidateErrorMsg, setPhoneValidateErrorMsg] = useState('');\r\n  const ValidatePhone = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    if (value) {\r\n      if (!phoneRegex.test(event.target.value)) {\r\n        setIsPhoneValidateError(true);\r\n        setPhoneValidateErrorMsg('Contact No must be 10 digit');\r\n      } else {\r\n        setIsPhoneValidateError(false);\r\n        setPhoneValidateErrorMsg('');\r\n      }\r\n    } else {\r\n      setIsPhoneValidateError(true);\r\n      setPhoneValidateErrorMsg('Contact No is required');\r\n    }\r\n  };\r\n\r\n  const validateGender = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    if (value) {\r\n      setGenderError(false);\r\n      setGenderErrorMsg('');\r\n    } else {\r\n      setGenderError(true);\r\n      setGenderErrorMsg('Gender is required');\r\n    }\r\n  };\r\n\r\n  const validateForm = (e: any) => {\r\n    e.preventDefault();\r\n    var flag = true;\r\n    if (!userValue.firstName) {\r\n      setFirstNameError(true);\r\n      setFirstNameErrorMsg('Firstname is required');\r\n      flag = false;\r\n    } else {\r\n      if (validator.isAlpha(userValue.firstName)) {\r\n        setFirstNameError(false);\r\n        setFirstNameErrorMsg('');\r\n      } else {\r\n        setFirstNameError(true);\r\n        setFirstNameErrorMsg('Only alphabet');\r\n        flag = false;\r\n      }\r\n    }\r\n    if (!userValue.middleName) {\r\n      setMiddleNameError(true);\r\n      setMiddleNameErrorMsg('Middlename is required');\r\n      flag = false;\r\n    } else {\r\n      if (validator.isAlpha(userValue.middleName)) {\r\n        setMiddleNameError(false);\r\n        setMiddleNameErrorMsg('');\r\n      } else {\r\n        setMiddleNameError(true);\r\n        setMiddleNameErrorMsg('Only alphabet');\r\n        flag = false;\r\n      }\r\n    }\r\n    if (!userValue.lastName) {\r\n      setLastNameError(true);\r\n      setLastNameErrorMsg('Lastname is required');\r\n      flag = false;\r\n    } else {\r\n      if (validator.isAlpha(userValue.lastName)) {\r\n        setLastNameError(false);\r\n        setLastNameErrorMsg('');\r\n      } else {\r\n        setLastNameError(true);\r\n        setLastNameErrorMsg(' Only alphabet');\r\n        flag = false;\r\n      }\r\n    }\r\n    if (!userValue.email) {\r\n      setIsEmailValidateError(true);\r\n      setEmailValidateErrorMsg('Email is required');\r\n      flag = false;\r\n    } else {\r\n      if (validator.isEmail(userValue.email)) {\r\n        setIsEmailValidateError(false);\r\n        setEmailValidateErrorMsg('');\r\n      } else {\r\n        setIsEmailValidateError(true);\r\n        setEmailValidateErrorMsg('Invalid email');\r\n        flag = false;\r\n      }\r\n    }\r\n    if (!userValue.id) {\r\n      if (!userValue.confirmEmail) {\r\n        setIsEmailError(true);\r\n        setConfirmEmailValidateErrorMsg('Confirm Email is required');\r\n        flag = false;\r\n      } else {\r\n        if (!(userValue.email === userValue.confirmEmail)) {\r\n          setIsEmailError(true);\r\n          setConfirmEmailValidateErrorMsg(\r\n            'Email and confirm email must matched'\r\n          );\r\n          flag = false;\r\n        } else {\r\n          setIsEmailError(false);\r\n          setConfirmEmailValidateErrorMsg('');\r\n        }\r\n      }\r\n      if (!userValue.password) {\r\n        setIsPasswordValidateError(true);\r\n        setPasswordValidateErrorMsg('Password is required');\r\n        flag = false;\r\n      } else {\r\n        if (!mediumRegex.test(userValue.password)) {\r\n          setIsPasswordValidateError(true);\r\n          setPasswordValidateErrorMsg('Password is required');\r\n          flag = false;\r\n        } else {\r\n          setIsPasswordValidateError(false);\r\n          setPasswordValidateErrorMsg('');\r\n        }\r\n      }\r\n      if (!userValue.confirmPassword) {\r\n        setIsConfirmPasswordError(true);\r\n        setConfirmPasswordError('Confirm password is required');\r\n        flag = false;\r\n      } else {\r\n        if (!(userValue.password === userValue.confirmPassword)) {\r\n          setIsConfirmPasswordError(true);\r\n          setConfirmPasswordError('Password and confirm password must matched');\r\n          flag = false;\r\n        } else {\r\n          setIsConfirmPasswordError(false);\r\n          setConfirmPasswordError('');\r\n        }\r\n      }\r\n    }\r\n    if (!userValue.contactNo) {\r\n      setIsPhoneValidateError(true);\r\n      setPhoneValidateErrorMsg('Contact No is required');\r\n      flag = false;\r\n    } else {\r\n      if (!phoneRegex.test(userValue.contactNo)) {\r\n        setIsPhoneValidateError(true);\r\n        setPhoneValidateErrorMsg('Contact No must be 10 digit');\r\n        flag = false;\r\n      } else {\r\n        setIsPhoneValidateError(false);\r\n        setPhoneValidateErrorMsg('');\r\n      }\r\n    }\r\n    if (!userValue.gender) {\r\n      setGenderError(true);\r\n      setGenderErrorMsg('Gender is required ');\r\n      flag = false;\r\n    } else {\r\n      setGenderError(false);\r\n      setGenderErrorMsg('');\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  const handleClickisAdd = () => {\r\n    setUserValue(initialState);\r\n    setIsOpen(true);\r\n    setGenderError(false);\r\n    setGenderErrorMsg('');\r\n    setIsPhoneValidateError(false);\r\n    setPhoneValidateErrorMsg('');\r\n    setIsConfirmPasswordError(false);\r\n    setConfirmPasswordError('');\r\n    setIsEmailError(false);\r\n    setConfirmEmailValidateErrorMsg('');\r\n    setIsPasswordValidateError(false);\r\n    setPasswordValidateErrorMsg('');\r\n    setIsEmailValidateError(false);\r\n    setEmailValidateErrorMsg('');\r\n    setLastNameError(false);\r\n    setLastNameErrorMsg('');\r\n    setMiddleNameError(false);\r\n    setMiddleNameErrorMsg('');\r\n    setFirstNameError(false);\r\n    setFirstNameErrorMsg('');\r\n    setUserError(false);\r\n    setUserErrorMsg('');\r\n    setImage('');\r\n  };\r\n\r\n  const handleClickisEdit = (\r\n    no: number,\r\n    img: string,\r\n    st: string,\r\n    st1: string,\r\n    st2: string,\r\n    em: string,\r\n    em1: string,\r\n    con: string,\r\n    gen: string,\r\n    isMail: boolean,\r\n    isNotification: boolean\r\n  ) => {\r\n    let obj = {\r\n      id: no,\r\n      image: img,\r\n      firstName: st,\r\n      middleName: st1,\r\n      lastName: st2,\r\n      email: em,\r\n      confirmEmail: em1,\r\n      contactNo: con,\r\n      gender: gen,\r\n      isReceiveMail : isMail ? true : false,\r\n      isReceiveNotification : isNotification ? true : false\r\n\r\n    };\r\n    if (img) setImage( img);\r\n    else setImage('');\r\n    setUserValue(obj);\r\n    setIsOpen(true);\r\n    setGenderError(false);\r\n    setGenderErrorMsg('');\r\n    setIsPhoneValidateError(false);\r\n    setPhoneValidateErrorMsg('');\r\n    setIsConfirmPasswordError(false);\r\n    setConfirmPasswordError('');\r\n    setIsEmailError(false);\r\n    setConfirmEmailValidateErrorMsg('');\r\n    setIsPasswordValidateError(false);\r\n    setPasswordValidateErrorMsg('');\r\n    setIsEmailValidateError(false);\r\n    setEmailValidateErrorMsg('');\r\n    setLastNameError(false);\r\n    setLastNameErrorMsg('');\r\n    setMiddleNameError(false);\r\n    setMiddleNameErrorMsg('');\r\n    setFirstNameError(false);\r\n    setFirstNameErrorMsg('');\r\n    setUserError(false);\r\n    setUserErrorMsg('');\r\n  };\r\n\r\n  const editCommunityDialog = (e: any) => {\r\n    setUserValue(e);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleCloseUsersDialog = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleCloseSwitch = () => {\r\n    setIsCheck(false);\r\n  };\r\n\r\n  const handleSwitch = async (id: number) => {\r\n    let obj = {\r\n      id: id\r\n    };\r\n    setUserValue(obj);\r\n    setIsCheck(true);\r\n  };\r\n\r\n  const handleCheckSwitch = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: userValue.id\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/users/activeInactiveUsers',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setIsCheck(false);\r\n    getdata(0, limit);\r\n  };\r\n\r\n  const handlechange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    setUserValue({\r\n      ...userValue,\r\n      [name]: value\r\n    });\r\n    setIsOpen(true);\r\n    if (errorFlag === true) {\r\n      setUserError(false);\r\n      setUserErrorMsg('');\r\n    }\r\n  };\r\n\r\n  const handleSwitchReceiveMail = (e: any) => {\r\n    const { name, checked } = e.target;\r\n\r\n    setUserValue({\r\n      ...userValue,\r\n      \"isReceiveMail\": checked//value === \"on\" ? true : false\r\n    });\r\n  }\r\n\r\n  const handleSwitchReceiveNotification = (e: any) => {\r\n    debugger\r\n    const { name, checked } = e.target;\r\n    setUserValue({\r\n      ...userValue,\r\n      \"isReceiveNotification\": checked//value === \"on\" ? true : false\r\n    });\r\n  }\r\n\r\n  const saveUsers = async (e: any) => {\r\n    debugger\r\n    var flag = validateForm(e);\r\n    if (flag) {\r\n      try {\r\n        if (userValue.id) {\r\n          //Update\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          let val = {\r\n            id: userValue.id,\r\n            image: image ? image : null,\r\n            firstName: userValue.firstName,\r\n            middleName: userValue.middleName,\r\n            lastName: userValue.lastName,\r\n            email: userValue.email,\r\n            contactNo: userValue.contactNo,\r\n            gender: userValue.gender,\r\n            isReceiveNotification: userValue.isReceiveNotification,\r\n            isReceiveMail: userValue.isReceiveMail\r\n          };\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/users/updateUser',\r\n            val,\r\n            token,\r\n            refreshToken\r\n          );\r\n          if (res && res.status == 200) {\r\n            setPage(0);\r\n            getdata(page * limit, limit);\r\n            setIsOpen(false);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 400) {\r\n            console.log(res);\r\n\r\n            flag = false;\r\n            if (!(flag && errorFlag)) {\r\n              setUserError(true);\r\n              setUserErrorMsg(res.message);\r\n              setErrorFlag(true);\r\n            }\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        } else {\r\n          //insert\r\n          const token = localStorage.getItem('SessionToken');\r\n          const refreshToken = localStorage.getItem('RefreshToken');\r\n          if (image) {\r\n            userValue.image = image;\r\n          }\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/users/insertUser',\r\n            userValue,\r\n            token,\r\n            refreshToken\r\n          );\r\n\r\n          if (res && res.status == 200) {\r\n            getdata(0, limit);\r\n            setPage(0);\r\n            setIsOpen(false);\r\n          } else if (res.status == 401) {\r\n            navigate('/admin');\r\n            localStorage.clear();\r\n          } else if (res.status == 400) {\r\n            flag = false;\r\n            if (!(flag && errorFlag)) {\r\n              setUserError(true);\r\n              setUserErrorMsg(res.message);\r\n              setErrorFlag(true);\r\n            }\r\n          } else if (res.status == 500) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 300) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          } else if (res.status == 404) {\r\n            setIsOpen(false);\r\n            toast.error(res.message, {\r\n              autoClose: 6000,\r\n              hideProgressBar: true,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              draggable: true,\r\n              progress: undefined,\r\n              theme: 'colored',\r\n              position: toast.POSITION.TOP_RIGHT\r\n            });\r\n          }\r\n        }\r\n      } catch (error: any) {\r\n        setIsOpen(false);\r\n        toast.error(error, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onFileChange = (e: any) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      setImage(reader.result.toString());\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const onImageChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    setUserValue({\r\n      ...userValue,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const searchData = (e) => {\r\n    setSearchString(e.target.value);\r\n    searchString = e.target.value;\r\n    getdata(page, limit);\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n    getdata(newPage * limit, limit);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n    setPage(0);\r\n    getdata(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const theme = useTheme();\r\n\r\n  const getUserPages = async (userId: number) => {\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost('/api/admin/userPages/getUserPages', { \"userId\": userId }, token, refreshToken);\r\n      if (res && res.status == 200) {\r\n        setUserPages(res.recordList);\r\n        setIsUserPagePermissionOpen(true);\r\n      }\r\n    } catch (error) {\r\n      setIsOpen(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const saveUserPagePermissions = async (e: any) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      const pages = userPages.filter(c => c.isSelected == true);\r\n      for (let i = 0; i < userPages.length; i++) {\r\n        let page = userPages[i].pages.filter(c => c.isSelected == true);\r\n        for (let ele of page) {\r\n          pages.push(ele);\r\n        }\r\n        // pages.push(page);\r\n      }\r\n      let obj = {\r\n        \"userId\": userPages[0].userId,\r\n        \"userPages\": pages\r\n      }\r\n      const res = await APIservice.httpPost('/api/admin/userPages/insertUpdateUserPages', obj, token, refreshToken);\r\n      if (res && res.status == 200) {\r\n        setUserPages(res.recordList);\r\n        handleCloseUsersPagePermissionDialog();\r\n      }\r\n    } catch (error) {\r\n      setIsOpen(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>, userPage: UserPages, permission: string) => {\r\n    setUserPages((prevUserPages) => {\r\n      const ind = prevUserPages.findIndex((c) => c.id === userPage.id);\r\n\r\n      if (ind !== -1) {\r\n        return prevUserPages.map((x, i) =>\r\n          i === ind\r\n            ? {\r\n              ...x,\r\n              [permission]: !x[permission], // Update the specific permission property\r\n            }\r\n            : x\r\n        );\r\n      }\r\n      else {\r\n        let pageIndex = prevUserPages.findIndex((c) => c.id === userPage.parentId);\r\n        const ind = prevUserPages[pageIndex].pages.findIndex((c) => c.id == userPage.id)\r\n        if (ind !== -1) {\r\n          const page = prevUserPages[pageIndex].pages.map((x, i) =>\r\n            i === ind\r\n              ? {\r\n                ...x,\r\n                [permission]: !x[permission], // Update the specific permission property\r\n              }\r\n              : x\r\n          );\r\n          prevUserPages[pageIndex].pages = page;\r\n          prevUserPages = [...prevUserPages];\r\n          return prevUserPages\r\n        }\r\n      }\r\n      return prevUserPages;\r\n    });\r\n    if (event.target.checked) {\r\n      setUserPages((prevUserPages) => {\r\n        const ind = prevUserPages.findIndex((c) => c.id === userPage.id);\r\n\r\n        if (ind !== -1) {\r\n          return prevUserPages.map((x, i) =>\r\n            i === ind\r\n              ? {\r\n                ...x,\r\n                isSelected: true, // Update the specific permission property\r\n              }\r\n              : x\r\n          );\r\n        }\r\n        else {\r\n          let pageIndex = prevUserPages.findIndex((c) => c.id === userPage.parentId);\r\n          const ind = prevUserPages[pageIndex].pages.findIndex((c) => c.id == userPage.id)\r\n          if (ind !== -1) {\r\n            const page = prevUserPages[pageIndex].pages.map((x, i) =>\r\n              i === ind\r\n                ? {\r\n                  ...x,\r\n                  isSelected: true, // Update the specific permission property\r\n                }\r\n                : x\r\n            );\r\n            prevUserPages[pageIndex].pages = page;\r\n            return prevUserPages\r\n          }\r\n        }\r\n        return prevUserPages;\r\n      });\r\n    } else {\r\n      setUserPages((prevUserPages) => {\r\n        const ind = prevUserPages.findIndex((c) => c.id === userPage.id);\r\n\r\n        if (ind !== -1) {\r\n          return prevUserPages.map((x, i) =>\r\n            i === ind\r\n              ? {\r\n                ...x,\r\n                isSelected: (x.isReadPermission || x.isAddPermission || x.isEditPermission || x.isDeletePermission) ? true : false, // Update the specific permission property\r\n              }\r\n              : x\r\n          );\r\n        }\r\n        else {\r\n          let pageIndex = prevUserPages.findIndex((c) => c.id === userPage.parentId);\r\n          const ind = prevUserPages[pageIndex].pages.findIndex((c) => c.id == userPage.id)\r\n          if (ind !== -1) {\r\n            const page = prevUserPages[pageIndex].pages.map((x, i) =>\r\n              i === ind\r\n                ? {\r\n                  ...x,\r\n                  isSelected: (x.isReadPermission || x.isAddPermission || x.isEditPermission || x.isDeletePermission) ? true : false, // Update the specific permission property\r\n                }\r\n                : x\r\n            );\r\n            prevUserPages[pageIndex].pages = page;\r\n            return prevUserPages\r\n          }\r\n        }\r\n        return prevUserPages;\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  const handleCloseUsersPagePermissionDialog = () => {\r\n    setIsUserPagePermissionOpen(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        style={{ top: '10%', left: '80%' }}\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>User List</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box p={1}>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link to=\"/admin\" style={{ display: 'flex', color: 'black' }}>\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                    style={{ fontWeight: 'bold' }}\r\n                  >\r\n                    Users\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container spacing={1.5}>\r\n                <Grid item>\r\n                  {isWritePermission ? <>\r\n\r\n                    <Button\r\n                      className=\"buttonLarge\"\r\n                      sx={{\r\n                        mt: { xs: 0, md: 0, padding: '8.3px', top: '3px' },\r\n                        display: 'flex',\r\n                        alignItems: 'center'\r\n                      }}\r\n                      variant=\"contained\"\r\n                      onClick={handleClickisAdd}\r\n                      size=\"small\"\r\n                    >\r\n                      <AddTwoToneIcon fontSize=\"small\" /> Create Users\r\n                    </Button>\r\n                    <Button\r\n                      className=\"button\"\r\n                      sx={{\r\n                        mt: { xs: 0, md: 0, padding: '8.3px', top: '3px' },\r\n                        display: 'flex',\r\n                        alignItems: 'center'\r\n                      }}\r\n                      variant=\"contained\"\r\n                      onClick={handleClickisAdd}\r\n                      size=\"small\"\r\n                    >\r\n                      <AddTwoToneIcon fontSize=\"small\" />\r\n                    </Button>\r\n                  </> : <></>}\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl\r\n                    sx={{ mt: { xs: 0.3, md: 0.3, lg: 0.3, sm: 0.3 } }}\r\n                  >\r\n                    <TextField\r\n                      size=\"small\"\r\n                      name=\"searchString\"\r\n                      value={searchString}\r\n                      onChange={(e) => searchData(e)}\r\n                      id=\"outlined-basic\"\r\n                      label=\"Search\"\r\n                      variant=\"outlined\"\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <>\r\n              <Card className=\"Usercard\">\r\n                <div>\r\n                  {isloading ? (\r\n                    <Loader1 title=\"Loading...\" />\r\n                  ) : (\r\n                    <>\r\n                      <Divider />\r\n                      {user && user.length > 0 ? (\r\n                        <>\r\n                          <TableContainer className=\"UsertableContainer\">\r\n                            <Table stickyHeader>\r\n                              <TableHead>\r\n                                <TableRow>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Sr. NO\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Name\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Contact No\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Email\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell>\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Gender\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                  <TableCell align=\"right\">\r\n                                    <Typography\r\n                                      noWrap\r\n                                      style={{\r\n                                        fontSize: '13px',\r\n                                        fontWeight: 'bold',\r\n                                        marginBottom: 'none'\r\n                                      }}\r\n                                    >\r\n                                      Action\r\n                                    </Typography>\r\n                                  </TableCell>\r\n                                </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                {user.map((arr: any, index: number) => {\r\n                                  return (\r\n                                    <TableRow hover key={index}>\r\n                                      <TableCell>\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                        >\r\n                                          {page * limit + index + 1}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <Stack\r\n                                          direction=\"row\"\r\n                                          alignItems=\"center\"\r\n                                          spacing={2}\r\n                                        >\r\n                                          {arr.image ? (\r\n                                            <Avatar\r\n                                              src={\r\n                                                \r\n                                                arr.image\r\n                                              }\r\n                                            ></Avatar>\r\n                                          ) : (\r\n                                            <Avatar>\r\n                                              {arr.firstName\r\n                                                ? arr.firstName[0]\r\n                                                : null}\r\n                                            </Avatar>\r\n                                          )}\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {arr.firstName} {arr.middleName}{' '}\r\n                                            {arr.lastName}\r\n                                          </Typography>\r\n                                        </Stack>\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                        >\r\n                                          {arr.contactNo}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                        >\r\n                                          {arr.email}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell>\r\n                                        <Typography\r\n                                          variant=\"body1\"\r\n                                          fontWeight=\"bold\"\r\n                                          color=\"text.primary\"\r\n                                          gutterBottom\r\n                                          noWrap\r\n                                        >\r\n                                          {arr.gender}\r\n                                        </Typography>\r\n                                      </TableCell>\r\n                                      <TableCell\r\n                                        align=\"right\"\r\n                                      >\r\n                                        {isEditPermission ? <>\r\n                                          <Tooltip\r\n                                            title={\r\n                                              arr.isActive === 0\r\n                                                ? 'Inactive'\r\n                                                : 'Active'\r\n                                            }\r\n                                            arrow\r\n                                          >\r\n                                            <Switch\r\n                                              disabled={credentail?.email === \"demo@admin.com\"}\r\n                                              checked={\r\n                                                arr.isActive === 0 ? false : true\r\n                                              }\r\n                                              onClick={(e) =>\r\n                                                handleSwitch(arr.id)\r\n                                              }\r\n                                              inputProps={{\r\n                                                'aria-label': 'controlled'\r\n                                              }}\r\n                                            />\r\n                                          </Tooltip>\r\n                                          <Tooltip title=\"Edit\" arrow>\r\n                                            <IconButton\r\n                                              sx={{\r\n                                                '&:hover': {\r\n                                                  background:\r\n                                                    theme.colors.primary.lighter\r\n                                                },\r\n                                                color: theme.palette.primary.main,\r\n                                                height: '40px'\r\n                                              }}\r\n                                              color=\"inherit\"\r\n                                              size=\"small\"\r\n                                              disabled={credentail?.email === \"demo@admin.com\"}\r\n                                              onClick={(e) =>\r\n                                                handleClickisEdit(\r\n                                                  arr.id,\r\n                                                  arr.image,\r\n                                                  arr.firstName,\r\n                                                  arr.middleName,\r\n                                                  arr.lastName,\r\n                                                  arr.email,\r\n                                                  arr.email,\r\n                                                  arr.contactNo,\r\n                                                  arr.gender,\r\n                                                  arr.isReceiveMail,\r\n                                                  arr.isReceiveNotification\r\n                                                )\r\n                                              }\r\n                                            >\r\n                                              <EditTwoToneIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                          </Tooltip>\r\n                                          <Tooltip title=\"Page Permission\" arrow>\r\n                                            <IconButton\r\n                                              sx={{\r\n                                                '&:hover': {\r\n                                                  background:\r\n                                                    theme.colors.primary.lighter\r\n                                                },\r\n                                                color: theme.palette.primary.main,\r\n                                                height: '40px'\r\n                                              }}\r\n                                              color=\"inherit\"\r\n                                              size=\"small\"\r\n                                              disabled={credentail?.email === \"demo@admin.com\"}\r\n                                              onClick={(e) =>\r\n                                                getUserPages(arr.id)\r\n                                              }\r\n                                            >\r\n                                              <LockPersonIcon fontSize=\"small\" />\r\n                                            </IconButton>\r\n                                          </Tooltip>\r\n                                        </> : <></>}\r\n\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  );\r\n                                })}\r\n                              </TableBody>\r\n                            </Table>\r\n                          </TableContainer>\r\n                          <Box p={2}>\r\n                            <TablePagination\r\n                              component=\"div\"\r\n                              count={row}\r\n                              onPageChange={handlePageChange}\r\n                              onRowsPerPageChange={handleLimitChange}\r\n                              page={page}\r\n                              rowsPerPage={limit}\r\n                              rowsPerPageOptions={[10, 20, 30, 40]}\r\n                            />\r\n                          </Box>\r\n                        </>\r\n                      ) : (\r\n                        <Paper\r\n                          sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            textAlign: 'center',\r\n                            verticalAlign: 'middle',\r\n                            boxShadow: 'none'\r\n                          }}\r\n                          className=\"Usercard\"\r\n                        >\r\n                          <Typography variant=\"h5\" paragraph>\r\n                            Data not Found\r\n                          </Typography>\r\n                        </Paper>\r\n                      )}\r\n                      <div>\r\n                        <Dialog\r\n                          open={ischeck}\r\n                          onClose={handleCloseSwitch}\r\n                          fullWidth\r\n                          maxWidth=\"xs\"\r\n                        >\r\n                          <DialogTitle\r\n                            sx={{\r\n                              m: 0,\r\n                              p: 2,\r\n                              fontSize: '20px',\r\n                              fontWeight: 'bolder'\r\n                            }}\r\n                          >\r\n                            {userValue.status === 0 ? 'Inactive' : 'Active'}\r\n                          </DialogTitle>\r\n                          <DialogContent>\r\n                            <DialogContentText\r\n                              style={{\r\n                                fontSize: '1rem',\r\n                                letterSpacing: '0.00938em'\r\n                              }}\r\n                            >\r\n                              {userValue.status === 0\r\n                                ? 'Are you sure you want to Active?'\r\n                                : 'Are you sure you want to Inactive?'}\r\n                            </DialogContentText>\r\n                          </DialogContent>\r\n                          <DialogActions>\r\n                            <Button onClick={handleCloseSwitch} variant=\"outlined\" style={{marginRight: '10px'}}>Cancel</Button>\r\n                            <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={handleCheckSwitch} variant=\"outlined\" style={{marginRight: '10px'}}>Yes</Button>\r\n                          </DialogActions>\r\n                        </Dialog>\r\n                      </div>\r\n                      <div>\r\n                        <BootstrapDialog\r\n                          open={isOpen}\r\n                          onClose={handleCloseUsersDialog}\r\n                          maxWidth=\"md\"\r\n                        >\r\n                          <BootstrapDialogTitle\r\n                            id=\"customized-dialog-title\"\r\n                            onClose={handleCloseUsersDialog}\r\n                          >\r\n                            {userValue.id ? 'Edit Users' : 'Add Users'}\r\n                          </BootstrapDialogTitle>\r\n                          <DialogContent dividers>\r\n                            {/* <Container> */}\r\n                            <Form>\r\n                              <FormGroup\r\n                                style={{\r\n                                  alignItems: 'center',\r\n                                  marginBottom: '10px'\r\n                                }}\r\n                              >\r\n                                <input\r\n                                  style={{\r\n                                    display: 'none'\r\n                                  }}\r\n                                  id=\"icon-button-file\"\r\n                                  type=\"file\"\r\n                                  accept=\"image/*\"\r\n                                  name=\"image\"\r\n                                  // value = {userValue.image}\r\n                                  onChange={(e) => {\r\n                                    onFileChange(e);\r\n                                    onImageChange(e);\r\n                                  }}\r\n                                  className=\"upload-button\"\r\n                                />\r\n                                <label htmlFor=\"icon-button-file\">\r\n                                  {image ? (\r\n                                    <img\r\n                                      src={image}\r\n                                      alt=\"userProfile\"\r\n                                      style={{\r\n                                        height: '100px',\r\n                                        width: '100px'\r\n                                        // borderRadius: '50%',\r\n                                      }}\r\n                                    />\r\n                                  ) : (\r\n                                    <img\r\n                                      src=\"/userLogo.png\"\r\n                                      alt=\"userProfile\"\r\n                                      style={{\r\n                                        height: '100px',\r\n                                        width: '100px'\r\n                                        // borderRadius: '50%',\r\n                                      }}\r\n                                    />\r\n                                  )}\r\n                                </label>\r\n                              </FormGroup>\r\n                              <Row>\r\n                                <Col sm>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    margin=\"dense\"\r\n                                    label=\"Firstname\"\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"firstName\"\r\n                                    value={userValue.firstName}\r\n                                    onChange={(e: any) => {\r\n                                      validateFirstName(e);\r\n                                      handlechange(e);\r\n                                    }}\r\n                                    required={true}\r\n                                  />\r\n                                  <FormHelperText\r\n                                    style={{ color: 'red', height: '22px' }}\r\n                                  >\r\n                                    {isFirstNameError && firstNameErrorMsg}\r\n                                  </FormHelperText>\r\n                                </Col>\r\n                                <Col sm>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    margin=\"dense\"\r\n                                    label=\"Middlename\"\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"middleName\"\r\n                                    value={userValue.middleName}\r\n                                    onChange={(e: any) => {\r\n                                      validateMiddleName(e);\r\n                                      handlechange(e);\r\n                                    }}\r\n                                    required={true}\r\n                                  />\r\n                                  <FormHelperText\r\n                                    style={{ color: 'red', height: '22px' }}\r\n                                  >\r\n                                    {isMiddleNameError && middleNameErrorMsg}\r\n                                  </FormHelperText>\r\n                                </Col>\r\n                                <Col sm>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    margin=\"dense\"\r\n                                    label=\"Lastname\"\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"lastName\"\r\n                                    value={userValue.lastName}\r\n                                    onChange={(e: any) => {\r\n                                      validateLastName(e);\r\n                                      handlechange(e);\r\n                                    }}\r\n                                    required={true}\r\n                                  />\r\n                                  <FormHelperText\r\n                                    style={{ color: 'red', height: '22px' }}\r\n                                  >\r\n                                    {isLastNameError && lastNameErrorMsg}\r\n                                  </FormHelperText>\r\n                                </Col>\r\n                              </Row>\r\n                              <Row>\r\n                                <Col xs={12} md={6}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    margin=\"dense\"\r\n                                    label=\"Email\"\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"email\"\r\n                                    value={userValue.email}\r\n                                    onChange={(e: any) => {\r\n                                      validateEmail(e);\r\n                                      handlechange(e);\r\n                                    }}\r\n                                    required={true}\r\n                                  />\r\n                                  <FormHelperText\r\n                                    style={{ color: 'red', height: '22px' }}\r\n                                  >\r\n                                    {isEmailValidateError &&\r\n                                      emailValidateErrorMsg}\r\n                                  </FormHelperText>\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    margin=\"dense\"\r\n                                    label=\"Confirm Email\"\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"confirmEmail\"\r\n                                    value={userValue.confirmEmail}\r\n                                    onChange={(e: any) => {\r\n                                      confirmEmailValidation(e);\r\n                                      handlechange(e);\r\n                                    }}\r\n                                    required={true}\r\n                                  />\r\n                                  <FormHelperText\r\n                                    style={{ color: 'red', height: '22px' }}\r\n                                  >\r\n                                    {isEmailError &&\r\n                                      confirmEmailValidateErrorMsg}\r\n                                  </FormHelperText>\r\n                                </Col>\r\n                              </Row>\r\n                              {!userValue.id && (\r\n                                <>\r\n                                  <Row>\r\n                                    <Col xs={12} md={6}>\r\n                                      <TextField\r\n                                        fullWidth\r\n                                        margin=\"dense\"\r\n                                        label=\"Password\"\r\n                                        type={\r\n                                          showPassword === true\r\n                                            ? 'text'\r\n                                            : 'password'\r\n                                        }\r\n                                        variant=\"outlined\"\r\n                                        name=\"password\"\r\n                                        value={userValue.password}\r\n                                        onChange={(e: any) => {\r\n                                          ValidatePassword(e);\r\n                                          handlechange(e);\r\n                                        }}\r\n                                        required={true}\r\n                                        InputProps={{\r\n                                          endAdornment: (\r\n                                            <InputAdornment\r\n                                              position=\"start\"\r\n                                              onClick={() =>\r\n                                                setShowPassword(!showPassword)\r\n                                              }\r\n                                            >\r\n                                              {showPassword === true ? (\r\n                                                <VisibilityIcon />\r\n                                              ) : (\r\n                                                <VisibilityOffIcon />\r\n                                              )}\r\n                                            </InputAdornment>\r\n                                          )\r\n                                        }}\r\n                                      />\r\n                                      <FormHelperText\r\n                                        style={{ color: 'red', height: '32px', width: '322px' }}\r\n                                      >\r\n                                        {isPasswordValidateError &&\r\n                                          passwordValidateErrorMsg}\r\n                                      </FormHelperText>\r\n                                    </Col>\r\n                                    <Col xs={12} md={6}>\r\n                                      <TextField\r\n                                        fullWidth\r\n                                        margin=\"dense\"\r\n                                        label=\"Confirm Password\"\r\n                                        type={\r\n                                          showPassword1 === true\r\n                                            ? 'text'\r\n                                            : 'password'\r\n                                        }\r\n                                        variant=\"outlined\"\r\n                                        name=\"confirmPassword\"\r\n                                        value={userValue.confirmPassword}\r\n                                        onChange={(e: any) => {\r\n                                          confirmPasswordValidation(e);\r\n                                          handlechange(e);\r\n                                        }}\r\n                                        required={true}\r\n                                        InputProps={{\r\n                                          endAdornment: (\r\n                                            <InputAdornment\r\n                                              position=\"start\"\r\n                                              onClick={() =>\r\n                                                setShowPassword1(!showPassword1)\r\n                                              }\r\n                                            >\r\n                                              {showPassword1 === true ? (\r\n                                                <VisibilityIcon />\r\n                                              ) : (\r\n                                                <VisibilityOffIcon />\r\n                                              )}\r\n                                            </InputAdornment>\r\n                                          )\r\n                                        }}\r\n                                      />\r\n                                      <FormHelperText\r\n                                        style={{ color: 'red', height: '22px' }}\r\n                                      >\r\n                                        {isConfirmPasswordError &&\r\n                                          confirmPasswordError}\r\n                                      </FormHelperText>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </>\r\n                              )}\r\n                              <Row>\r\n                                <Col xs={12} md={6}>\r\n                                  <TextField\r\n                                    fullWidth\r\n                                    margin=\"dense\"\r\n                                    id=\"name\"\r\n                                    label=\"Contact No\"\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"contactNo\"\r\n                                    value={userValue.contactNo}\r\n                                    onChange={(e: any) => {\r\n                                      ValidatePhone(e);\r\n                                      handlechange(e);\r\n                                    }}\r\n                                    required={true}\r\n                                  />\r\n                                  <FormHelperText\r\n                                    style={{ color: 'red', height: '22px' }}\r\n                                  >\r\n                                    {isPhoneValidateError &&\r\n                                      phoneValidateErrorMsg}\r\n                                  </FormHelperText>\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                  <FormControl style={{ verticalAlign: 'sub' }}>\r\n                                    <FormLabel id=\"demo-radio-buttons-group-label\">\r\n                                      Gender\r\n                                    </FormLabel>\r\n                                    <RadioGroup\r\n                                      row\r\n                                      aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                      name=\"radio-buttons-group\"\r\n                                    >\r\n                                      <FormControlLabel\r\n                                        name=\"gender\"\r\n                                        value=\"Female\"\r\n                                        checked={userValue.gender === 'Female'}\r\n                                        onChange={(e: any) => {\r\n                                          validateGender(e);\r\n                                          handlechange(e);\r\n                                        }}\r\n                                        control={<Radio />}\r\n                                        label=\"Female\"\r\n                                      />\r\n                                      <FormControlLabel\r\n                                        name=\"gender\"\r\n                                        value=\"Male\"\r\n                                        checked={userValue.gender === 'Male'}\r\n                                        onChange={(e: any) => {\r\n                                          validateGender(e);\r\n                                          handlechange(e);\r\n                                        }}\r\n                                        control={<Radio />}\r\n                                        label=\"Male\"\r\n                                      />\r\n                                    </RadioGroup>\r\n                                    <FormHelperText\r\n                                      style={{ color: 'red', height: '22px' }}\r\n                                    >\r\n                                      {isGenderError && GenderErrorMsg}\r\n                                    </FormHelperText>\r\n                                  </FormControl>\r\n                                </Col>\r\n                              </Row>\r\n                              <Row>\r\n                                <Col xs={12} md={6}>\r\n                                  Receive Email<Switch\r\n                                    checked={\r\n                                      (userValue.isReceiveMail) ? true : false\r\n                                    }\r\n                                    onClick={(e) =>\r\n                                      handleSwitchReceiveMail(e)\r\n                                    }\r\n                                    inputProps={{\r\n                                      'aria-label': 'controlled'\r\n                                    }}\r\n                                  />\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                  Receive Notification<Switch\r\n                                    checked={\r\n                                      (userValue.isReceiveNotification) ? true : false\r\n                                    }\r\n                                    onClick={(e) =>\r\n                                      handleSwitchReceiveNotification(e)\r\n                                    }\r\n                                    inputProps={{\r\n                                      'aria-label': 'controlled'\r\n                                    }}\r\n                                  />\r\n\r\n                                </Col>\r\n                              </Row>\r\n                            </Form>\r\n                          </DialogContent>\r\n                          <Box\r\n                            sx={{\r\n                              display: 'flex',\r\n                              justifyContent: 'space-between',\r\n                              p: '8px'\r\n                            }}\r\n                          >\r\n                            <FormHelperText\r\n                              style={{\r\n                                color: 'red',\r\n                                height: '22px',\r\n                                margin: 'none',\r\n                                padding: '8px'\r\n                              }}\r\n                            >\r\n                              {isUserError && UserErrorMsg}\r\n                            </FormHelperText>\r\n                            <Typography>\r\n                              <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={handleCloseUsersDialog} variant=\"outlined\" style={{marginRight: '10px'}}>Cancel</Button>\r\n                            <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={saveUsers} variant=\"outlined\" style={{marginRight: '10px'}}>Save</Button>\r\n                            </Typography>\r\n                            \r\n                          </Box>\r\n                        </BootstrapDialog>\r\n                      </div>\r\n                      <div>\r\n                        <BootstrapDialog\r\n                          open={isUserPagePermissionOpen}\r\n                          onClose={handleCloseUsersPagePermissionDialog}\r\n                          maxWidth=\"md\"\r\n                        >\r\n                          <BootstrapDialogTitle\r\n                            id=\"customized-dialog-title\"\r\n                            onClose={handleCloseUsersPagePermissionDialog}\r\n                          >\r\n                            Page Permission\r\n                          </BootstrapDialogTitle>\r\n                          <DialogContent dividers>\r\n                            {/* {JSON.stringify(userPages)} */}\r\n                            <TableContainer className=\"UsertableContainer\">\r\n                              <Table stickyHeader>\r\n                                <TableHead>\r\n                                  <TableRow>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Page\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Read Permission\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Write Permission\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Edit Permission\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Delete Permission\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                  {userPages && userPages.length > 0 &&\r\n                                    userPages.map((userPage: UserPages, index: number) => {\r\n                                      return (\r\n                                        <React.Fragment key={index}>\r\n                                          <TableRow hover>\r\n                                            <TableCell>\r\n                                              <Typography\r\n                                                variant=\"body1\"\r\n                                                fontWeight=\"bold\"\r\n                                                color=\"text.primary\"\r\n                                                gutterBottom\r\n                                                noWrap\r\n                                              >\r\n                                                {userPage.type === \"link\" && (\r\n                                                  <Checkbox\r\n                                                    checked={userPage.isSelected}\r\n                                                    onChange={(e) => {\r\n                                                      handleChange(e, userPage, \"isSelected\");\r\n                                                      userPage.isSelected = !userPage.isSelected;\r\n                                                    }}\r\n                                                    inputProps={{ 'aria-label': 'controlled' }}\r\n                                                  />\r\n                                                )}\r\n                                                {userPage.title}\r\n                                              </Typography>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                              {userPage.type === \"link\" && (\r\n                                                <Checkbox\r\n                                                  checked={userPage.isReadPermission}\r\n                                                  onChange={(e) => {\r\n                                                    handleChange(e, userPage, \"isReadPermission\");\r\n                                                    userPage.isReadPermission = !userPage.isReadPermission;\r\n                                                  }}\r\n                                                  inputProps={{ 'aria-label': 'controlled' }}\r\n                                                />\r\n                                              )}\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                              {userPage.type === \"link\" && (\r\n                                                <Checkbox\r\n                                                  checked={userPage.isAddPermission}\r\n                                                  onChange={(e) => {\r\n                                                    handleChange(e, userPage, \"isAddPermission\");\r\n                                                    userPage.isAddPermission = !userPage.isAddPermission;\r\n                                                  }}\r\n                                                  inputProps={{ 'aria-label': 'controlled' }}\r\n                                                />\r\n                                              )}\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                              {userPage.type === \"link\" && (\r\n                                                <Checkbox\r\n                                                  checked={userPage.isEditPermission}\r\n                                                  onChange={(e) => {\r\n                                                    handleChange(e, userPage, \"isEditPermission\");\r\n                                                    userPage.isEditPermission = !userPage.isEditPermission;\r\n                                                  }}\r\n                                                  inputProps={{ 'aria-label': 'controlled' }}\r\n                                                />\r\n                                              )}\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                              {userPage.type === \"link\" && (\r\n                                                <Checkbox\r\n                                                  checked={userPage.isDeletePermission}\r\n                                                  onChange={(e) => {\r\n                                                    handleChange(e, userPage, \"isDeletePermission\");\r\n                                                    userPage.isDeletePermission = !userPage.isDeletePermission;\r\n                                                  }}\r\n                                                  inputProps={{ 'aria-label': 'controlled' }}\r\n                                                />\r\n                                              )}\r\n                                            </TableCell>\r\n                                          </TableRow>\r\n                                          {userPage.pages && userPage.pages.length > 0 && (\r\n                                            userPage.pages.map((page: UserPages, innerIndex: number) => (\r\n                                              <TableRow hover key={innerIndex}>\r\n                                                <TableCell>\r\n                                                  <Typography\r\n                                                    variant=\"body1\"\r\n                                                    fontWeight=\"bold\"\r\n                                                    color=\"text.primary\"\r\n                                                    gutterBottom\r\n                                                    noWrap\r\n                                                  >\r\n                                                    {page.type === \"link\" && (\r\n                                                      <Checkbox\r\n                                                        checked={page.isSelected}\r\n                                                        onChange={(e) => {\r\n                                                          handleChange(e, page, \"isSelected\");\r\n                                                          page.isSelected = !page.isSelected;\r\n                                                        }}\r\n                                                        inputProps={{ 'aria-label': 'controlled' }}\r\n                                                      />\r\n                                                    )}\r\n                                                    {page.title}\r\n                                                  </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                  {page.type === \"link\" && (\r\n                                                    <Checkbox\r\n                                                      checked={page.isReadPermission}\r\n                                                      onChange={(e) => {\r\n                                                        handleChange(e, page, \"isReadPermission\");\r\n                                                        page.isReadPermission = !page.isReadPermission;\r\n                                                      }}\r\n                                                      inputProps={{ 'aria-label': 'controlled' }}\r\n                                                    />\r\n                                                  )}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                  {page.type === \"link\" && (\r\n                                                    <Checkbox\r\n                                                      checked={page.isAddPermission}\r\n                                                      onChange={(e) => {\r\n                                                        handleChange(e, page, \"isAddPermission\");\r\n                                                        page.isAddPermission = !page.isAddPermission;\r\n                                                      }}\r\n                                                      inputProps={{ 'aria-label': 'controlled' }}\r\n                                                    />\r\n                                                  )}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                  {page.type === \"link\" && (\r\n                                                    <Checkbox\r\n                                                      checked={page.isEditPermission}\r\n                                                      onChange={(e) => {\r\n                                                        handleChange(e, page, \"isEditPermission\");\r\n                                                        page.isEditPermission = !page.isEditPermission;\r\n                                                      }}\r\n                                                      inputProps={{ 'aria-label': 'controlled' }}\r\n                                                    />\r\n                                                  )}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                  {page.type === \"link\" && (\r\n                                                    <Checkbox\r\n                                                      checked={page.isDeletePermission}\r\n                                                      onChange={(e) => {\r\n                                                        handleChange(e, page, \"isDeletePermission\");\r\n                                                        page.isDeletePermission = !page.isDeletePermission;\r\n                                                      }}\r\n                                                      inputProps={{ 'aria-label': 'controlled' }}\r\n                                                    />\r\n                                                  )}\r\n                                                </TableCell>\r\n                                              </TableRow>\r\n                                            ))\r\n                                          )}\r\n                                        </React.Fragment>\r\n                                      );\r\n                                    })}\r\n                                </TableBody>\r\n                              </Table>\r\n                            </TableContainer>\r\n                          </DialogContent>\r\n                          <Box\r\n                            sx={{\r\n                              display: 'flex',\r\n                              justifyContent: 'space-between',\r\n                              p: '8px'\r\n                            }}\r\n                          >\r\n                            <FormHelperText\r\n                              style={{\r\n                                color: 'red',\r\n                                height: '22px',\r\n                                margin: 'none',\r\n                                padding: '8px'\r\n                              }}\r\n                            >\r\n                              {/* {isUserPagePermissionError && UserPagePermissionErrorMsg} */}\r\n                            </FormHelperText>\r\n                            <Typography>\r\n                              <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={handleCloseUsersPagePermissionDialog} variant=\"outlined\" style={{marginRight: '10px'}}>Cancel</Button>\r\n                              <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={saveUserPagePermissions} variant=\"outlined\" style={{marginRight: '10px'}}>Save</Button>\r\n                            </Typography>\r\n\r\n                          </Box>\r\n\r\n                        </BootstrapDialog>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </Card>\r\n            </>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      {/* <Footer /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddTwoTone');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 11c.7 0 1.37.1 2 .29V10c0-1.1-.9-2-2-2h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h6.26c-.79-1.13-1.26-2.51-1.26-4 0-3.87 3.13-7 7-7zM8.9 6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H8.9V6z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 13c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5zm0 2c.83 0 1.5.67 1.5 1.5S18.83 18 18 18s-1.5-.67-1.5-1.5.67-1.5 1.5-1.5zm0 6c-1.03 0-1.94-.52-2.48-1.32.73-.42 1.57-.68 2.48-.68s1.75.26 2.48.68c-.54.8-1.45 1.32-2.48 1.32z\"\n}, \"1\")], 'LockPerson');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from './TableContext';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n      className,\n      component = defaultComponent,\n      padding = 'normal',\n      size = 'medium',\n      stickyHeader = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","BootstrapDialog","Dialog","padding","BootstrapDialogTitle","onClose","other","_jsxs","DialogTitle","sx","m","p","fontSize","fontWeight","IconButton","onClick","position","right","top","color","palette","grey","CloseIcon","initialState","id","firstName","middleName","lastName","email","confirmEmail","password","confirmPassword","contactNo","gender","isReceiveMail","isReceiveNotification","page","setPage","React","limit","setLimit","row","setRow","useState","isDel","setIsDel","isOpen","setIsOpen","showPassword","setShowPassword","showPassword1","setShowPassword1","user","setUser","userValue","setUserValue","image","setImage","isloading","setIsLoading","ischeck","setIsCheck","isGenderError","setGenderError","GenderErrorMsg","setGenderErrorMsg","isUserError","setUserError","UserErrorMsg","setUserErrorMsg","isblock","setIsBlock","errorFlag","setErrorFlag","searchString","setSearchString","navigate","useNavigate","credentail","setCredentail","userPages","setUserPages","isUserPagePermissionOpen","setIsUserPagePermissionOpen","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","apiUrl","setApiUrl","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","isAddPermission","loadData","loadjson","async","res","fetch","url","json","getdata","startIndex","fetchRecord","token","refreshToken","obj","APIservice","httpPost","recordList","totalRecords","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","POSITION","TOP_RIGHT","isFirstNameError","setFirstNameError","firstNameErrorMsg","setFirstNameErrorMsg","isMiddleNameError","setMiddleNameError","middleNameErrorMsg","setMiddleNameErrorMsg","isLastNameError","setLastNameError","lastNameErrorMsg","setLastNameErrorMsg","isEmailValidateError","setIsEmailValidateError","emailValidateErrorMsg","setEmailValidateErrorMsg","mediumRegex","RegExp","isPasswordValidateError","setIsPasswordValidateError","passwordValidateErrorMsg","setPasswordValidateErrorMsg","isEmailError","setIsEmailError","confirmEmailValidateErrorMsg","setConfirmEmailValidateErrorMsg","isConfirmPasswordError","setIsConfirmPasswordError","confirmPasswordError","setConfirmPasswordError","phoneRegex","isPhoneValidateError","setIsPhoneValidateError","phoneValidateErrorMsg","setPhoneValidateErrorMsg","validateGender","event","name","value","target","handleClickisAdd","handleCloseUsersDialog","handleCloseSwitch","handlechange","e","useTheme","handleChange","userPage","permission","prevUserPages","map","x","i","pageIndex","parentId","pages","checked","isSelected","handleCloseUsersPagePermissionDialog","_Fragment","ToastContainer","style","left","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","HomeIcon","Typography","variant","Button","mt","xs","md","size","AddTwoToneIcon","FormControl","lg","sm","TextField","onChange","searchData","label","InputProps","startAdornment","InputAdornment","SearchIcon","direction","Card","Loader1","Divider","length","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","noWrap","marginBottom","align","TableBody","arr","index","hover","gutterBottom","Avatar","src","Tooltip","isActive","arrow","Switch","disabled","handleSwitch","inputProps","background","colors","primary","lighter","main","height","handleClickisEdit","no","img","st","st1","st2","em","em1","con","gen","isMail","isNotification","EditTwoToneIcon","userId","getUserPages","LockPersonIcon","TablePagination","component","count","onPageChange","handlePageChange","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","Paper","textAlign","verticalAlign","boxShadow","paragraph","open","fullWidth","DialogContent","DialogContentText","letterSpacing","DialogActions","marginRight","dividers","Form","FormGroup","type","accept","file","files","reader","FileReader","onload","result","toString","readAsDataURL","onFileChange","onImageChange","htmlFor","alt","width","Row","Col","margin","validator","validateFirstName","required","FormHelperText","validateMiddleName","validateLastName","validateEmail","confirmEmailValidation","test","ValidatePassword","endAdornment","VisibilityIcon","VisibilityOffIcon","confirmPasswordValidation","ValidatePhone","FormLabel","RadioGroup","FormControlLabel","control","Radio","handleSwitchReceiveMail","handleSwitchReceiveNotification","flag","preventDefault","validateForm","val","console","log","Checkbox","innerIndex","filter","ele","push","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","root","indeterminate","capitalize","_extends","vars","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","alpha","active","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useDefaultProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","clsx","getTableHeadUtilityClass","TableHeadRoot","tablelvl2","defaultComponent","Tablelvl2Context","Provider","as","role","getTableUtilityClass","TableRoot","borderCollapse","borderSpacing","typography","body2","captionSide","table","TableContext"],"sourceRoot":""}