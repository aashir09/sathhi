{"version":3,"file":"static/js/3348.1533c10b.chunk.js","mappings":"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","sources":["components/Label/index.tsx","components/PageTitleWrapper/index.tsx","../node_modules/react-bootstrap/esm/Table.js","content/Currency/index.tsx","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\n\r\ninterface LabelProps {\r\n  className?: string;\r\n  color?:\r\n    | 'primary'\r\n    | 'black'\r\n    | 'secondary'\r\n    | 'error'\r\n    | 'warning'\r\n    | 'success'\r\n    | 'info';\r\n  children?: ReactNode;\r\n}\r\n\r\nconst LabelWrapper = styled('span')(\r\n  ({ theme }) => `\r\n      background-color: ${theme.colors.alpha.black[5]};\r\n      padding: ${theme.spacing(0.5, 1)};\r\n      font-size: ${theme.typography.pxToRem(13)};\r\n      border-radius: ${theme.general.borderRadius};\r\n      display: inline-flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      max-height: ${theme.spacing(3)};\r\n      \r\n      &.MuiLabel {\r\n        &-primary {\r\n          background-color: ${theme.colors.primary.lighter};\r\n          color: ${theme.palette.primary.main}\r\n        }\r\n\r\n        &-black {\r\n          background-color: ${theme.colors.alpha.black[100]};\r\n          color: ${theme.colors.alpha.white[100]};\r\n        }\r\n        \r\n        &-secondary {\r\n          background-color: ${theme.colors.secondary.lighter};\r\n          color: ${theme.palette.secondary.main}\r\n        }\r\n        \r\n        &-success {\r\n          background-color: ${theme.colors.success.lighter};\r\n          color: ${theme.palette.success.main}\r\n        }\r\n        \r\n        &-warning {\r\n          background-color: ${theme.colors.warning.lighter};\r\n          color: ${theme.palette.warning.main}\r\n        }\r\n              \r\n        &-error {\r\n          background-color: ${theme.colors.error.lighter};\r\n          color: ${theme.palette.error.main}\r\n        }\r\n        \r\n        &-info {\r\n          background-color: ${theme.colors.info.lighter};\r\n          color: ${theme.palette.info.main}\r\n        }\r\n      }\r\n`\r\n);\r\n\r\nconst Label: FC<LabelProps> = ({\r\n  className,\r\n  color = 'secondary',\r\n  children,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\r\n      {children}\r\n    </LabelWrapper>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'black',\r\n    'secondary',\r\n    'error',\r\n    'warning',\r\n    'success',\r\n    'info'\r\n  ])\r\n};\r\n\r\nexport default Label;\r\n","import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from './../../components/PageTitleWrapper';\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  IconButton,\r\n  Stack,\r\n  Switch,\r\n  TableContainer,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme,\r\n  styled,\r\n  Paper,\r\n  Accordion,\r\n  AccordionSummary,\r\n  Checkbox,\r\n  Chip,\r\n  CardContent,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell\r\n} from '@mui/material';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport React, { useState, ChangeEvent, useEffect } from 'react';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../content/smallScreen.css';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { Currency as CurrencyModel } from 'src/models/currency';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport { CardHeader, Col, Row, Table } from 'react-bootstrap';\r\n// import { Label } from '@mui/icons-material';\r\nimport Label from 'src/components/Label';\r\n\r\nconst modules = {\r\n  toolbar: {\r\n    container: [\r\n      [{ header: [1, 2, false] }],\r\n      ['bold', 'italic', 'underline', 'strike'],\r\n      [{ list: 'ordered' }, { list: 'bullet' }]\r\n    ]\r\n  }\r\n};\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  '& .MuiDialogContent-root': {\r\n    padding: theme.spacing(2)\r\n  },\r\n  '& .MuiDialogActions-root': {\r\n    padding: theme.spacing(1)\r\n  },\r\n  '& .MuiPaper-root': {\r\n    height: '600px'\r\n  }\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle\r\n      sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n      {...other}\r\n    >\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 13,\r\n            top: 13,\r\n            color: (theme) => theme.palette.grey[500]\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n}\r\n\r\nconst initialState = {\r\n  id: 0,\r\n  name: '',\r\n  code: '',\r\n  symbol: '',\r\n  value: 0,\r\n  isDefault: null\r\n};\r\n\r\nconst Currency = () => {\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n  const [page, setPage] = useState<number>(0);\r\n  const [limit, setLimit] = useState<number>(10);\r\n  const [row, setRow] = useState<number>(10);\r\n  const [v1, setV1] = React.useState<any>(initialState);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const [isloading, setIsLoading] = useState(false);\r\n  const [ischeck, setIsCheck] = useState(false);\r\n  let [search, setSearch] = useState('');\r\n  const [currencies, setCurrencies] = React.useState<CurrencyModel[]>([]);\r\n  let [credentail, setCredentail] = useState<any>();\r\n  let [defCurrency, setDefCurrency] = useState<any>();\r\n\r\n  const [isReadPermission, setIsReadPermission] = useState(true);\r\n  const [isWritePermission, setIsWritePermission] = useState(true);\r\n  const [isEditPermission, setIsEditPermission] = useState(true);\r\n  const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n    setCredentail(cred);\r\n    if (cred) {\r\n      if (cred.roleId != 1) {\r\n        let ind = cred.pagePermissions.findIndex((c: any) => c.title === \"Block Users\");\r\n        if (ind >= 0) {\r\n          setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n          setIsWritePermission(cred.pagePermissions[ind].isAddPermission)\r\n          setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n          setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n          if (cred.pagePermissions[ind].isReadPermission)\r\n            loadData();\r\n        }\r\n      } else {\r\n        loadData();\r\n      }\r\n    }\r\n    // let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n    // setCredentail(cred);\r\n    // getdata(page, limit);\r\n  }, []);\r\n\r\n\r\n  const loadData = async () => {\r\n    await getdata(page, limit);\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const getdata = async (startIndex: number, fetchRecord: number) => {\r\n    try {\r\n      if (search) {\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord,\r\n          isActive: null,\r\n          searchString: search ? search : ''\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/currencies/getCurrencies',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setCurrencies(res.recordList);\r\n        setRow(res.totalRecords);\r\n      } else {\r\n        setIsLoading(true);\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n          startIndex: startIndex,\r\n          fetchRecord: fetchRecord,\r\n          isActive: null\r\n        };\r\n        const res = await APIservice.httpPost(\r\n          '/api/admin/currencies/getCurrencies',\r\n          obj,\r\n          token,\r\n          refreshToken\r\n        );\r\n        setCurrencies(res.recordList);\r\n        setRow(res.totalRecords);\r\n        if (res && res.status == 200) {\r\n          setIsOpen(false);\r\n        } else if (res.status == 401) {\r\n          navigate('/admin');\r\n          localStorage.clear();\r\n        } else if (res.status == 500) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 300) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 400) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        } else if (res.status == 404) {\r\n          setIsOpen(false);\r\n          toast.error(res.message, {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored',\r\n            position: toast.POSITION.TOP_RIGHT\r\n          });\r\n        }\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setIsOpen(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  const handleSwitch = async (id: number, status: number, defCurr ? :any) => {\r\n    debugger\r\n    let obj = {\r\n      id: id,\r\n      status: status\r\n    };\r\n    setV1(obj);\r\n    setDefCurrency(defCurr);\r\n    setIsCheck(true);\r\n  };\r\n\r\n  const handleSwitchCheck = async () => {\r\n    debugger\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    let obj = {\r\n      id: v1.id,\r\n      isDefault: !v1.status\r\n    };\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/currencies/setDefaultCurrency',\r\n      obj,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setIsCheck(false);\r\n    getdata(page * limit, limit);\r\n    console.log(defCurrency)\r\n    if (res && res.status == 200) {\r\n      localStorage.setItem('DefaultCurrency', JSON.stringify(defCurrency));\r\n      setIsOpen(false);\r\n    } else if (res.status == 401) {\r\n      navigate('/admin');\r\n      localStorage.clear();\r\n    } else if (res.status == 500) {\r\n      setIsOpen(false);\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 300) {\r\n      setIsOpen(false);\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 400) {\r\n      setIsOpen(false);\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 404) {\r\n      setIsOpen(false);\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsCheck(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer\r\n        style={{ top: '8.5%', right: '0%' }}\r\n        // position=\"top-right\"\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>Currency</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box pt={1.1} pb={1.1} pl={1}>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link to=\"/admin\" style={{ display: 'flex', color: 'black' }}>\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                    fontWeight=\"bold\"\r\n                  >\r\n                    Currency\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card style={{ height: 'calc(100vh - 228px)' }}>\r\n              <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                { }\r\n                {currencies && currencies.length > 0 ? (\r\n                  <>\r\n                    <TableContainer className=\"premiumAccounttableContainer\">\r\n                      <Table>\r\n                        <TableBody>\r\n                          {currencies.map((arr: any, index: number) => {\r\n                            return (\r\n                              <TableRow hover key={arr.id}>\r\n                                <TableCell>\r\n                                  <Grid sx={{py : 2 , px: 1}}>\r\n                                  <Grid container justifyContent=\"space-between\">\r\n\r\n                                    <Grid\r\n                                      item\r\n                                      sx={{\r\n                                        display: 'flex',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center'\r\n                                      }}\r\n                                    >\r\n\r\n                                      <Typography\r\n                                        sx={{\r\n                                          fontSize: '17px',\r\n                                          fontWeight: 'bold',\r\n                                          textTransform: 'capitalize',\r\n                                          color: '#495fff',\r\n                                          paddingRight: '10px',\r\n                                          display: 'block'\r\n                                        }}\r\n                                      >\r\n\r\n                                        {`${arr.name} (${arr.symbol} : ${arr.code})`}\r\n                                      </Typography>\r\n\r\n                                    </Grid>\r\n\r\n                                    <Grid\r\n                                      item\r\n                                      sx={{\r\n                                        display: 'flex',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center'\r\n                                      }}\r\n                                    >\r\n                                      {isEditPermission ? <>\r\n\r\n                                        {(arr.isDefault == 0) ? (\r\n\r\n\r\n                                          <Button\r\n                                            style={{ padding: '5px 14px', width: '150px' }}\r\n                                            variant={'contained'}\r\n                                            onClick={(e) => handleSwitch(arr.id, arr.isDefault === 0 ? 0 : 1,arr)}\r\n                                            disabled={credentail?.email === 'demo@admin.com'}\r\n                                          >\r\n                                            {'Set as Default'}\r\n                                          </Button>) :\r\n                                          (\r\n\r\n                                            <div style={{\r\n                                              textTransform: 'uppercase',\r\n                                              fontWeight: 'bold'\r\n                                            }}>\r\n                                              <Label color=\"success\">\r\n                                                {'Default Currency'}\r\n                                              </Label>\r\n                                            </div>\r\n                                          )}\r\n\r\n                                      </> : <></>}\r\n                                    </Grid>\r\n                                  </Grid>\r\n                                  <Typography style={{ 'display': 'flex', 'flexWrap': 'wrap', paddingBottom: '0px' }}>\r\n                                    {arr.paymentGateways.map((data: any) => (\r\n                                      <Typography\r\n                                        key={data.id}\r\n                                        style={{\r\n                                          paddingRight: '1.4%',\r\n                                          paddingTop: '1.4%'\r\n                                        }}\r\n                                      >\r\n                                        <Chip\r\n                                          label={data.paymentGateway}\r\n\r\n                                        >\r\n                                          {arr.name}\r\n                                        </Chip>\r\n                                      </Typography>\r\n                                    ))}\r\n                                  </Typography>\r\n                                  </Grid>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n\r\n                        {/* {currencies.map((arr: any, index: number) => (\r\n                          <Accordion key={arr.id} sx={{ mt: 1 }}>\r\n                            <AccordionSummary\r\n                              expandIcon={\r\n                                <ExpandMoreIcon sx={{ color: '#495fff' }} />\r\n                              }\r\n                              aria-controls=\"panel1a-content\"\r\n                              id=\"panel1a-header\"\r\n                              sx={{\r\n                                bgcolor: '#c7cdfd',\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between'\r\n                              }}\r\n                            >\r\n                              <Grid container justifyContent=\"space-between\">\r\n                                <Grid\r\n                                  item\r\n                                  sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center'\r\n                                  }}\r\n                                >\r\n                                  Name: {arr.name}\r\n                                  <Typography\r\n                                    sx={{\r\n                                      fontSize: '17px',\r\n                                      fontWeight: 'bold',\r\n                                      textTransform: 'capitalize',\r\n                                      color: '#495fff',\r\n                                      paddingRight: '10px',\r\n                                      display: 'block'\r\n                                    }}\r\n                                  >\r\n                                    Name: {arr.name}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    sx={{\r\n                                      fontSize: '17px',\r\n                                      fontWeight: 'bold',\r\n                                      textTransform: 'capitalize',\r\n                                      color: '#495fff',\r\n                                      paddingRight: '10px',\r\n                                      display: 'block'\r\n                                    }}\r\n                                  >\r\n                                    Symbol: {arr.symbol}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    sx={{\r\n                                      fontSize: '17px',\r\n                                      fontWeight: 'bold',\r\n                                      textTransform: 'capitalize',\r\n                                      color: '#495fff',\r\n                                      paddingRight: '10px',\r\n                                      display: 'block'\r\n                                    }}\r\n                                  >\r\n                                    Code: {arr.code}\r\n                                  </Typography>\r\n                                </Grid>\r\n\r\n                                <Grid\r\n                                  item\r\n                                  sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center',\r\n                                    alignItems: 'center'\r\n                                  }}\r\n                                >\r\n                                  {isEditPermission ? <>\r\n                                  <Tooltip\r\n                                    title=\"Click to save as a default\"\r\n                                    arrow\r\n                                  >\r\n                                  { (arr.isDefault == 0) ?(\r\n\r\n\r\n                                  <Button\r\n                                    sx={{ minWidth: 155 }}\r\n                                    variant={ 'contained'}\r\n                                    onClick={(e) => handleSwitch(arr.id, arr.isDefault === 0 ? 0 : 1)}\r\n                                    disabled={credentail?.email === 'demo@admin.com'}\r\n                                  >\r\n                                    {'Set as Default'}\r\n                                  </Button>):\r\n                                  (\r\n                                    <Typography variant=\"body1\" style={{'color': '#fff','padding': '0px 24px','fontWeight': '700'}}>\r\n                                    {'Default Currency'}\r\n                                  </Typography>\r\n                                  )}\r\n                                  </Tooltip>\r\n                                  </> : <></>}\r\n                                </Grid>\r\n                              </Grid>\r\n                            </AccordionSummary>\r\n                            {arr.paymentGateways &&\r\n                              arr.paymentGateways.length > 0 ? (\r\n                              <Grid\r\n\r\n                                sx={{\r\n                                  marginLeft: '10px'\r\n                                }}\r\n                              >\r\n                                <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                  <Typography\r\n                                    sx={{\r\n                                      fontSize: '17px',\r\n                                      fontWeight: 'bold',\r\n                                      textTransform: 'capitalize',\r\n                                      display: 'block'\r\n                                    }}\r\n                                  >\r\n                                    Payment Gateway\r\n                                  </Typography>\r\n                                </Grid>\r\n                                {arr.paymentGateways.map(\r\n                                  (data: any, dIndex: number) => (\r\n                                    <Grid\r\n                                      item\r\n                                      xs={12}\r\n                                      sm={12}\r\n                                      md={12}\r\n                                      lg={12}\r\n                                      key={data.id}\r\n                                    >\r\n                                      <Typography\r\n                                        sx={{\r\n                                          fontSize: '17px',\r\n                                          fontWeight: 'bold',\r\n                                          textTransform: 'capitalize'\r\n                                          // color: '#495fff'\r\n                                        }}\r\n                                      >\r\n                                        {dIndex + 1} {data.paymentGateway}\r\n                                        <br />\r\n                                      </Typography>\r\n                                    </Grid>\r\n                                  )\r\n                                )}\r\n                                <Typography style={{ marginBottom: '9px','display':'flex','flexWrap':'wrap' }}>\r\n                                  {arr.paymentGateways.map((data: any) => (\r\n                                    <Typography\r\n                                      key={data.id}\r\n                                      style={{\r\n                                        paddingLeft: '4%',\r\n                                        paddingTop: '1.4%',\r\n                                        paddingBottom: '1.4%'\r\n                                      }}\r\n                                    >\r\n                                      <Chip\r\n                                        label={data.paymentGateway}\r\n\r\n                                      >\r\n                                        {arr.name}\r\n                                      </Chip>\r\n                                    </Typography>\r\n                                  ))}\r\n                                </Typography>\r\n                              </Grid>\r\n                            ) : (\r\n                              <Paper\r\n                                sx={{\r\n                                  display: 'flex',\r\n                                  justifyContent: 'center',\r\n                                  alignItems: 'center',\r\n                                  textAlign: 'center',\r\n                                  verticalAlign: 'middle',\r\n                                  boxShadow: 'none'\r\n                                }}\r\n                                style={{ height: 'calc(100vh - 359px)' }}\r\n                              >\r\n                                <Typography variant=\"h5\" paragraph>\r\n                                  Data not Found\r\n                                </Typography>\r\n                              </Paper>\r\n                            )}\r\n                          </Accordion>\r\n ))} */}\r\n\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </>\r\n                ) : (\r\n                  <Paper\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'center',\r\n                      alignItems: 'center',\r\n                      textAlign: 'center',\r\n                      verticalAlign: 'middle',\r\n                      boxShadow: 'none'\r\n                    }}\r\n                    className=\"premiumAccounttableContainer\"\r\n                  >\r\n                    <Typography variant=\"h5\" paragraph>\r\n                      Data not Found\r\n                    </Typography>\r\n                  </Paper>\r\n                )}\r\n              </Box>\r\n              {/* </CardContent> */}\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <div>\r\n        <Dialog open={ischeck} onClose={handleClose} fullWidth maxWidth=\"xs\">\r\n\r\n          {(v1.status == 0) ? (\r\n            <>\r\n              <DialogTitle\r\n                sx={{ m: 0, p: 1, fontSize: '20px', fontWeight: 'bolder' }}\r\n              >\r\n                {'Set Default'}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText\r\n                  style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n                >\r\n                  {'Are you sure you want to set as default currency?'\r\n                  }\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose}  variant=\"outlined\" style={{marginRight: '10px'}}>Cancel</Button>\r\n                <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={handleSwitchCheck}  variant=\"outlined\" style={{marginRight: '10px'}}>Yes</Button>\r\n              </DialogActions>\r\n            </>) :\r\n            (\r\n              <><DialogContent sx={{ mt: 2, pb: 1 }}>\r\n                <DialogContentText\r\n                  style={{ fontSize: '1rem', letterSpacing: '0.00938em', marginTop: '1' }}\r\n                >\r\n                  {'There must be one currency set as default'}\r\n                </DialogContentText>\r\n              </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose}  variant=\"outlined\" style={{marginRight: '10px'}}>Cancel</Button>\r\n                </DialogActions>\r\n              </>\r\n            )\r\n          }\r\n        </Dialog>\r\n      </div>\r\n\r\n      <div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Currency;\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;"],"names":["LabelWrapper","styled","_ref","theme","colors","alpha","black","spacing","typography","pxToRem","general","borderRadius","primary","lighter","palette","main","white","secondary","success","warning","error","info","_ref2","className","color","children","rest","_jsx","PageTitle","Box","Container","maxWidth","React","ref","bsPrefix","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","responsiveClass","Dialog","padding","height","initialState","id","name","code","symbol","value","isDefault","Currency","navigate","useNavigate","page","setPage","useTheme","useState","limit","setLimit","row","setRow","v1","setV1","isOpen","setIsOpen","isloading","setIsLoading","ischeck","setIsCheck","search","setSearch","currencies","setCurrencies","credentail","setCredentail","defCurrency","setDefCurrency","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","useEffect","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","title","isAddPermission","loadData","async","getdata","startIndex","fetchRecord","token","refreshToken","obj","isActive","searchString","res","APIservice","httpPost","recordList","totalRecords","status","clear","toast","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","POSITION","TOP_RIGHT","handleClose","_jsxs","ToastContainer","style","top","right","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","pt","pb","pl","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","HomeIcon","Typography","fontWeight","direction","xs","Card","sx","width","length","_Fragment","TableContainer","Table","TableBody","map","arr","index","TableRow","TableCell","py","px","fontSize","textTransform","paddingRight","Button","onClick","e","defCurr","handleSwitch","disabled","email","Label","paddingBottom","paymentGateways","data","paddingTop","Chip","label","paymentGateway","Paper","textAlign","verticalAlign","boxShadow","paragraph","open","onClose","fullWidth","DialogTitle","m","p","DialogContent","DialogContentText","letterSpacing","DialogActions","marginRight","console","log","setItem","stringify","mt","marginTop","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","root","inProps","useDefaultProps","ownerState","_objectWithoutPropertiesLoose","composedClasses","composeClasses","_extends","useUtilityClasses","component","clsx"],"sourceRoot":""}