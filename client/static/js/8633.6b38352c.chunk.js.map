{"version":3,"file":"static/js/8633.6b38352c.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/registrationScreen/registrationScreen.tsx","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/material/Switch/Switch.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Box,\r\n    Breadcrumbs,\r\n    Button,\r\n    Card,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Divider,\r\n    FormHelperText,\r\n    IconButton,\r\n    Stack,\r\n    styled,\r\n    Switch,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TextField,\r\n    Tooltip,\r\n    Typography,\r\n    useTheme,\r\n    FormControl,\r\n    InputAdornment,\r\n    Paper\r\n} from '@mui/material';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport Footer from 'src/components/Footer';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport React, { useState, ChangeEvent } from 'react';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport Loader1 from '../Loader';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../smallScreen.css';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n        padding: theme.spacing(2)\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1)\r\n    },\r\n    '& .MuiPaper-root': {\r\n        height: '260px'\r\n    },\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n    id: string;\r\n    children?: React.ReactNode;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle\r\n            sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n            {...other}\r\n        >\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 13,\r\n                        top: 13,\r\n                        color: (theme) => theme.palette.grey[500]\r\n                    }}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </DialogTitle>\r\n    );\r\n}\r\n\r\nconst initialState = {\r\n    id: 0,\r\n    name: ''\r\n};\r\n\r\nfunction RegistrationScreen() {\r\n    const [page, setPage] = useState<number>(0);\r\n    const [limit, setLimit] = useState<number>(10);\r\n    const [row, setRow] = useState<number>(10);\r\n    const [screens, setScreens] = React.useState<any>([]);\r\n    const [screen, setScreen] = React.useState<any>(initialState);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isDisableCheck, setIsDisableCheck] = useState(false);\r\n    const [isSkippableCheck, setIsSkippableCheck] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n    let [credentail, setCredentail] = useState<any>();\r\n\r\n    const [isReadPermission, setIsReadPermission] = useState(true);\r\n    const [isWritePermission, setIsWritePermission] = useState(true);\r\n    const [isEditPermission, setIsEditPermission] = useState(true);\r\n    const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n\r\n    // window.onpopstate = () => {\r\n    //   navigate(-1);\r\n    // }\r\n\r\n    React.useEffect(() => {\r\n        let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n        setCredentail(cred);\r\n        if (cred) {\r\n            if (cred.roleId != 1) {\r\n                let ind = cred.pagePermissions.findIndex((c: any) => c.title === \"Block Users\");\r\n                if (ind >= 0) {\r\n                    setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n                    setIsWritePermission(cred.pagePermissions[ind].isAddPermission)\r\n                    setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n                    setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n                    if (cred.pagePermissions[ind].isReadPermission)\r\n                        loadData();\r\n                }\r\n            } else {\r\n                loadData();\r\n            }\r\n        }\r\n\r\n    }, []);\r\n\r\n    const loadData = async () => {\r\n        getData(page, limit);\r\n    }\r\n\r\n    const getData = async (startIndex: number, fetchRecord: number) => {\r\n        try {\r\n            setIsLoading(true);\r\n            const token = localStorage.getItem('SessionToken');\r\n            const refreshToken = localStorage.getItem('RefreshToken');\r\n            let obj = {\r\n                startIndex: startIndex,\r\n                fetchRecord: fetchRecord\r\n            };\r\n            const res = await APIservice.httpPost(\r\n                '/api/admin/registrationScreen/getRegistrationScreen',\r\n                obj,\r\n                token,\r\n                refreshToken\r\n            );\r\n            setScreens(res.recordList);\r\n            setRow(res.totalRecords);\r\n            if (res && res.status == 200) {\r\n            } else if (res.status == 401) {\r\n                localStorage.clear();\r\n                navigate('/admin');\r\n            } else if (res.status == 500) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 400) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 300) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 404) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n            setIsLoading(false);\r\n\r\n        } catch (error) {\r\n            toast.error(error, {\r\n                autoClose: 6000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'colored',\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const handleClose = () => {\r\n        setIsDisableCheck(false);\r\n        setIsSkippableCheck(false)\r\n    };\r\n\r\n    const handleDisableSwitch = async (id: number, status: number) => {\r\n        let obj = {\r\n            id: id,\r\n            status: status\r\n        };\r\n        setScreen(obj);\r\n        setIsDisableCheck(true);\r\n    };\r\n\r\n    const handleDisableSwitchCheck = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const token = localStorage.getItem('SessionToken');\r\n            const refreshToken = localStorage.getItem('RefreshToken');\r\n            let obj = {\r\n                id: screen.id\r\n            };\r\n            const res = await APIservice.httpPost(\r\n                '/api/admin/registrationScreen/toggleDisableScreen',\r\n                obj,\r\n                token,\r\n                refreshToken\r\n            );\r\n            setIsDisableCheck(false);\r\n            getData(page * limit, limit);\r\n            if (res && res.status == 200) {\r\n            } else if (res.status == 401) {\r\n                localStorage.clear();\r\n                navigate('/admin');\r\n            } else if (res.status == 500) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 400) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 300) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 404) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            toast.error(error, {\r\n                autoClose: 6000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'colored',\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSkippableSwitch = async (id: number, status: number) => {\r\n        let obj = {\r\n            id: id,\r\n            status: status\r\n        };\r\n        setScreen(obj);\r\n        setIsSkippableCheck(true);\r\n    };\r\n\r\n    const handleSkippableSwitchCheck = async () => {\r\n        try {\r\n            setIsLoading(true);\r\n            const token = localStorage.getItem('SessionToken');\r\n            const refreshToken = localStorage.getItem('RefreshToken');\r\n            let obj = {\r\n                id: screen.id\r\n            };\r\n            const res = await APIservice.httpPost(\r\n                '/api/admin/registrationScreen/toggleSkipScreen',\r\n                obj,\r\n                token,\r\n                refreshToken\r\n            );\r\n            setIsSkippableCheck(false);\r\n            getData(page * limit, limit);\r\n            if (res && res.status == 200) {\r\n            } else if (res.status == 401) {\r\n                localStorage.clear();\r\n                navigate('/admin');\r\n            } else if (res.status == 500) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 400) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 300) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 404) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n            setIsLoading(false);\r\n        } catch (error) {\r\n            toast.error(error, {\r\n                autoClose: 6000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'colored',\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const handlePageChange = (event: any, newPage: number): void => {\r\n        setPage(newPage);\r\n        getData(newPage * limit, limit);\r\n    };\r\n\r\n    const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n        setLimit(parseInt(event.target.value));\r\n        setPage(0);\r\n        getData(0, parseInt(event.target.value));\r\n    };\r\n\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer\r\n                style={{ top: '10%', left: '80%' }}\r\n                autoClose={6000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Helmet>\r\n                <title>Registration Screens</title>\r\n            </Helmet>\r\n            <PageTitleWrapper>\r\n                <Box p={1}>\r\n                    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                                    <Link to=\"/admin\" style={{ display: 'flex', color: 'black' }}>\r\n                                        <HomeIcon />\r\n                                    </Link>\r\n                                    <Typography\r\n                                        color=\"inherit\"\r\n                                        variant=\"subtitle2\"\r\n                                        fontWeight=\"bold\"\r\n                                    >\r\n                                        Registration Screen\r\n                                    </Typography>\r\n                                </Breadcrumbs>\r\n                            </Stack>\r\n                        </Grid>\r\n                        {/* <Grid item>\r\n              <Grid container spacing={1.5}>\r\n                <Grid item>\r\n                  {isWritePermission ? <>\r\n                    <Button\r\n                      className=\"buttonLarge\"\r\n                      sx={{\r\n                        mt: {\r\n                          xs: 0,\r\n                          md: 0,\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          padding: '8.3px',\r\n                          top: '3px'\r\n                        }\r\n                      }}\r\n                      variant=\"contained\"\r\n                      onClick={handleClickisAdd}\r\n                      size=\"small\"\r\n                    >\r\n                      <AddTwoToneIcon fontSize=\"small\" />\r\n                      Create Height\r\n                    </Button>\r\n                    <Button\r\n                      className=\"button\"\r\n                      sx={{\r\n                        mt: {\r\n                          xs: 0,\r\n                          md: 0,\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          padding: '8.3px',\r\n                          top: '3px'\r\n                        }\r\n                      }}\r\n                      variant=\"contained\"\r\n                      onClick={handleClickisAdd}\r\n                      size=\"small\"\r\n                    >\r\n                      <AddTwoToneIcon fontSize=\"small\" />\r\n                    </Button>\r\n                  </> : <></>}\r\n                </Grid>\r\n                <Grid item>\r\n                  <FormControl\r\n                    sx={{ mt: { xs: 0.3, md: 0.3, lg: 0.3, sm: 0.3 } }}\r\n                  >\r\n                    <TextField\r\n                      name=\"searchString\"\r\n                      value={search}\r\n                      onChange={(e) => searchData(e)}\r\n                      id=\"outlined-basic\"\r\n                      label=\"Search\"\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      InputProps={{\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        )\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid> */}\r\n                    </Grid>\r\n                </Box>\r\n            </PageTitleWrapper>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <>\r\n                            <Card className=\"heightcard\">\r\n                                <div>\r\n                                    {isLoading ? (\r\n                                        <Loader1 title=\"Loading...\" />\r\n                                    ) : (\r\n                                        <>\r\n                                            <Divider />\r\n                                            {screens && screens.length > 0 ? (\r\n                                                <>\r\n                                                    <TableContainer className=\"heighttableContainer\">\r\n                                                        <Table stickyHeader>\r\n                                                            <TableHead>\r\n                                                                <TableRow>\r\n                                                                    <TableCell>\r\n                                                                        <Typography\r\n                                                                            noWrap\r\n                                                                            style={{\r\n                                                                                fontSize: '13px',\r\n                                                                                fontWeight: 'bold',\r\n                                                                                marginBottom: 'none'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Sr. No\r\n                                                                        </Typography>\r\n                                                                    </TableCell>\r\n                                                                    <TableCell align=\"center\">\r\n                                                                        <Typography\r\n                                                                            noWrap\r\n                                                                            style={{\r\n                                                                                fontSize: '13px',\r\n                                                                                fontWeight: 'bold',\r\n                                                                                marginBottom: 'none'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Name\r\n                                                                        </Typography>\r\n                                                                    </TableCell>\r\n                                                                    <TableCell align=\"right\">\r\n                                                                        <Typography\r\n                                                                            noWrap\r\n                                                                            style={{\r\n                                                                                fontSize: '13px',\r\n                                                                                fontWeight: 'bold',\r\n                                                                                marginBottom: 'none'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Disable\r\n                                                                        </Typography>\r\n                                                                    </TableCell>\r\n                                                                    <TableCell align=\"right\">\r\n                                                                        <Typography\r\n                                                                            noWrap\r\n                                                                            style={{\r\n                                                                                fontSize: '13px',\r\n                                                                                fontWeight: 'bold',\r\n                                                                                marginBottom: 'none'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Skip\r\n                                                                        </Typography>\r\n                                                                    </TableCell>\r\n                                                                </TableRow>\r\n                                                            </TableHead>\r\n                                                            <TableBody>\r\n                                                                {screens.map((arr: any, index: number) => {\r\n                                                                    return (\r\n                                                                        <TableRow hover key={arr.id}>\r\n                                                                            <TableCell>\r\n                                                                                <Typography\r\n                                                                                    variant=\"body1\"\r\n                                                                                    fontWeight=\"bold\"\r\n                                                                                    color=\"text.primary\"\r\n                                                                                    gutterBottom\r\n                                                                                    noWrap\r\n                                                                                >\r\n                                                                                    {page * limit + index + 1}\r\n                                                                                </Typography>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell align=\"center\">\r\n                                                                                <Typography\r\n                                                                                    variant=\"body1\"\r\n                                                                                    fontWeight=\"bold\"\r\n                                                                                    color=\"text.primary\"\r\n                                                                                    gutterBottom\r\n                                                                                    noWrap\r\n                                                                                >\r\n                                                                                    {arr.name}\r\n                                                                                </Typography>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell\r\n                                                                                align=\"right\"\r\n                                                                            >\r\n                                                                                {(isEditPermission && arr.canDisable) ? <>\r\n                                                                                    <Tooltip\r\n                                                                                        title={\r\n                                                                                            arr.isDisable === 0\r\n                                                                                                ? 'Disable'\r\n                                                                                                : 'Enable'\r\n                                                                                        }\r\n                                                                                        arrow\r\n                                                                                    >\r\n                                                                                        <Switch\r\n                                                                                            disabled={credentail?.email === \"demo@admin.com\"}\r\n                                                                                            checked={\r\n                                                                                                arr.isDisable === 0 ? false : true\r\n                                                                                            }\r\n                                                                                            onClick={(e) =>\r\n                                                                                                handleDisableSwitch(arr.id, arr.isDisable)\r\n                                                                                            }\r\n                                                                                            inputProps={{\r\n                                                                                                'aria-label': 'controlled'\r\n                                                                                            }}\r\n                                                                                        />\r\n                                                                                    </Tooltip>\r\n\r\n                                                                                </> : <></>}\r\n\r\n                                                                            </TableCell>\r\n                                                                            <TableCell\r\n                                                                                align=\"right\"\r\n                                                                            >\r\n                                                                                {isEditPermission ? <>\r\n                                                                                    <Tooltip\r\n                                                                                        title={\r\n                                                                                            arr.isSkippable === 0\r\n                                                                                                ? 'Enable Skip'\r\n                                                                                                : 'Disable Skip'\r\n                                                                                        }\r\n                                                                                        arrow\r\n                                                                                    >\r\n                                                                                        <Switch\r\n                                                                                            disabled={credentail?.email === \"demo@admin.com\"}\r\n                                                                                            checked={\r\n                                                                                                arr.isSkippable === 0 ? false : true\r\n                                                                                            }\r\n                                                                                            onClick={(e) =>\r\n                                                                                                handleSkippableSwitch(arr.id, arr.isSkippable)\r\n                                                                                            }\r\n                                                                                            inputProps={{\r\n                                                                                                'aria-label': 'controlled'\r\n                                                                                            }}\r\n                                                                                        />\r\n                                                                                    </Tooltip>\r\n\r\n                                                                                </> : <></>}\r\n\r\n                                                                            </TableCell>\r\n                                                                        </TableRow>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </TableBody>\r\n                                                        </Table>\r\n                                                    </TableContainer>\r\n                                                    <Box p={2}>\r\n                                                        <TablePagination\r\n                                                            component=\"div\"\r\n                                                            count={row}\r\n                                                            onPageChange={handlePageChange}\r\n                                                            onRowsPerPageChange={handleLimitChange}\r\n                                                            page={page}\r\n                                                            rowsPerPage={limit}\r\n                                                            rowsPerPageOptions={[10, 20, 30, 40]}\r\n                                                        />\r\n                                                    </Box>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Paper\r\n                                                    sx={{\r\n                                                        display: 'flex',\r\n                                                        justifyContent: 'center',\r\n                                                        alignItems: 'center',\r\n                                                        textAlign: 'center',\r\n                                                        verticalAlign: 'middle',\r\n                                                        boxShadow: 'none'\r\n                                                    }}\r\n                                                    className=\"heightcard\"\r\n                                                >\r\n                                                    <Typography variant=\"h5\" paragraph>\r\n                                                        Data not Found\r\n                                                    </Typography>\r\n                                                </Paper>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                            </Card>\r\n\r\n                            <div>\r\n                                <Dialog\r\n                                    open={isDisableCheck}\r\n                                    onClose={handleClose}\r\n                                    fullWidth\r\n                                    maxWidth=\"xs\"\r\n                                >\r\n                                    <DialogTitle\r\n                                        sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n                                    >\r\n                                        {screen.status === 0 ? 'Inactive' : 'Active'}\r\n                                    </DialogTitle>\r\n                                    <DialogContent>\r\n                                        <DialogContentText\r\n                                            style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n                                        >\r\n                                            {screen.status === 0\r\n                                                ? 'Are you sure you want to Disable?'\r\n                                                : 'Are you sure you want to Enable?'}\r\n                                        </DialogContentText>\r\n                                    </DialogContent>\r\n                                    <DialogActions>\r\n                                        <Button onClick={handleClose} variant=\"outlined\" style={{ marginRight: '10px' }}>Cancel</Button>\r\n                                        <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={handleDisableSwitchCheck} variant=\"outlined\" style={{ marginRight: '10px' }}>Yes</Button>\r\n                                    </DialogActions>\r\n                                </Dialog>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <Dialog\r\n                                    open={isSkippableCheck}\r\n                                    onClose={handleClose}\r\n                                    fullWidth\r\n                                    maxWidth=\"xs\"\r\n                                >\r\n                                    <DialogTitle\r\n                                        sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n                                    >\r\n                                        {screen.status === 0 ? 'Inactive' : 'Active'}\r\n                                    </DialogTitle>\r\n                                    <DialogContent>\r\n                                        <DialogContentText\r\n                                            style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n                                        >\r\n                                            {screen.status === 0\r\n                                                ? 'Are you sure you want to Disable Skip?'\r\n                                                : 'Are you sure you want to Enable Skip?'}\r\n                                        </DialogContentText>\r\n                                    </DialogContent>\r\n                                    <DialogActions>\r\n                                        <Button onClick={handleClose} variant=\"outlined\" style={{ marginRight: '10px' }}>Cancel</Button>\r\n                                        <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={handleSkippableSwitchCheck} variant=\"outlined\" style={{ marginRight: '10px' }}>Yes</Button>\r\n                                    </DialogActions>\r\n                                </Dialog>\r\n                            </div>\r\n                        </>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            {/* <Footer /> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RegistrationScreen;\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","'use client';\n\n// @inheritedComponent IconButton\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, darken, lighten } from '@mui/system/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  variants: [{\n    props: {\n      edge: 'start'\n    },\n    style: {\n      marginLeft: -8\n    }\n  }, {\n    props: {\n      edge: 'end'\n    },\n    style: {\n      marginRight: -8\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      [`& .${switchClasses.thumb}`]: {\n        width: 16,\n        height: 16\n      },\n      [`& .${switchClasses.switchBase}`]: {\n        padding: 4,\n        [`&.${switchClasses.checked}`]: {\n          transform: 'translateX(16px)'\n        }\n      }\n    }\n  }]\n});\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme\n}) => ({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  variants: [...Object.entries(theme.palette).filter(([, value]) => value.main && value.light) // check all the used fields in the style below\n  .map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${switchClasses.checked}`]: {\n        color: (theme.vars || theme).palette[color].main,\n        '&:hover': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        },\n        [`&.${switchClasses.disabled}`]: {\n          color: theme.vars ? theme.vars.palette.Switch[`${color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.55)}`\n        }\n      },\n      [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n        backgroundColor: (theme.vars || theme).palette[color].main\n      }\n    }\n  }))]\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n  const {\n      className,\n      color = 'primary',\n      edge = false,\n      size = 'medium',\n      sx\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from './TableContext';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n      className,\n      component = defaultComponent,\n      padding = 'normal',\n      size = 'medium',\n      stickyHeader = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n      autoFocus,\n      checked: checkedProp,\n      checkedIcon,\n      className,\n      defaultChecked,\n      disabled: disabledProp,\n      disableFocusRipple = false,\n      edge = false,\n      icon,\n      id,\n      inputProps,\n      inputRef,\n      name,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      required = false,\n      tabIndex,\n      type,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","Dialog","padding","height","initialState","id","name","page","setPage","useState","limit","setLimit","row","setRow","screens","setScreens","React","screen","setScreen","isLoading","setIsLoading","isDisableCheck","setIsDisableCheck","isSkippableCheck","setIsSkippableCheck","navigate","useNavigate","credentail","setCredentail","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","isAddPermission","loadData","async","getData","startIndex","fetchRecord","token","refreshToken","obj","res","APIservice","httpPost","recordList","totalRecords","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","POSITION","TOP_RIGHT","handleClose","useTheme","_jsxs","_Fragment","ToastContainer","style","top","left","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","p","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","color","HomeIcon","Typography","variant","fontWeight","direction","xs","Card","Loader1","Divider","length","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","noWrap","fontSize","marginBottom","align","TableBody","map","arr","index","hover","gutterBottom","canDisable","Tooltip","isDisable","arrow","Switch","disabled","email","checked","onClick","e","handleDisableSwitch","inputProps","isSkippable","handleSkippableSwitch","TablePagination","component","count","onPageChange","handlePageChange","event","newPage","onRowsPerPageChange","parseInt","target","value","rowsPerPage","rowsPerPageOptions","Paper","sx","textAlign","verticalAlign","boxShadow","paragraph","open","onClose","fullWidth","DialogTitle","m","DialogContent","DialogContentText","letterSpacing","DialogActions","Button","marginRight","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","root","inProps","ref","useDefaultProps","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","clsx","getSwitchUtilityClass","SwitchRoot","edge","capitalize","size","width","overflow","boxSizing","flexShrink","zIndex","colorAdjust","variants","marginLeft","switchClasses","thumb","switchBase","transform","SwitchSwitchBase","SwitchBase","input","vars","palette","defaultColor","mode","common","white","grey","transition","transitions","create","duration","shortest","defaultDisabledColor","track","opacity","switchTrackDisabled","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","Object","entries","filter","_ref3","main","light","_ref4","mainChannel","lighten","darken","SwitchTrack","_ref5","borderRadius","onBackground","black","switchTrack","SwitchThumb","_ref6","shadows","other","slots","icon","type","checkedIcon","getTableHeadUtilityClass","TableHeadRoot","tablelvl2","defaultComponent","Tablelvl2Context","Provider","as","role","getTableUtilityClass","TableRoot","borderCollapse","borderSpacing","typography","body2","text","secondary","captionSide","table","TableContext","getSwitchBaseUtilityClass","SwitchBaseRoot","ButtonBase","SwitchBaseInput","cursor","margin","autoFocus","checkedProp","defaultChecked","disabledProp","disableFocusRipple","inputRef","onBlur","onChange","onFocus","readOnly","required","tabIndex","setCheckedState","useControlled","controlled","default","Boolean","state","muiFormControl","useFormControl","hasLabelFor","centerRipple","focusRipple","nativeEvent","defaultPrevented","newChecked"],"sourceRoot":""}