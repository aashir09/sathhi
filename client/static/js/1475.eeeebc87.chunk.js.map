{"version":3,"file":"static/js/1475.eeeebc87.chunk.js","mappings":"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","sources":["content/overview/Login/LoaderLogin.tsx","content/overview/Login/Login.tsx"],"sourcesContent":["import React from 'react';\r\nimport './LoaderLogin.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst LoaderLogin = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"login-container\">\r\n      <div className=\"loading-login-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderLogin;\r\n","import {\r\n  Button,\r\n  Card,\r\n  Stack,\r\n  Typography,\r\n  FormHelperText,\r\n  CardContent,\r\n  IconButton,\r\n  InputAdornment,\r\n  TextField,\r\n  Box,\r\n  styled,\r\n  Link,\r\n  InputLabel,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Checkbox,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  FormLabel,\r\n  Tooltip,\r\n  Avatar,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { Form, Container, Col, Row, InputGroup } from 'react-bootstrap';\r\nimport { ChangeEvent, useEffect, useState } from 'react';\r\nimport APIservice from '../../../utils/APIservice';\r\nimport validator from 'validator';\r\nimport React from 'react';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../dashboards/Crypto/dashboard.css';\r\nimport Logo from 'src/components/LogoSign';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport LoaderLogin from './LoaderLogin';\r\nimport QRCode from 'react-qr-code';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n// import { saveAs } from 'file-saver';\r\n\r\nconst OverviewWrapper = styled(Box)(\r\n  () => `\r\n    overflow: auto;\r\n    flex: 1;\r\n    overflow-x: hidden;\r\n    align-items: center;\r\n`\r\n);\r\nconst steps = ['MYSQL Configuration', 'Setup Database', 'Setup Complete'];\r\nconst initialState = {\r\n  email: '',\r\n  password: ''\r\n};\r\n\r\nconst initialDefaultState = {\r\n  email: '',\r\n};\r\n\r\nconst initialDefaultPasswordState = {\r\n  password: '',\r\n};\r\n\r\nconst initialAuthenticationCodeState = {\r\n  twoFactorCode: '',\r\n};\r\n\r\nconst initialHostState = {\r\n  'MYSQL_HOST': '',\r\n  'MYSQL_DATABASE': 'matrimony_app',\r\n  'MYSQL_USER': '',\r\n  'MYSQL_PASSWORD': '',\r\n  'MYSQL_PORT': '',\r\n  'password': '',\r\n  'username': 'matrimony_user'\r\n};\r\n\r\n\r\nconst styles = {\r\n  heading4: `text-base text-ct-blue-600 font-medium border-b mb-2`,\r\n  orderedList: `space-y-1 text-sm list-decimal`,\r\n};\r\n\r\nfunction Login() {\r\n  const [login, setLogin] = React.useState<any>(initialState);\r\n  const [isEmailValidateError, setIsEmailValidateError] = useState(false);\r\n  const [emailValidateErrorMsg, setEmailValidateErrorMsg] = useState('');\r\n  const [isPasswordValidateError, setIsPasswordValidateError] = useState(false);\r\n  const [passwordValidateErrorMsg, setPasswordValidateErrorMsg] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [changeEmail, setChangeEmail] = React.useState<any>(initialDefaultState);\r\n  const [isChangeEmailValidateError, setIsChangeEmailValidateError] = useState(false);\r\n  const [changeEmailValidateErrorMsg, setChangeEmailValidateErrorMsg] = useState('');\r\n  const [isChangeEmail, setIsChangeEmail] = useState(false);\r\n\r\n  const [changePassword, setChangePassword] = React.useState<any>(initialDefaultPasswordState);\r\n  const [isChangePasswordValidateError, setIsChangePasswordValidateError] = useState(false);\r\n  const [changePasswordValidateErrorMsg, setChangePasswordValidateErrorMsg] = useState('');\r\n  const [showChangePassword, setShowChangePassword] = useState(false);\r\n  const [isChangePassword, setIsChangePassword] = useState(false);\r\n\r\n  const [is2FAOpen, setIs2FAOpen] = useState(false);\r\n  const [is2FAQRCode, setIs2FAQRCode] = useState(false);\r\n  const [is2FAEnter, setIs2FAEnter] = useState(false);\r\n  const [isConfiguration, setIsConfiguration] = useState(false);\r\n  const [isUrlErrorMsg, setIsUrlErrorMsg] = useState(false);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [apiUrl, setApiUrl] = useState('');\r\n  const [isTakeHostData, setIsTakeHostData] = useState(false);\r\n  const [hostData, setHostInput] = React.useState<any>(initialHostState);\r\n\r\n  const [email, setEmail] = useState('');\r\n\r\n  const [isAuthenticationCodeError, setIsAuthenticationCodeErrorError] = useState(false);\r\n  const [authenticationCodeErrorMsg, setAuthenticationCodeErrorMsg] = useState('');\r\n  const [authenticationCode, setAuthenticationCode] = React.useState<any>(initialAuthenticationCodeState);\r\n\r\n  const [refreshToken, setRefreshToken] = useState<any>();\r\n  const [sessionToken, setSessionToken] = useState<any>();\r\n  const [userId, setUserId] = useState<any>();\r\n  const [crendientials, setCrendientials] = useState<any>();\r\n  const [defaultCurrency, setDefaultCurrency] = useState<any>();\r\n\r\n  const [qrcodeUrl, setqrCodeUrl] = useState(\"\");\r\n  const [base32, setBase32] = useState(\"\");\r\n  const [isTested, setIsTeseted] = useState(false);\r\n  const [version, setVersion] = useState(null);\r\n  const [isInstallSuccessfully, setIsInstallSucessfully] = useState(false)\r\n  const [ismasterData, setIsMasterData] = useState(false);\r\n  const [isSampleData, setIsSampleData] = useState(false);\r\n  const [isSetupdatabase, setIsSetUpDatabase] = useState(false);\r\n  const [databaseState, setDatabaseState] = useState('creating');\r\n  const [masterdataState, setMasterdataState] = useState('creating');\r\n  const [sampledataState, setSampledataState] = useState('creating');\r\n  let [isInstallMasterData, setIsInstallMasterData] = useState(false);\r\n  const [isPreviousVersionInstalled, setPreviousVersionInstalled] = useState('false');\r\n  const [isAPIUrlValidation, setIsAPIUrlValidation] = useState(false);\r\n  const [isHostRequired, setIsHostRequired] = useState(false);\r\n  const [isUserRequired, setIsUserRequired] = useState(false);\r\n  const [isPORTRequired, setIsPortRequired] = useState(false);\r\n  const [isPasswordRequired, setIsPasswordRequired] = useState(false);\r\n  const [isVersionSelectionRequired, setIsVersionRequired] = useState(false);\r\n  const [isDatabaseSelectionRequired, setIsDatabaseRequired] = useState(false);\r\n  let [isInstalledSampleData, setIsInstallSampleData] = useState(false);\r\n  let [databases, setDatabases] = useState([]);\r\n  const [isCreatedatabaseUser, setIsCreateDatabaseUser] = useState(false);\r\n  const [isRestartServerRequired, setIsRestartServerRequired] = useState(true);\r\n  const [userName, setUserName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setLogin({ ...login, [name]: value });\r\n  };\r\n\r\n  const validateEmail = (e: any) => {\r\n    const { name, value } = e.target;\r\n    if (value) {\r\n      // if (validator.isEmail(e.target.value)) {\r\n      setIsEmailValidateError(false);\r\n      setEmailValidateErrorMsg('');\r\n      // } else {\r\n      //   setIsEmailValidateError(true);\r\n      //   setEmailValidateErrorMsg('Invalid Email');\r\n      // }\r\n    } else {\r\n      setIsEmailValidateError(true);\r\n      setEmailValidateErrorMsg('Email is Required');\r\n    }\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    const cred = \"UserName:\" + this.userName + \"\\n\" + \"Password:\" + this.password;\r\n    navigator.clipboard.writeText(cred).then(() => {\r\n      alert('Text copied to clipboard!');\r\n    }).catch(err => {\r\n      console.error('Failed to copy text: ', err);\r\n    });\r\n  };\r\n\r\n  const mediumRegex = new RegExp(\r\n    '^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{8,})'\r\n  );\r\n  const ValidatePassword = (e: any) => {\r\n    const { name, value } = e.target;\r\n    if (value) {\r\n      // if (mediumRegex.test(e.target.value)) {\r\n      setIsPasswordValidateError(false);\r\n      setPasswordValidateErrorMsg('');\r\n      // } else {\r\n      //   setIsPasswordValidateError(true);\r\n      //   setPasswordValidateErrorMsg('The password must be more than 8 characters and contain both letters and numbers.');\r\n      // }\r\n    } else {\r\n      setIsPasswordValidateError(true);\r\n      setPasswordValidateErrorMsg('Password is Required');\r\n    }\r\n  };\r\n\r\n  const validateForm = (event: any) => {\r\n    event.preventDefault();\r\n    var flag = true;\r\n    if (!login.email) {\r\n      setIsEmailValidateError(true);\r\n      setEmailValidateErrorMsg('Email is Required');\r\n      flag = false;\r\n    } else {\r\n      if (validator.isEmail(login.email)) {\r\n        setIsEmailValidateError(false);\r\n        setEmailValidateErrorMsg('');\r\n        flag = true;\r\n      } else {\r\n        setIsEmailValidateError(true);\r\n        setEmailValidateErrorMsg('Invalid Email');\r\n        flag = false;\r\n      }\r\n    }\r\n    if (!login.password) {\r\n      setIsPasswordValidateError(true);\r\n      setPasswordValidateErrorMsg('Password is Required');\r\n      flag = false;\r\n    } else {\r\n      if (mediumRegex.test(login.password)) {\r\n        setIsPasswordValidateError(false);\r\n        setPasswordValidateErrorMsg('');\r\n        flag = true;\r\n      } else {\r\n        setIsPasswordValidateError(true);\r\n        setPasswordValidateErrorMsg('Password is Required');\r\n        flag = false;\r\n      }\r\n    }\r\n    return flag;\r\n  };\r\n\r\n  useEffect(() => {\r\n  \r\n    getConfiguration();\r\n    // console.log(APIservice.config.apiUrl);\r\n\r\n    // if (APIservice.config && APIservice.config.apiUrl === '<Your_API_Url>') {\r\n    //   setIsConfiguration(true);\r\n    //   setIsLogin(false)\r\n    // }\r\n    // else {\r\n    //   loadJson();\r\n    //   // getConfiguration();\r\n    // }\r\n\r\n  }, []);\r\n\r\n  const loadJson = async () => {\r\n    try {\r\n      // const response = await fetch('/admin/variable.json');\r\n\r\n      // if (!response.ok) {\r\n      //   console.log(\"File does not exist or is not accessible.\");\r\n      //   return;\r\n      // }\r\n\r\n      // const contentType = response.headers.get('content-type');\r\n      // if (!contentType || !contentType.includes('application/json')) {\r\n      //   console.log(\"File does not exist or is not in JSON format.\");\r\n      //   return;\r\n      // }\r\n\r\n      // const jsonData = await response.json();\r\n\r\n      // if (Object.keys(jsonData).length > 0) {\r\n      //   if (jsonData.REACT_APP_BASEURL == '<YOUR_API_URL>') {\r\n      //     setIsConfiguration(true);\r\n      //   }\r\n      //   else {\r\n      //     setApiUrl(jsonData.REACT_APP_BASEURL);\r\n      //     getConfiguration();\r\n      //   }\r\n      // } else {\r\n      //   console.log(\"File exists but has no data.\");\r\n      // }\r\n    } catch (error) {\r\n      console.error(\"Error checking file data:\", error);\r\n    }\r\n    // debugger;\r\n    // const response = await fetch('/variable.json'); // Adjust the file path as needed\r\n    // if (response && response.status == 200) {\r\n    //   const data = await response.json();\r\n    //   if (Object.keys(data).length > 0) {\r\n    //     setApiUrl(data.REACT_APP_BASEURL);\r\n    //   }\r\n\r\n    // }\r\n    // const response = await fetch('/variable.json');\r\n    // const jsonData = await response.json();\r\n    // if (Object.keys(jsonData).length > 0) {\r\n    //   setApiUrl(jsonData.REACT_APP_BASEURL);\r\n    // } else {\r\n    //  setActiveStep(0);\r\n    // }\r\n    // const data = await response.json();\r\n\r\n    // setApiUrl(data.REACT_APP_BASEURL);\r\n    // const response = await fetch('/variable.json');\r\n\r\n    // if (!response.ok) {\r\n    //   console.log(\"File does not exist or is not accessible.\");\r\n    //   return;\r\n    // }\r\n\r\n    // const contentType = response.headers.get('content-type');\r\n    // if (!contentType || !contentType.includes('application/json')) {\r\n    //   console.log(\"File does not exist or is not in JSON format.\");\r\n    //   return;\r\n    // }\r\n\r\n    // const jsonData = await response.json();\r\n\r\n    // if (Object.keys(jsonData).length > 0) {\r\n    //   setApiUrl(jsonData.REACT_APP_BASEURL)\r\n    // } else {\r\n    //   console.log(\"File exists but has no data.\");\r\n    // }\r\n  }\r\n\r\n\r\n  const handlesubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    var flag = validateForm(event);\r\n    if (flag) {\r\n      try {\r\n        const res = await APIservice.httpPost('/api/admin/users/login', login);\r\n        if (res && res.status == 200) {\r\n          setEmail(login.email);\r\n          setRefreshToken(res.recordList[0].refreshToken);\r\n          setSessionToken(res.recordList[0].token);\r\n          setUserId(res.recordList[0].id);\r\n          let detail: any;\r\n          detail = res.recordList[0];\r\n          setCrendientials(res.recordList[0]);\r\n          localStorage.setItem('DefaultCurrency', JSON.stringify(res.recordList[0].defaultCurrency[0]));\r\n          let isFirstLogin = JSON.parse(localStorage.getItem('isFirstLogin'));\r\n          // if(!isFirstLogin) {\r\n\r\n          // }\r\n          isFirstLogin = (isFirstLogin == false) ? false : true;\r\n          if (login.email === \"admin@admin.com\" && isFirstLogin) {\r\n            setIsLogin(false);\r\n            setIsChangeEmail(true);\r\n            setIsChangePassword(false);\r\n            setIs2FAOpen(false);\r\n            setIs2FAQRCode(false);\r\n            setIs2FAEnter(false);\r\n          } else if (login.password === \"Demo@1234\" && isFirstLogin) {\r\n            setIsLogin(false);\r\n            setIsChangeEmail(false);\r\n            setIsChangePassword(true);\r\n            setIs2FAOpen(false);\r\n            setIs2FAQRCode(false);\r\n            setIs2FAEnter(false);\r\n          } else {\r\n            if (detail.isTwoFactorEnable) {\r\n              //Enable 2FA\r\n              setIsLogin(false);\r\n              setIsChangeEmail(false);\r\n              setIsChangePassword(false);\r\n              setIs2FAQRCode(false);\r\n              setIs2FAEnter(false);\r\n              setIs2FAOpen(true);\r\n            } else {\r\n              if (detail.isTwoFactorEnable == false) {\r\n                localStorage.setItem('RefreshToken', res.recordList[0].refreshToken);\r\n                localStorage.setItem('SessionToken', res.recordList[0].token);\r\n                localStorage.setItem('UserId', res.recordList[0].id);\r\n                localStorage.setItem('Credentials', JSON.stringify(res.recordList[0]));\r\n                localStorage.setItem('DefaultCurrency', JSON.stringify(res.recordList[0].defaultCurrency[0]));\r\n                localStorage.setItem('isFirstLogin', JSON.stringify(false));\r\n                // if (detail.roleId === 3 && detail.pagePermissions.length === 0) {\r\n                //   navigate('/nopagepermission');\r\n                // }\r\n                // else {\r\n                //   navigate('/admin/dashboard');\r\n                // }\r\n                // navigate('/admin/dashboard');\r\n                updateFCMToken();\r\n                const token = localStorage.getItem('SessionToken');\r\n                const refreshToken = localStorage.getItem('RefreshToken');\r\n                let response = await APIservice.httpPost(\r\n                  '/api/admin/systemflags/getAdminSystemFlag',\r\n                  {},\r\n                  token,\r\n                  refreshToken\r\n                );\r\n                console.log(response.recordList);\r\n\r\n                let data = response.recordList[0].systemFlag[0].value;\r\n                localStorage.setItem('DateFormat', data);\r\n\r\n                let profilePicApproveIndex = response.recordList[0].systemFlag.findIndex(c => c.name === 'isUserProfilePicApprove');\r\n                let isUserProfilePicApprove = response.recordList[0].systemFlag[profilePicApproveIndex].value;\r\n                localStorage.setItem('isUserProfilePicApprove', isUserProfilePicApprove);\r\n                // let customFieldIndex = response.recordList[4].group[0].systemFlag.findIndex(c => c.name === 'isEnableCustomFields');\r\n                // let isEnableCustomFields = response.recordList[4].group[0].systemFlag[customFieldIndex].value;\r\n                // localStorage.setItem('isEnableCustomFields', isEnableCustomFields);\r\n                let _data = response.recordList;\r\n                if (_data && _data.length > 0) {\r\n                  for (let i = 0; i < _data.length; i++) {\r\n                    for (let j = 0; j < _data[i].group.length; j++) {\r\n                      if (_data[i].group[j].systemFlag && _data[i].group[j].systemFlag.length > 0) {\r\n                        let customFieldIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isEnableCustomFields');\r\n                        if (customFieldIndex >= 0) {\r\n                          let isEnableCustomFields = _data[i].group[j].systemFlag[customFieldIndex].value;\r\n                          localStorage.setItem('isEnableCustomFields', isEnableCustomFields);\r\n                        }\r\n\r\n                        let profilePicApproveIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isUserProfilePicApprove');\r\n                        if (profilePicApproveIndex >= 0) {\r\n                          let isUserProfilePicApprove = _data[i].group[j].systemFlag[profilePicApproveIndex].value;\r\n                          localStorage.setItem('isUserProfilePicApprove', isUserProfilePicApprove);\r\n                        }\r\n\r\n                        let familyIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isEnableFamilyDetails');\r\n                        if (familyIndex >= 0) {\r\n                          let isEnableFamilyDetails = _data[i].group[j].systemFlag[familyIndex].value;\r\n                          localStorage.setItem('isEnableFamilyDetails', isEnableFamilyDetails);\r\n                        }\r\n\r\n                        let astroIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isEnableAstrologicDetails');\r\n                        if (astroIndex >= 0) {\r\n                          let isEnableAstrologicDetails = _data[i].group[j].systemFlag[astroIndex].value;\r\n                          localStorage.setItem('isEnableAstrologicDetails', isEnableAstrologicDetails);\r\n                        }\r\n\r\n                        let lifeStyleIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isEnableLifeStyles');\r\n                        if (lifeStyleIndex >= 0) {\r\n                          let isEnableLifeStyles = _data[i].group[j].systemFlag[lifeStyleIndex].value;\r\n                          localStorage.setItem('isEnableLifeStyles', isEnableLifeStyles);\r\n                        }\r\n\r\n                        let communityIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isEnableCommunity');\r\n                        if (communityIndex >= 0) {\r\n                          let isEnableCommunity = _data[i].group[j].systemFlag[communityIndex].value;\r\n                          localStorage.setItem('isEnableCommunity', isEnableCommunity);\r\n                        }\r\n\r\n                        let subCommunityIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isEnableSubCommunity');\r\n                        if (subCommunityIndex >= 0) {\r\n                          let isEnableSubCommunity = _data[i].group[j].systemFlag[subCommunityIndex].value;\r\n                          localStorage.setItem('isEnableSubCommunity', isEnableSubCommunity);\r\n                        }\r\n                      }\r\n                    }\r\n\r\n                    if (_data[i].systemFlag && _data[i].systemFlag.length > 0) {\r\n                      let customFieldIndex = _data[i].systemFlag.findIndex(c => c.name === 'isEnableCustomFields');\r\n                      if (customFieldIndex >= 0) {\r\n                        let isEnableCustomFields = _data[i].systemFlag[customFieldIndex].value;\r\n                        localStorage.setItem('isEnableCustomFields', isEnableCustomFields);\r\n                      }\r\n\r\n                      let profilePicApproveIndex = _data[i].systemFlag.findIndex(c => c.name === 'isUserProfilePicApprove');\r\n                      if (profilePicApproveIndex >= 0) {\r\n                        let isUserProfilePicApprove = _data[i].systemFlag[profilePicApproveIndex].value;\r\n                        localStorage.setItem('isUserProfilePicApprove', isUserProfilePicApprove);\r\n                      }\r\n\r\n                      let familyIndex = _data[i].systemFlag.findIndex(c => c.name === 'isEnableFamilyDetails');\r\n                      if (familyIndex >= 0) {\r\n                        let isEnableFamilyDetails = _data[i].systemFlag[familyIndex].value;\r\n                        localStorage.setItem('isEnableFamilyDetails', isEnableFamilyDetails);\r\n                      }\r\n\r\n                      let astroIndex = _data[i].systemFlag.findIndex(c => c.name === 'isEnableAstrologicDetails');\r\n                      if (astroIndex >= 0) {\r\n                        let isEnableAstrologicDetails = _data[i].systemFlag[astroIndex].value;\r\n                        localStorage.setItem('isEnableAstrologicDetails', isEnableAstrologicDetails);\r\n                      }\r\n\r\n                      let lifeStyleIndex = _data[i].systemFlag.findIndex(c => c.name === 'isEnableLifeStyles');\r\n                      if (lifeStyleIndex >= 0) {\r\n                        let isEnableLifeStyles = _data[i].systemFlag[lifeStyleIndex].value;\r\n                        localStorage.setItem('isEnableLifeStyles', isEnableLifeStyles);\r\n                      }\r\n\r\n                      let communityIndex = _data[i].systemFlag.findIndex(c => c.name === 'isEnableCommunity');\r\n                      if (communityIndex >= 0) {\r\n                        let isEnableCommunity = _data[i].systemFlag[communityIndex].value;\r\n                        localStorage.setItem('isEnableCommunity', isEnableCommunity);\r\n                      }\r\n\r\n                      let subCommunityIndex = _data[i].systemFlag.findIndex(c => c.name === 'isEnableSubCommunity');\r\n                      if (subCommunityIndex >= 0) {\r\n                        let isEnableSubCommunity = _data[i].systemFlag[subCommunityIndex].value;\r\n                        localStorage.setItem('isEnableCommunity', isEnableSubCommunity);\r\n                      }\r\n\r\n                    }\r\n\r\n                  }\r\n                }\r\n                if (detail.roleId === 3 && detail.pagePermissions.length === 0) {\r\n                  navigate('/admin/nopagepermission');\r\n                }\r\n                else {\r\n                  if (detail.roleId === 3 && detail.pagePermissions.length > 0) {\r\n                    let index = (detail.pagePermissions.length - 1)\r\n                    let page: any = detail.pagePermissions[index];\r\n                    navigate(page.path)\r\n                  }\r\n                  else {\r\n                    navigate('/admin/dashboard');\r\n                  }\r\n                }\r\n              } else {\r\n                //Setup 2FA\r\n                setIsLogin(false);\r\n                setIsChangeEmail(false);\r\n                setIsChangePassword(false);\r\n                setIs2FAOpen(true);\r\n                setIs2FAQRCode(false);\r\n                setIs2FAEnter(false);\r\n              }\r\n            }\r\n          }\r\n        } else if (res && res.status == 500) {\r\n          toast.error('User does not exists!', {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored'\r\n          });\r\n        } else if (res.message === 'Password Mismatch') {\r\n          toast.error('Invalid Credentials!', {\r\n            autoClose: 6000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: 'colored'\r\n          });\r\n        }\r\n      } catch (error: any) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    history.go(1);\r\n  };\r\n\r\n  const updateFCMToken = async () => {\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      const fcmToken = sessionStorage.getItem('fcmToken');\r\n      let response = await APIservice.httpPost(\r\n        '/api/admin/users/updateFCMToken',\r\n        { \"fcmToken\": fcmToken },\r\n        token,\r\n        refreshToken\r\n      );\r\n    } catch (error: any) {\r\n      toast.error(error.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored'\r\n      });\r\n    }\r\n  }\r\n\r\n  const validateChangeEmail = (e: any) => {\r\n    const { name, value } = e.target;\r\n    if (value) {\r\n      if (validator.isEmail(e.target.value)) {\r\n        setIsChangeEmailValidateError(false);\r\n        setChangeEmailValidateErrorMsg('');\r\n      } else {\r\n        setIsChangeEmailValidateError(true);\r\n        setChangeEmailValidateErrorMsg('Invalid Email');\r\n      }\r\n    } else {\r\n      setIsChangeEmailValidateError(true);\r\n      setChangeEmailValidateErrorMsg('Email is Required');\r\n    }\r\n  };\r\n\r\n  const handleInputDefaultEmailChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setChangeEmail({ ...changeEmail, [name]: value });\r\n  };\r\n\r\n  const handleupdateEmail = async (event: any) => {\r\n    event.preventDefault();\r\n    try {\r\n      const token = sessionToken;//localStorage.getItem('SessionToken');\r\n      // const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/users/updateEmail',\r\n        { \"email\": changeEmail.email },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.status === 200) {\r\n        setEmail(changeEmail.email);\r\n        setIsLogin(false);\r\n        setIsChangeEmail(false);\r\n        setIsChangePassword(true);\r\n      } else if (res && res.status === 401) {\r\n        navigate('/admin');\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  }\r\n\r\n  const skipUpdateEmail = async (event: any) => {\r\n    setIsLogin(false);\r\n    setIsChangeEmail(false);\r\n    setIsChangePassword(true);\r\n  }\r\n\r\n  const ValidateChangePassword = (e: any) => {\r\n    const { name, value } = e.target;\r\n    if (value) {\r\n      if (mediumRegex.test(e.target.value)) {\r\n        setIsChangePasswordValidateError(false);\r\n        setChangePasswordValidateErrorMsg('');\r\n      } else {\r\n        setIsChangePasswordValidateError(true);\r\n        setChangePasswordValidateErrorMsg('Password is Required');\r\n      }\r\n    } else {\r\n      setIsChangePasswordValidateError(true);\r\n      setChangePasswordValidateErrorMsg('Password is Required');\r\n    }\r\n  };\r\n\r\n  const handleInputDefaultPasswordChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setChangePassword({ ...changePassword, [name]: value });\r\n  };\r\n\r\n  const handleupdatePassword = async (event: any) => {\r\n    event.preventDefault();\r\n    try {\r\n      const token = sessionToken;//localStorage.getItem('SessionToken');\r\n      //const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/users/updatePassword',\r\n        { \"password\": changePassword.password },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.status === 200) {\r\n        localStorage.setItem('isFirstLogin', JSON.stringify(false));\r\n        setIsLogin(false);\r\n        setIsChangeEmail(false);\r\n        setIsChangePassword(false);\r\n        setIs2FAOpen(true);\r\n        setIs2FAQRCode(false);\r\n        setIs2FAEnter(false);\r\n      } else if (res && res.status === 401) {\r\n        navigate('/admin');\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  }\r\n\r\n  const backUpdatePassword = async (event: any) => {\r\n    setIsLogin(false);\r\n    setIsChangeEmail(true);\r\n    setIsChangePassword(false);\r\n  }\r\n\r\n  const skipUpdatePassword = async (event: any) => {\r\n    localStorage.setItem('RefreshToken', refreshToken);\r\n    localStorage.setItem('SessionToken', sessionToken);\r\n    localStorage.setItem('UserId', userId);\r\n    localStorage.setItem('Credentials', JSON.stringify(crendientials));\r\n    localStorage.setItem('isFirstLogin', JSON.stringify(false));\r\n    // navigate('/admin/dashboard');\r\n    updateFCMToken();\r\n    const token = sessionToken;\r\n    let response = await APIservice.httpPost(\r\n      '/api/admin/systemflags/getAdminSystemFlag',\r\n      {},\r\n      token,\r\n      refreshToken\r\n    );\r\n    let data = response.recordList[0].systemFlag[0].value;\r\n    localStorage.setItem('DateFormat', data);\r\n    let _data = response.recordList;\r\n    if (_data && _data.length > 0) {\r\n      for (let i = 0; i < _data.length; i++) {\r\n        for (let j = 0; j < _data[i].group.length; j++) {\r\n          if (_data[i].group[j].systemFlag && _data[i].group[j].systemFlag.length > 0) {\r\n            let customFieldIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isEnableCustomFields');\r\n            if (customFieldIndex >= 0) {\r\n              let isEnableCustomFields = _data[i].group[j].systemFlag[customFieldIndex].value;\r\n              localStorage.setItem('isEnableCustomFields', isEnableCustomFields);\r\n            }\r\n\r\n            let profilePicApproveIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isUserProfilePicApprove');\r\n            if (profilePicApproveIndex >= 0) {\r\n              let isUserProfilePicApprove = _data[i].group[j].systemFlag[profilePicApproveIndex].value;\r\n              localStorage.setItem('isUserProfilePicApprove', isUserProfilePicApprove);\r\n            }\r\n\r\n            let familyIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isEnableFamilyDetails');\r\n            if (familyIndex >= 0) {\r\n              let isEnableFamilyDetails = _data[i].group[j].systemFlag[familyIndex].value;\r\n              localStorage.setItem('isEnableFamilyDetails', isEnableFamilyDetails);\r\n            }\r\n\r\n            let astroIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isEnableAstrologicDetails');\r\n            if (astroIndex >= 0) {\r\n              let isEnableAstrologicDetails = _data[i].group[j].systemFlag[astroIndex].value;\r\n              localStorage.setItem('isEnableAstrologicDetails', isEnableAstrologicDetails);\r\n            }\r\n\r\n            let lifeStyleIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isEnableLifeStyles');\r\n            if (lifeStyleIndex >= 0) {\r\n              let isEnableLifeStyles = _data[i].group[j].systemFlag[lifeStyleIndex].value;\r\n              localStorage.setItem('isEnableLifeStyles', isEnableLifeStyles);\r\n            }\r\n\r\n            let communityIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isEnableCommunity');\r\n            if (communityIndex >= 0) {\r\n              let isEnableCommunity = _data[i].group[j].systemFlag[communityIndex].value;\r\n              localStorage.setItem('isEnableCommunity', isEnableCommunity);\r\n            }\r\n\r\n            let subCommunityIndex = _data[i].group[j].systemFlag.findIndex(c => c.name === 'isEnableSubCommunity');\r\n            if (subCommunityIndex >= 0) {\r\n              let isEnableSubCommunity = _data[i].group[j].systemFlag[subCommunityIndex].value;\r\n              localStorage.setItem('isEnableSubCommunity', isEnableSubCommunity);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (_data[i].systemFlag && _data[i].systemFlag.length > 0) {\r\n          let customFieldIndex = _data[i].systemFlag.findIndex(c => c.name === 'isEnableCustomFields');\r\n          if (customFieldIndex >= 0) {\r\n            let isEnableCustomFields = _data[i].systemFlag[customFieldIndex].value;\r\n            localStorage.setItem('isEnableCustomFields', isEnableCustomFields);\r\n          }\r\n\r\n          let profilePicApproveIndex = _data[i].systemFlag.findIndex(c => c.name === 'isUserProfilePicApprove');\r\n          if (profilePicApproveIndex >= 0) {\r\n            let isUserProfilePicApprove = _data[i].systemFlag[profilePicApproveIndex].value;\r\n            localStorage.setItem('isUserProfilePicApprove', isUserProfilePicApprove);\r\n          }\r\n\r\n          let familyIndex = _data[i].systemFlag.findIndex(c => c.name === 'isEnableFamilyDetails');\r\n          if (familyIndex >= 0) {\r\n            let isEnableFamilyDetails = _data[i].systemFlag[familyIndex].value;\r\n            localStorage.setItem('isEnableFamilyDetails', isEnableFamilyDetails);\r\n          }\r\n\r\n          let astroIndex = _data[i].systemFlag.findIndex(c => c.name === 'isEnableAstrologicDetails');\r\n          if (astroIndex >= 0) {\r\n            let isEnableAstrologicDetails = _data[i].systemFlag[astroIndex].value;\r\n            localStorage.setItem('isEnableAstrologicDetails', isEnableAstrologicDetails);\r\n          }\r\n\r\n          let lifeStyleIndex = _data[i].systemFlag.findIndex(c => c.name === 'isEnableLifeStyles');\r\n          if (lifeStyleIndex >= 0) {\r\n            let isEnableLifeStyles = _data[i].systemFlag[lifeStyleIndex].value;\r\n            localStorage.setItem('isEnableLifeStyles', isEnableLifeStyles);\r\n          }\r\n\r\n          let communityIndex = _data[i].systemFlag.findIndex(c => c.name === 'isEnableCommunity');\r\n          if (communityIndex >= 0) {\r\n            let isEnableCommunity = _data[i].systemFlag[communityIndex].value;\r\n            localStorage.setItem('isEnableCommunity', isEnableCommunity);\r\n          }\r\n\r\n          let subCommunityIndex = _data[i].systemFlag.findIndex(c => c.name === 'isEnableSubCommunity');\r\n          if (subCommunityIndex >= 0) {\r\n            let isEnableSubCommunity = _data[i].systemFlag[subCommunityIndex].value;\r\n            localStorage.setItem('isEnableCommunity', isEnableSubCommunity);\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n    // let profilePicApproveIndex = response.recordList[0].systemFlag.findIndex(c => c.name === 'isUserProfilePicApprove');\r\n    // let isUserProfilePicApprove = response.recordList[0].systemFlag[profilePicApproveIndex].value\r\n    // localStorage.setItem('isUserProfilePicApprove', isUserProfilePicApprove)\r\n    // let customFieldIndex = response.recordList[4].group[0].systemFlag.findIndex(c => c.name === 'isEnableCustomFields');\r\n    // let isEnableCustomFields = response.recordList[4].group[0].systemFlag[customFieldIndex].value;\r\n    // localStorage.setItem('isEnableCustomFields', isEnableCustomFields);\r\n    if (crendientials.roleId === 3 && crendientials.pagePermissions.length === 0) {\r\n      navigate('/admin/nopagepermission');\r\n    }\r\n    else {\r\n      navigate('/admin/dashboard');\r\n    }\r\n  }\r\n\r\n  const handleSetup2FA = async (e: any) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = sessionToken;\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/users/generateOTP',\r\n        {},\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.status === 200) {\r\n        let cred = crendientials;\r\n        cred.isTwoFactorEnable = 1;\r\n        setCrendientials(cred);\r\n        setqrCodeUrl(res.recordList[0].otpAuthUrl);\r\n        setBase32(res.recordList[0].baseSecret);\r\n        setIs2FAOpen(false);\r\n        setIs2FAQRCode(true);\r\n        setIs2FAEnter(false);\r\n      } else if (res && res.status === 401) {\r\n        navigate('/admin');\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  }\r\n\r\n  const remindTwoFactor = async (e: any) => {\r\n    //null\r\n    e.preventDefault();\r\n    try {\r\n      const token = sessionToken\r\n      //const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/users/updateAuthenticationStatus',\r\n        { \"isTwoFactorEnable\": null },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.status === 200) {\r\n        localStorage.setItem('RefreshToken', refreshToken);\r\n        localStorage.setItem('SessionToken', sessionToken);\r\n        localStorage.setItem('UserId', userId);\r\n        localStorage.setItem('Credentials', JSON.stringify(crendientials));\r\n\r\n        let permissionDetail = JSON.parse(localStorage.getItem('Credentials'));\r\n        if (permissionDetail.roleId === 3 && permissionDetail.pagePermissions.length === 0) {\r\n          navigate('/admin/nopagepermission');\r\n        }\r\n        else {\r\n          navigate('/admin/dashboard');\r\n        }\r\n\r\n\r\n        // navigate('/admin/dashboard');\r\n        updateFCMToken();\r\n        const token = sessionToken;\r\n        let response = await APIservice.httpPost(\r\n          '/api/admin/systemflags/getAdminSystemFlag',\r\n          {},\r\n          token,\r\n          refreshToken\r\n        );\r\n        let data = response.recordList[0].systemFlag[0].value;\r\n        localStorage.setItem('DateFormat', data);\r\n      } else if (res && res.status === 401) {\r\n        navigate('/admin');\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  }\r\n\r\n  const skipTwoFactor = async (e: any) => {\r\n    //false\r\n    e.preventDefault();\r\n    try {\r\n      const token = sessionToken;//localStorage.getItem('SessionToken');\r\n      // const refreshToken = localStorage.getItem('RefreshToken');\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/users/updateAuthenticationStatus',\r\n        { \"isTwoFactorEnable\": false },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.status === 200) {\r\n        localStorage.setItem('RefreshToken', refreshToken);\r\n        localStorage.setItem('SessionToken', sessionToken);\r\n        localStorage.setItem('UserId', userId);\r\n        localStorage.setItem('Credentials', JSON.stringify(crendientials));\r\n        let permissionDetail = JSON.parse(localStorage.getItem('Credentials'));\r\n        if (permissionDetail.roleId === 3 && permissionDetail.pagePermissions.length === 0) {\r\n          navigate('/admin/nopagepermission');\r\n        }\r\n        else {\r\n          navigate('/admin/dashboard');\r\n        }\r\n\r\n        // navigate('/admin/dashboard');\r\n        updateFCMToken();\r\n        const token = sessionToken;\r\n        let response = await APIservice.httpPost(\r\n          '/api/admin/systemflags/getAdminSystemFlag',\r\n          {},\r\n          token,\r\n          refreshToken\r\n        );\r\n        let data = response.recordList[0].systemFlag[0].value;\r\n        localStorage.setItem('DateFormat', data);\r\n      } else if (res && res.status === 401) {\r\n        navigate('/admin');\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  }\r\n\r\n  const validateTwoFactorCode = (e: any) => {\r\n    const { name, value } = e.target;\r\n    if (value) {\r\n      setIsAuthenticationCodeErrorError(false);\r\n      setAuthenticationCodeErrorMsg('');\r\n\r\n    } else {\r\n      setIsAuthenticationCodeErrorError(true);\r\n      setAuthenticationCodeErrorMsg('Email is Required');\r\n    }\r\n  };\r\n\r\n  const handleInputTwoFactorCodeChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setAuthenticationCode({ ...authenticationCode, [name]: value });\r\n  };\r\n\r\n  const handleVerifyAuthenticateCode = async (e: any) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = sessionToken;\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/users/validateOTP',\r\n        { \"token\": authenticationCode.twoFactorCode },\r\n        token,\r\n        refreshToken\r\n      );\r\n      if (res.status === 200) {\r\n        localStorage.setItem('RefreshToken', refreshToken);\r\n        localStorage.setItem('SessionToken', sessionToken);\r\n        localStorage.setItem('UserId', userId);\r\n        localStorage.setItem('Credentials', JSON.stringify(crendientials));\r\n        localStorage.setItem('isFirstLogin', JSON.stringify(false));\r\n        navigate('/admin/dashboard');\r\n        updateFCMToken();\r\n        const token = sessionToken;\r\n        let response = await APIservice.httpPost(\r\n          '/api/admin/systemflags/getAdminSystemFlag',\r\n          {},\r\n          token,\r\n          refreshToken\r\n        );\r\n        let data = response.recordList[0].systemFlag[0].value;\r\n        localStorage.setItem('DateFormat', data);\r\n      } else if (res && res.status === 401) {\r\n        //navigate('/admin');\r\n        toast.error(\"Invalid Code\", {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleConfigurationChange = (e: any) => {\r\n    setApiUrl(e.target.value);\r\n    setIsAPIUrlValidation(false);\r\n    setIsVerified(false);\r\n  }\r\n\r\n  const handleApiConfiguration = () => {\r\n    if (apiUrl) {\r\n      setActiveStep(1);\r\n    }\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setPreviousVersionInstalled(e.target.value);\r\n    setVersion(null);\r\n  }\r\n\r\n  const handleLoadUrl = async (e) => {\r\n    const response = await fetch('/admin/variable.json'); // Adjust the file path as needed\r\n    const data = await response.json();\r\n    setApiUrl(data.REACT_APP_BASEURL);\r\n    setIsUrlErrorMsg(false);\r\n  }\r\n  const handleConfiguration = async (e: any) => {\r\n    e.preventDefault();\r\n    if (!apiUrl) {\r\n      setIsAPIUrlValidation(true);\r\n    }\r\n    else {\r\n      setIsLoading(true);\r\n      // data.REACT_APP_BASEURL = apiUrl;\r\n      // const data1 = JSON.stringify(data)\r\n      APIservice.config.apiUrl = apiUrl;\r\n      getConfiguration();\r\n    }\r\n  }\r\n\r\n  const handleCreateDatabaseUser = (e: any) => {\r\n    setIsCreateDatabaseUser(e.target.checked)\r\n  }\r\n\r\n  const getConfiguration = async () => {\r\n    try {\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/configuration/getConfiguration',\r\n        {},\r\n      );\r\n      if (res && res.status == 200) {\r\n        // const text = \"This is the content of the file.\";\r\n        setIsTakeHostData(res.recordList[0].isTakeHostDetail);\r\n        if (res.recordList[0].isTakeHostDetail) {\r\n          setIsConfiguration(true);\r\n          setIsLogin(false);\r\n          setActiveStep(0);\r\n        }\r\n        setIsVerified(true);\r\n        setIsLoading(false);\r\n        // if (apiUrl !== '')\r\n        //   localStorage.setItem('REACT_APP_BASEURL', apiUrl);\r\n        // const blob = new Blob(['Hello, world!'], { type: 'text/plain;charset=utf-8' });\r\n        // saveAs(blob, '../hello.txt');\r\n        // fileSa\r\n        // const emptyBlob = new Blob([], { type: 'text/plain' });\r\n        // saveAs(emptyBlob, 'variable.json');\r\n\r\n        // const blob = new Blob([text], { type: 'text/plain;charset=utf-8' });\r\n        // saveAs(blob, 'variable.json');\r\n      }\r\n      else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setIsConfiguration(true);\r\n      setIsLogin(false);\r\n      setIsVerified(false);\r\n      setIsUrlErrorMsg(true);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  }\r\n\r\n  // const removeFile = async () => {\r\n  //   try {\r\n  //     // Make a fetch request to your server to delete the file\r\n  //     const response = await fetch(`variable.json`, {\r\n  //       method: 'DELETE',\r\n  //       headers: {\r\n  //         'Content-Type': 'application/json'\r\n  //         // You might need to include additional headers, such as authorization tokens\r\n  //       }\r\n  //     });\r\n\r\n  //     if (response.ok) {\r\n  //       console.log(`File \"${fileName}\" has been removed.`);\r\n  //     } else {\r\n  //       console.error('Failed to remove file.');\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error('An error occurred while removing the file:', error);\r\n  //   }\r\n  // }\r\n\r\n  const handleHostInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setHostInput({ ...hostData, [name]: value });\r\n    setIsLoading(false);\r\n    setIsTeseted(false);\r\n  };\r\n\r\n\r\n\r\n  const handleUpdateHostData = async (e: any) => {\r\n    if (!hostData.MYSQL_HOST) {\r\n      setIsHostRequired(true)\r\n    }\r\n    if (!hostData.MYSQL_USER) {\r\n      setIsUserRequired(true)\r\n    }\r\n    if (!hostData.MYSQL_PORT) {\r\n      setIsPortRequired(true)\r\n    }\r\n    // if (!hostData.MYSQL_PASSWORD) {\r\n    //   setIsPasswordRequired(true)\r\n    // }\r\n    else {\r\n      setIsHostRequired(false);\r\n      setIsPasswordRequired(false);\r\n      setIsUserRequired(false);\r\n      setIsPortRequired(false);\r\n      setIsLoading(true);\r\n      e.preventDefault();\r\n      // data.REACT_APP_BASEURL = apiUrl;\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/configuration/testConnection',\r\n        hostData,\r\n      );\r\n      if (res.status === 200) {\r\n        setIsLogin(true);\r\n        setIsTakeHostData(false);\r\n        setIsTeseted(true);\r\n        setIsLoading(false);\r\n        setDatabases(res.recordList);\r\n      }\r\n      else if (res && res.status == 401) {\r\n        setIsLoading(false);\r\n        toast.error(\"Invalid Code\", {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 500) {\r\n        setIsLoading(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        setIsLoading(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        setIsLoading(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        setIsLoading(false);\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const handlehost = async () => {\r\n    setActiveStep(1);\r\n  }\r\n\r\n  const handleErrorBack = async () => {\r\n    setActiveStep(1);\r\n    setIsSetUpDatabase(false);\r\n    setIsInstallSucessfully(true);\r\n    setIsLoading(false);\r\n    setIsTeseted(false);\r\n  }\r\n\r\n  const databaseConfiguration = async (e: any) => {\r\n    setIsInstallSucessfully(false);\r\n    if (!version && isPreviousVersionInstalled !== 'false') {\r\n      setIsVersionRequired(true);\r\n    }\r\n    if (!hostData.MYSQL_DATABASE) {\r\n      setIsDatabaseRequired(true);\r\n    }\r\n    else {\r\n      setActiveStep(2);\r\n      setIsSetUpDatabase(true);\r\n      setDatabaseState('creating');\r\n      setIsVersionRequired(false);\r\n      setIsDatabaseRequired(false);\r\n      setIsLoading(true);\r\n      e.preventDefault();\r\n      // data.REACT_APP_BASEURL = apiUrl;\r\n      let data1 = {\r\n        'version': isPreviousVersionInstalled ? version : null,\r\n        'MYSQL_DATABASE': hostData.MYSQL_DATABASE,\r\n        'isCreateDatabaseUser': isCreatedatabaseUser,\r\n        'username': hostData.username,\r\n        'password': hostData.password\r\n      }\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/configuration/databaseConfiguration',\r\n        data1,\r\n      );\r\n      if (res.status === 200) {\r\n        setUserName(res.recordList[0].email);\r\n        setPassword(\"admin1234\");\r\n        setDatabaseState('created');\r\n        if (ismasterData) {\r\n          setIsInstallMasterData(true);\r\n          isInstallMasterData = true;\r\n          let data1 = {\r\n            'version': version,\r\n          }\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/configuration/installMasterData',\r\n            data1,\r\n          );\r\n          if (res && res.status == 200) {\r\n            setIsInstallMasterData(true);\r\n            isInstallMasterData = true;\r\n            setMasterdataState('created')\r\n          }\r\n        }\r\n        if (isSampleData) {\r\n\r\n          let data1 = {\r\n            'version': version\r\n          }\r\n          const res = await APIservice.httpPost(\r\n            '/api/admin/configuration/installSampleData',\r\n            data1,\r\n          );\r\n          if (res && res.status == 200) {\r\n            setIsInstallSampleData(true)\r\n            isInstalledSampleData = true;\r\n            setSampledataState('created')\r\n          }\r\n        }\r\n        // setIsLogin(true);\r\n\r\n        if (ismasterData || isSampleData) {\r\n          if (ismasterData && (isInstallMasterData == true)) {\r\n            setIsInstallSucessfully(true);\r\n          }\r\n          if (isSampleData && (isInstalledSampleData == true)) {\r\n            setIsInstallSucessfully(true);\r\n          }\r\n        }\r\n        else {\r\n          setIsInstallSucessfully(true);\r\n        }\r\n        setIsTakeHostData(false);\r\n        setIsTeseted(true);\r\n        setIsLoading(false);\r\n\r\n      }\r\n      else if (res && res.status == 401) {\r\n        setDatabaseState('Error');\r\n        setActiveStep(1);\r\n        toast.error(\"Invalid Code\", {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 500) {\r\n        setDatabaseState('Error');\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        setDatabaseState('Error');\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        setDatabaseState('Error');\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        setDatabaseState('Error');\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const generatePassword = () => {\r\n    const length = 8;\r\n    const charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n    let password = \"\";\r\n    for (let i = 0; i < length; i++) {\r\n      const randomIndex = Math.floor(Math.random() * charset.length);\r\n      password += charset[randomIndex];\r\n    }\r\n    setHostInput({ ...hostData, ['password']: password });\r\n    // hostData.password = password;\r\n  }\r\n  const handleGotoLogin = async () => {\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/configuration/restartConnection',\r\n      hostData,\r\n    );\r\n    if (res.status === 200) {\r\n      if (res.recordList == false) {\r\n        toast.warning('Please restart your API server before loggin in.', {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n        setIsRestartServerRequired(true);\r\n      }\r\n      else {\r\n        setIsRestartServerRequired(false);\r\n        setIsLogin(true);\r\n        setIsConfiguration(false)\r\n        if (!version) {\r\n          setLogin({ 'email': userName, 'password': password });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const installMasterData = async (e: any) => {\r\n    setIsLoading(true);\r\n    e.preventDefault();\r\n    // data.REACT_APP_BASEURL = apiUrl;\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/configuration/installMasterData',\r\n      hostData,\r\n    );\r\n    if (res.status === 200) {\r\n      setIsLogin(true);\r\n      setIsTakeHostData(false);\r\n      setIsTeseted(true);\r\n      setIsLoading(false);\r\n    }\r\n    else if (res && res.status == 401) {\r\n      toast.error(\"Invalid Code\", {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 500) {\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 400) {\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 300) {\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    } else if (res.status == 404) {\r\n      toast.error(res.message, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleVersionChange = async (e: any) => {\r\n    setVersion(e.target.value)\r\n  }\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [skipped, setSkipped] = React.useState(new Set<number>());\r\n\r\n  const isStepOptional = (step: number) => {\r\n    return step === 1;\r\n  };\r\n\r\n  const isStepSkipped = (step: number) => {\r\n    return skipped.has(step);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    let newSkipped = skipped;\r\n    if (isStepSkipped(activeStep)) {\r\n      newSkipped = new Set(newSkipped.values());\r\n      newSkipped.delete(activeStep);\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped(newSkipped);\r\n  };\r\n\r\n  const handleInstallMasterData = (e: any) => {\r\n    setIsMasterData(e.target.checked)\r\n  }\r\n\r\n  const handleInstallSampleData = (e: any) => {\r\n    setIsSampleData(e.target.checked)\r\n  }\r\n\r\n  const handleBack = () => {\r\n    if (activeStep === 1) {\r\n      setActiveStep(0);\r\n    }\r\n    else {\r\n      setActiveStep(1);\r\n    }\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    if (!isStepOptional(activeStep)) {\r\n      // You probably want to guard against something like this,\r\n      // it should never occur unless someone's actively trying to break something.\r\n      throw new Error(\"You can't skip a step that isn't optional.\");\r\n    }\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    setSkipped((prevSkipped) => {\r\n      const newSkipped = new Set(prevSkipped.values());\r\n      newSkipped.add(activeStep);\r\n      return newSkipped;\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <OverviewWrapper>\r\n        <Helmet>\r\n          <title>Matrimony</title>\r\n        </Helmet>\r\n        <Container>\r\n          {!isConfiguration && (\r\n            <Row\r\n              className=\"d-flex justify-content-center align-items-center\"\r\n              style={{\r\n                position: 'fixed',\r\n                left: 0,\r\n                top: 0,\r\n                width: '100%',\r\n                height: '100%'\r\n              }}\r\n            >\r\n\r\n              <Col md={8} lg={6} xs={12} style={{ maxWidth: '500px' }}>\r\n                <div style={{ height: '72px' }}>\r\n                  <Logo />\r\n                  {/* <img src=\"/Image20221010173301.png\" height=\"50\" alt=\"logo\" /> */}\r\n                </div>\r\n                <Card style={{ borderRadius: '10px' }}>\r\n                  <CardContent style={{ padding: '24px' }}>\r\n                    {isLogin &&\r\n                      <Form onSubmit={onFormSubmit}>\r\n                        <Typography\r\n                          className=\"mb-3\"\r\n                          align=\"center\"\r\n                          fontSize=\"25px\"\r\n                          fontWeight=\"bolder\"\r\n                        >\r\n                          Login\r\n                        </Typography>\r\n                        <TextField\r\n                          required\r\n                          type=\"email\"\r\n                          sx={{ width: '100%', mt: 3 }}\r\n                          name=\"email\"\r\n                          label=\"Email\"\r\n                          autoFocus\r\n                          value={login.email}\r\n                          onChange={(e: any) => {\r\n                            validateEmail(e);\r\n                            handleInputChange(e);\r\n                          }}\r\n                        />\r\n                        <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                          {isEmailValidateError && emailValidateErrorMsg}\r\n                        </FormHelperText>\r\n                        <TextField\r\n                          required\r\n                          sx={{ width: '100%', mt: '1%' }}\r\n                          name=\"password\"\r\n                          label=\"Password\"\r\n                          type={showPassword ? 'text' : 'password'}\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                  onClick={() => setShowPassword(!showPassword)}\r\n                                  edge=\"end\"\r\n                                >\r\n                                  {showPassword === true ? (\r\n                                    <VisibilityIcon />\r\n                                  ) : (\r\n                                    <VisibilityOffIcon />\r\n                                  )}\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            )\r\n                          }}\r\n                          value={login.password}\r\n                          onChange={(e: any) => {\r\n                            ValidatePassword(e);\r\n                            handleInputChange(e);\r\n                          }}\r\n                        />\r\n\r\n                        <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                          {isPasswordValidateError && passwordValidateErrorMsg}\r\n                        </FormHelperText>\r\n\r\n                        <Button\r\n                          fullWidth\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          onClick={handlesubmit}\r\n                          style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                        >\r\n                          <div>\r\n                            {isLoading ? (\r\n                              <LoaderLogin title=\"Loading...\" />\r\n                            ) : (\r\n                              'LOGIN'\r\n                            )}\r\n                          </div>\r\n                        </Button>\r\n                        <Stack\r\n                          direction=\"row\"\r\n                          alignItems=\"center\"\r\n                          justifyContent=\"flex-end\"\r\n                          sx={{ my: 1 }}\r\n                        >\r\n                          <RouterLink\r\n                            to=\"/forgotpassword\"\r\n                            style={{\r\n                              color: '#5569ff',\r\n                              textDecoration: 'none',\r\n                              justifyContent: 'flex-end',\r\n                              fontSize: '15px'\r\n                            }}\r\n                          >\r\n                            Forgot password?\r\n                          </RouterLink>\r\n                        </Stack>\r\n                      </Form>\r\n                    }\r\n                    {isChangeEmail && <>\r\n                      <Form>\r\n                        <Typography\r\n                          className=\"mb-3\"\r\n                          align=\"center\"\r\n                          fontSize=\"25px\"\r\n                          fontWeight=\"bolder\"\r\n                        >\r\n                          Change Default Email\r\n                        </Typography>\r\n                        <TextField\r\n                          required\r\n                          type=\"email\"\r\n                          sx={{ width: '100%', mt: 3 }}\r\n                          name=\"email\"\r\n                          label=\"Email\"\r\n                          autoFocus\r\n                          value={changeEmail.email}\r\n                          onChange={(e: any) => {\r\n                            validateChangeEmail(e);\r\n                            handleInputDefaultEmailChange(e);\r\n                          }}\r\n                        />\r\n                        <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                          {isChangeEmailValidateError && changeEmailValidateErrorMsg}\r\n                        </FormHelperText>\r\n\r\n                        <Button\r\n                          fullWidth\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          onClick={handleupdateEmail}\r\n                          style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                        >\r\n                          <div>\r\n                            {isLoading ? (\r\n                              <LoaderLogin title=\"Loading...\" />\r\n                            ) : (\r\n                              'Change Email'\r\n                            )}\r\n                          </div>\r\n                        </Button>\r\n                        <Stack\r\n                          direction=\"row\"\r\n                          alignItems=\"center\"\r\n                          justifyContent=\"space-evenly\"\r\n                          sx={{ my: 1 }}\r\n                        >\r\n                          <Link style={{\r\n                            color: '#5569ff',\r\n                            textDecoration: 'none',\r\n                            justifyContent: 'flex-end',\r\n                            fontSize: '15px',\r\n                            cursor: 'pointer'\r\n                          }} onClick={skipUpdateEmail}>Skip</Link>\r\n                        </Stack>\r\n                      </Form>\r\n                    </>}\r\n                    {isChangePassword && <>\r\n                      <Form>\r\n                        <Typography\r\n                          className=\"mb-3\"\r\n                          align=\"center\"\r\n                          fontSize=\"25px\"\r\n                          fontWeight=\"bolder\"\r\n                        >\r\n                          Change Default Password\r\n                        </Typography>\r\n                        <TextField\r\n                          required\r\n                          sx={{ width: '100%', mt: '1%' }}\r\n                          name=\"password\"\r\n                          label=\"Password\"\r\n                          type={showChangePassword ? 'text' : 'password'}\r\n                          InputProps={{\r\n                            endAdornment: (\r\n                              <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                  onClick={() => setShowChangePassword(!showChangePassword)}\r\n                                  edge=\"end\"\r\n                                >\r\n                                  {showChangePassword === true ? (\r\n                                    <VisibilityIcon />\r\n                                  ) : (\r\n                                    <VisibilityOffIcon />\r\n                                  )}\r\n                                </IconButton>\r\n                              </InputAdornment>\r\n                            )\r\n                          }}\r\n                          value={changePassword.password}\r\n                          onChange={(e: any) => {\r\n                            ValidateChangePassword(e);\r\n                            handleInputDefaultPasswordChange(e);\r\n                          }}\r\n                        />\r\n                        <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                          {isChangePasswordValidateError && changePasswordValidateErrorMsg}\r\n                        </FormHelperText>\r\n                        <Button\r\n                          fullWidth\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          onClick={handleupdatePassword}\r\n                          style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                        >\r\n                          <div>\r\n                            {isLoading ? (\r\n                              <LoaderLogin title=\"Loading...\" />\r\n                            ) : (\r\n                              'Change Password'\r\n                            )}\r\n                          </div>\r\n                        </Button>\r\n                        <Stack\r\n                          direction=\"row\"\r\n                          alignItems=\"center\"\r\n                          justifyContent=\"space-evenly\"\r\n                          sx={{ my: 1 }}\r\n                        >\r\n                          <Link style={{\r\n                            color: '#5569ff',\r\n                            textDecoration: 'none',\r\n                            justifyContent: 'flex-end',\r\n                            fontSize: '15px',\r\n                            cursor: 'pointer'\r\n                          }} onClick={backUpdatePassword}>Back</Link>\r\n                          <Link style={{\r\n                            color: '#5569ff',\r\n                            textDecoration: 'none',\r\n                            justifyContent: 'flex-end',\r\n                            fontSize: '15px',\r\n                            cursor: 'pointer'\r\n                          }} onClick={skipUpdatePassword}>Skip</Link>\r\n                        </Stack>\r\n                      </Form>\r\n                    </>}\r\n                    {is2FAOpen &&\r\n                      <Form>\r\n                        <Typography\r\n                          className=\"mb-3\"\r\n                          align=\"center\"\r\n                          fontSize=\"25px\"\r\n                          fontWeight=\"bolder\"\r\n                        >\r\n                          Set Up Two-Factor Authentication\r\n                        </Typography>\r\n                        <Typography\r\n                          noWrap\r\n                          style={{\r\n                            fontSize: '15px',\r\n                            fontWeight: 'bold',\r\n                            marginBottom: 'none'\r\n                          }}\r\n                        >\r\n                          Send Authentication Code to your login Email\r\n                        </Typography>\r\n                        <Button\r\n                          fullWidth\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          disabled={login?.email === \"demo@admin.com\"}\r\n                          onClick={handleSetup2FA}\r\n                          style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                        >\r\n                          <div>\r\n                            {isLoading ? (\r\n                              <LoaderLogin title=\"Loading...\" />\r\n                            ) : (\r\n                              'Setup 2FA'\r\n                            )}\r\n                          </div>\r\n                        </Button>\r\n                        <Stack\r\n                          direction=\"row\"\r\n                          alignItems=\"center\"\r\n                          justifyContent=\"space-evenly\"\r\n                          sx={{ my: 1 }}\r\n                        >\r\n                          <Link style={{\r\n                            color: '#5569ff',\r\n                            textDecoration: 'none',\r\n                            justifyContent: 'flex-end',\r\n                            fontSize: '15px',\r\n                            cursor: 'pointer'\r\n                          }} onClick={remindTwoFactor}>Remind me Later</Link>\r\n                          {login?.email === \"demo@admin.com\" ? <>\r\n                            Skip For Now\r\n                          </> :\r\n                            <Link style={{\r\n                              color: '#5569ff',\r\n                              textDecoration: 'none',\r\n                              justifyContent: 'flex-end',\r\n                              fontSize: '15px',\r\n                              cursor: 'pointer'\r\n                            }} onClick={skipTwoFactor}>Skip For Now</Link>\r\n                          }\r\n                        </Stack>\r\n                      </Form>\r\n                    }\r\n                    {is2FAQRCode &&\r\n                      <Form>\r\n                        <Typography\r\n                          className=\"mb-3\"\r\n                          align=\"center\"\r\n                          fontSize=\"25px\"\r\n                          fontWeight=\"bolder\"\r\n                        >\r\n                          Two-Factor Authentication\r\n                        </Typography>\r\n                        <h4 className={styles.heading4}>\r\n                          Configuring Google Authenticator or Authy\r\n                        </h4>\r\n                        <div className={styles.orderedList}>\r\n                          <li>\r\n                            Install Google Authenticator (IOS - Android) or Authy (IOS -\r\n                            Android).\r\n                          </li>\r\n                          <li>In the authenticator app, select \"+\" icon.</li>\r\n                          <li>\r\n                            Select \"Scan a barcode (or QR code)\" and use the phone's camera\r\n                            to scan this barcode.\r\n                          </li>\r\n                        </div>\r\n                        <div>\r\n                          <h4 className={styles.heading4}>Scan QR Code</h4>\r\n                          <div className=\"flex justify-center\">\r\n                            <QRCode value={qrcodeUrl} />\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <h4 className={styles.heading4}>Or Enter Code Into Your App</h4>\r\n                          <p className=\"text-sm\">SecretKey: {base32} (Base32 encoded)</p>\r\n                        </div>\r\n\r\n                        <TextField\r\n                          required\r\n                          type=\"text\"\r\n                          sx={{ width: '100%', mt: 3 }}\r\n                          name=\"twoFactorCode\"\r\n                          label=\"Authentication Code\"\r\n                          autoFocus\r\n                          value={authenticationCode.twoFactorCode}\r\n                          onChange={(e: any) => {\r\n                            validateTwoFactorCode(e);\r\n                            handleInputTwoFactorCodeChange(e);\r\n                          }}\r\n                        />\r\n                        <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                          {isAuthenticationCodeError && authenticationCodeErrorMsg}\r\n                        </FormHelperText>\r\n\r\n                        <Button\r\n                          fullWidth\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          onClick={handleVerifyAuthenticateCode}\r\n                          style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                        >\r\n                          <div>\r\n                            {isLoading ? (\r\n                              <LoaderLogin title=\"Loading...\" />\r\n                            ) : (\r\n                              'Authenticate'\r\n                            )}\r\n                          </div>\r\n                        </Button>\r\n\r\n                      </Form>\r\n                    }\r\n                    {is2FAEnter &&\r\n                      <Form>\r\n                        <Typography\r\n                          className=\"mb-3\"\r\n                          align=\"center\"\r\n                          fontSize=\"25px\"\r\n                          fontWeight=\"bolder\"\r\n                        >\r\n                          Two-Factor Authentication\r\n                        </Typography>\r\n                        <Typography\r\n                          noWrap\r\n                          style={{\r\n                            fontSize: '15px',\r\n                            fontWeight: 'bold',\r\n                            marginBottom: 'none'\r\n                          }}\r\n                        >\r\n                          Enter Authentication Code\r\n                        </Typography>\r\n                        <TextField\r\n                          required\r\n                          type=\"text\"\r\n                          sx={{ width: '100%', mt: 3 }}\r\n                          name=\"twoFactorCode\"\r\n                          label=\"Authentication Code\"\r\n                          autoFocus\r\n                          value={authenticationCode.twoFactorCode}\r\n                          onChange={(e: any) => {\r\n                            validateTwoFactorCode(e);\r\n                            handleInputTwoFactorCodeChange(e);\r\n                          }}\r\n                        />\r\n                        <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                          {isAuthenticationCodeError && authenticationCodeErrorMsg}\r\n                        </FormHelperText>\r\n\r\n                        <Button\r\n                          fullWidth\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          onClick={handleVerifyAuthenticateCode}\r\n                          style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                        >\r\n                          <div>\r\n                            {isLoading ? (\r\n                              <LoaderLogin title=\"Loading...\" />\r\n                            ) : (\r\n                              'Authenticate'\r\n                            )}\r\n                          </div>\r\n                        </Button>\r\n\r\n                      </Form>\r\n                    }\r\n                    {/* {isConfiguration &&\r\n                    <Form onSubmit={handleConfiguration}>\r\n                      <Typography\r\n                        className=\"mb-3\"\r\n                        align=\"center\"\r\n                        fontSize=\"25px\"\r\n                        fontWeight=\"bolder\"\r\n                      >\r\n                        Configuration\r\n                      </Typography>\r\n                      <TextField\r\n                        required\r\n                        type=\"text\"\r\n                        sx={{ width: '100%', mt: 3 }}\r\n                        name=\"apiUrl\"\r\n                        label=\"apiUrl\"\r\n                        autoFocus\r\n                        value={apiUrl}\r\n                        onChange={(e: any) => {\r\n                          handleConfigurationChange(e);\r\n                        }}\r\n                      />\r\n                      <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                        {isEmailValidateError && emailValidateErrorMsg}\r\n                      </FormHelperText>\r\n                      <Button\r\n                        fullWidth\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        onClick={handleConfiguration}\r\n                        style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                      >\r\n                        <div>\r\n                          {isLoading ? (\r\n                            <LoaderLogin title=\"Loading...\" />\r\n                          ) : (\r\n                            'Submit'\r\n                          )}\r\n                        </div>\r\n                      </Button>\r\n\r\n                    </Form>\r\n                  }\r\n                  {isTakeHostData &&\r\n                    <Form onSubmit={handleUpdateHostData}>\r\n                      <Typography\r\n                        className=\"mb-3\"\r\n                        align=\"center\"\r\n                        fontSize=\"25px\"\r\n                        fontWeight=\"bolder\"\r\n                      >\r\n                        Host Configuration\r\n                      </Typography>\r\n                      <TextField\r\n                        required\r\n                        type=\"text\"\r\n                        sx={{ width: '100%', mt: 3 }}\r\n                        name=\"MYSQL_HOST\"\r\n                        label=\"MYSQL_HOST\"\r\n                        autoFocus\r\n                        value={hostData.MYSQL_HOST}\r\n                        onChange={(e: any) => {\r\n                          handleHostInputChange(e);\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        required\r\n                        type=\"text\"\r\n                        sx={{ width: '100%', mt: 3 }}\r\n                        name=\"MYSQL_DATABASE\"\r\n                        label=\"MYSQL_DATABASE\"\r\n                        autoFocus\r\n                        value={hostData.MYSQL_DATABASE}\r\n                        onChange={(e: any) => {\r\n                          handleHostInputChange(e);\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        required\r\n                        type=\"text\"\r\n                        sx={{ width: '100%', mt: 3 }}\r\n                        name=\"MYSQL_USER\"\r\n                        label=\"MYSQL_USER\"\r\n                        autoFocus\r\n                        value={hostData.MYSQL_USER}\r\n                        onChange={(e: any) => {\r\n                          handleHostInputChange(e);\r\n                        }}\r\n                      />\r\n                      <TextField\r\n                        required\r\n                        type=\"password\"\r\n                        sx={{ width: '100%', mt: 3 }}\r\n                        name=\"MYSQL_PASSWORD\"\r\n                        label=\"MYSQL_PASSWORD\"\r\n                        autoFocus\r\n                        value={hostData.MYSQL_PASSWORD}\r\n                        onChange={(e: any) => {\r\n                          handleHostInputChange(e);\r\n                        }}\r\n                      />\r\n               \r\n                      <Button\r\n                        fullWidth\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        onClick={handleUpdateHostData}\r\n                        style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                      >\r\n                        <div>\r\n                          {isLoading ? (\r\n                            <LoaderLogin title=\"Loading...\" />\r\n                          ) : (\r\n                            'Submit'\r\n                          )}\r\n                        </div>\r\n                      </Button>\r\n\r\n                    </Form>\r\n                  } */}\r\n\r\n                  </CardContent>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          {(isConfiguration || isTakeHostData) &&\r\n            <>\r\n              {/* <div style={{ height: '72px', marginTop: \"20px\" }}>\r\n                <Logo />\r\n              </div> */}\r\n              <div style={{ textAlign: 'center', marginTop: '40px' }}>\r\n                <img src=\"/admin/Image20221010173301.png\" height=\"50\" alt=\"logo\" />\r\n              </div>\r\n              <Typography sx={{ textAlign: 'center', fontSize: '36px', marginTop: \"11px\", fontWeight: \"600\", marginBottom: \"20px\", color: \"#596bfa\" }}>\r\n                Welcome to Matrimony Configuration\r\n              </Typography>\r\n              <Typography sx={{ textAlign: 'center', fontSize: '12px', fontWeight: \"600px\", marginBottom: \"20px\" }}>\r\n                Please follow below steps to setup\r\n              </Typography >\r\n\r\n              <Row>\r\n                <Col md={3} lg={3} xs={12}></Col>\r\n                <Col md={6} lg={6} xs={12}>\r\n                  <Card sx={{\r\n                    padding: '10px', marginTop: \"10px\", margin: 'auto', minHeight: 'calc(100vh - 240px)', position: 'relative', paddingBottom: '80px'\r\n\r\n                  }}>\r\n                    <Row>\r\n                      <Col md={12} lg={12} xs={12}>\r\n                        <Box sx={{ width: '100%' }}>\r\n\r\n                          <Stepper activeStep={activeStep} style={{ margin: '0px auto 30px auto' }}>\r\n                            {steps.map((label, index) => {\r\n                              const stepProps: { completed?: boolean } = {};\r\n                              const labelProps: {\r\n                                optional?: React.ReactNode;\r\n                              } = {};\r\n\r\n                              if (isStepSkipped(index)) {\r\n                                stepProps.completed = false;\r\n                              }\r\n                              return (\r\n                                <Step key={label} {...stepProps}>\r\n                                  <StepLabel {...labelProps}>{label}</StepLabel>\r\n                                </Step>\r\n                              );\r\n                            })}\r\n                          </Stepper>\r\n                          {activeStep === steps.length ? (\r\n                            <React.Fragment>\r\n                              <Typography sx={{ mt: 2, mb: 1 }}>\r\n                                All steps completed - you&apos;re finished\r\n                              </Typography>\r\n                              <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\r\n                                <Box sx={{ flex: '1 1 auto' }} />\r\n                                <Button onClick={handleReset}>Reset</Button>\r\n                              </Box>\r\n                            </React.Fragment>\r\n                          ) : (\r\n                            <React.Fragment>\r\n                              {activeStep == 0 && (\r\n                                <>\r\n                                  <Form >\r\n                                    <div>\r\n                                      <TextField\r\n                                        required\r\n                                        type=\"text\"\r\n                                        sx={{ width: '100%' }}\r\n                                        name=\"MYSQL_HOST\"\r\n                                        label=\"Host Name\"\r\n                                        autoFocus\r\n                                        value={hostData.MYSQL_HOST}\r\n                                        onChange={(e: any) => {\r\n                                          handleHostInputChange(e);\r\n                                        }} />\r\n                                      {isHostRequired && (\r\n                                        <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                                          HostName is required\r\n                                        </FormHelperText>\r\n                                      )}\r\n                                      <TextField\r\n                                        required\r\n                                        type=\"text\"\r\n                                        sx={{ width: '100%', mt: 3 }}\r\n                                        name=\"MYSQL_USER\"\r\n                                        label=\"User Name\"\r\n                                        autoFocus\r\n                                        value={hostData.MYSQL_USER}\r\n                                        onChange={(e: any) => {\r\n                                          handleHostInputChange(e);\r\n                                        }} />\r\n                                      {isUserRequired && (\r\n                                        <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                                          UserName is required\r\n                                        </FormHelperText>\r\n                                      )}\r\n                                      <TextField\r\n                                        required\r\n                                        type={showPassword ? 'text' : 'password'}\r\n                                        sx={{ width: '100%', mt: 3 }}\r\n                                        name=\"MYSQL_PASSWORD\"\r\n                                        label=\"Password\"\r\n                                        autoFocus\r\n                                        value={hostData.MYSQL_PASSWORD}\r\n                                        onChange={(e: any) => {\r\n                                          handleHostInputChange(e);\r\n                                        }}\r\n                                        InputProps={{\r\n                                          endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                              <IconButton\r\n                                                onClick={() => setShowPassword(!showPassword)}\r\n                                                edge=\"end\"\r\n                                              >\r\n                                                {showPassword === true ? (\r\n                                                  <VisibilityIcon />\r\n                                                ) : (\r\n                                                  <VisibilityOffIcon />\r\n                                                )}\r\n                                              </IconButton>\r\n                                            </InputAdornment>\r\n                                          )\r\n                                        }} />\r\n                                      <TextField\r\n                                        required\r\n                                        type=\"text\"\r\n                                        sx={{ width: '100%', mt: 3 }}\r\n                                        name=\"MYSQL_PORT\"\r\n                                        label=\"PORT\"\r\n                                        autoFocus\r\n                                        value={hostData.MYSQL_PORT}\r\n                                        onChange={(e: any) => {\r\n                                          handleHostInputChange(e);\r\n                                        }} />\r\n                                      {isPORTRequired && (\r\n                                        <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                                          PORT is required\r\n                                        </FormHelperText>\r\n                                      )}\r\n                                    </div>\r\n\r\n                                  </Form>\r\n                                  <div style={{ position: 'absolute', bottom: '20px', width: '96%', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '10px' }}>\r\n                                    <Button\r\n                                      fullWidth\r\n                                      type=\"button\"\r\n                                      variant=\"contained\"\r\n                                      onClick={handleUpdateHostData}\r\n                                      style={{ fontWeight: 'bolder' }}\r\n                                      disabled={isTested && !isLoading}\r\n                                    >\r\n                                      <div>\r\n                                        {(!isTested && !isLoading) && 'Test Connection'}\r\n                                        {isLoading && 'Testing'}\r\n                                        {isTested && !isLoading && 'Connection Established'}\r\n                                      </div>\r\n                                    </Button>\r\n                                    <Button\r\n                                      fullWidth\r\n                                      type=\"submit\"\r\n                                      variant=\"contained\"\r\n                                      style={{ fontWeight: 'bolder' }}\r\n                                      disabled={!isTested}\r\n                                      onClick={handlehost}\r\n                                    // onClick={handleUpdateHostData}\r\n                                    >\r\n                                      <div>\r\n                                        {isLoading ? (\r\n                                          <LoaderLogin title=\"Loading...\" />\r\n                                        ) : (\r\n                                          'Save & Next'\r\n                                        )}\r\n                                      </div>\r\n                                    </Button>\r\n                                  </div></>\r\n\r\n\r\n                              )}\r\n                              {activeStep == 1 &&\r\n                                <>\r\n                                  {/* <Card sx={{\r\n                                        padding: '10px', marginTop: \"20px\", maxWidth: '500px', margin: 'auto', height: 'calc(100vh - 390px)',\r\n                                        overflow: 'auto'\r\n                                      }}> */}\r\n                                  {/* <Typography\r\n                                          className=\"mb-3\"\r\n                                          align=\"center\"\r\n                                          fontSize=\"25px\"\r\n                                          fontWeight=\"bolder\"\r\n                                        >\r\n                                          Database Configuration\r\n                                        </Typography> */}\r\n                                  <Form onSubmit={databaseConfiguration}>\r\n                                    <FormLabel id=\"demo-radio-buttons-group-label\" sx={{ display: 'inline-block' }} >\r\n                                      Previous version Installed?\r\n                                    </FormLabel>\r\n                                    <RadioGroup\r\n                                      row\r\n                                      aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                      name=\"radio-buttons-group\"\r\n                                    >\r\n                                      <FormControlLabel\r\n                                        name=\"previousVersionInstalled\"\r\n                                        value=\"true\"\r\n                                        checked={isPreviousVersionInstalled === 'true'}\r\n                                        onChange={(e: any) => {\r\n                                          handleChange(e);\r\n                                        }}\r\n                                        control={<Radio />}\r\n                                        label=\"Yes\"\r\n                                        sx={{ display: 'inline-block' }}\r\n                                      />\r\n                                      <FormControlLabel\r\n                                        name=\"previousVersionInstalled\"\r\n                                        value=\"false\"\r\n                                        checked={isPreviousVersionInstalled === 'false'}\r\n                                        onChange={(e: any) => {\r\n                                          handleChange(e);\r\n                                        }}\r\n                                        control={<Radio />}\r\n                                        label=\"No\"\r\n                                        sx={{ display: 'inline-block' }}\r\n                                      />\r\n                                    </RadioGroup>\r\n                                    {isPreviousVersionInstalled == 'true' && <>\r\n                                      {/* <Typography sx={{ display: 'inline', width: '50%' }}>\r\n                                    Select Version Installed  <Tooltip\r\n                                      title='Please Select version carefully'\r\n                                    >\r\n                                      <InfoIcon sx={{ 'font-size': '16px!important', display: 'inline' }} />\r\n                                    </Tooltip>\r\n                                  </Typography> */}\r\n                                      <InputLabel id=\"demo-multiple-name-label\" style={{ margin: '8px 0px 10px 0px' }}>\r\n                                        Select Version Installed\r\n                                        <Tooltip\r\n                                          title='Please Select version carefully'\r\n                                        >\r\n                                          <InfoIcon sx={{ 'font-size': '16px!important', display: 'inline' }} />\r\n                                        </Tooltip>\r\n                                      </InputLabel>\r\n                                      < FormControl\r\n                                        sx={{ width: '100%', display: 'inline' }}\r\n                                      >\r\n                                        <Select\r\n                                          labelId=\"demo-multiple-name-label\"\r\n                                          id=\"demo-multiple-name\"\r\n                                          multiple={false}\r\n                                          name=\"version\"\r\n                                          onChange={handleVersionChange}\r\n                                          required\r\n                                          label=\"Select Version\"\r\n                                          style={{ width: '100%' }}\r\n                                        >\r\n                                          <MenuItem value='1.0'>\r\n                                            v1.0\r\n                                          </MenuItem>\r\n                                          <MenuItem value='1.1'>\r\n                                            v1.1\r\n                                          </MenuItem>\r\n                                          <MenuItem value='1.2'>\r\n                                            v1.2\r\n                                          </MenuItem>\r\n                                          <MenuItem value='1.3'>\r\n                                            v1.3\r\n                                          </MenuItem>\r\n                                          <MenuItem value='1.4'>\r\n                                            v1.4\r\n                                          </MenuItem>\r\n                                          <MenuItem value='1.5'>\r\n                                            v1.5\r\n                                          </MenuItem>\r\n                                        </Select>\r\n                                        {isVersionSelectionRequired && (\r\n                                          <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                                            'Version is required'\r\n                                          </FormHelperText>\r\n                                        )}\r\n                                      </FormControl>\r\n                                      {/* <Tooltip\r\n                                        title='Please Select version carefully'\r\n                                      >\r\n                                        <InfoIcon sx={{ 'font-size': '16px!important', display: 'inline' }} />\r\n                                      </Tooltip> */}\r\n                                    </>\r\n                                    }\r\n                                    {/* <TextField\r\n                                      required\r\n                                      type=\"text\"\r\n                                      sx={{ width: '100%', mt: 3 }}\r\n                                      name=\"MYSQL_DATABASE\"\r\n                                      label=\"Database Name\"\r\n                                      autoFocus\r\n                                      value={hostData.MYSQL_DATABASE}\r\n                                      onChange={(e: any) => {\r\n                                        handleHostInputChange(e);\r\n                                      }}\r\n                                    /> */}\r\n                                    {isPreviousVersionInstalled == 'false' &&\r\n                                      < TextField\r\n                                        required\r\n                                        type=\"text\"\r\n                                        sx={{ width: '100%', mt: 3 }}\r\n                                        name=\"MYSQL_DATABASE\"\r\n                                        label=\"Database Name\"\r\n                                        autoFocus\r\n                                        value={hostData.MYSQL_DATABASE}\r\n                                        onChange={(e: any) => {\r\n                                          handleHostInputChange(e);\r\n                                        }}\r\n                                      />\r\n                                    }\r\n                                    {isPreviousVersionInstalled == 'true' &&\r\n                                      <div style={{ marginTop: '20px' }}>\r\n                                        <Typography sx={{ color: 'red', fontWeight: 'bold' }}>\r\n                                          Note: Please first take backup of your database\r\n                                        </Typography>\r\n                                      </div>\r\n                                    }\r\n                                    {isPreviousVersionInstalled == 'false' &&\r\n                                      <div style={{ marginTop: '10px', borderBottom: '1px solid #ddd' }}>\r\n                                        <Checkbox\r\n                                          // onChange={(e) =>\r\n                                          //   handleCreateDatabaseUser(e)\r\n                                          // }\r\n                                          onChange={handleCreateDatabaseUser}\r\n                                          inputProps={{ 'aria-label': 'controlled' }}\r\n                                          style={{ padding: '9px 0px' }}\r\n                                        />Do you want to create database user?\r\n                                      </div>\r\n                                    }\r\n                                    {isCreatedatabaseUser && isPreviousVersionInstalled == 'false' &&\r\n                                      <>\r\n                                        <TextField\r\n                                          required\r\n                                          type=\"text\"\r\n                                          sx={{ width: '100%', mt: 3 }}\r\n                                          name=\"username\"\r\n                                          label=\"UserName\"\r\n                                          autoFocus\r\n                                          value={hostData.username}\r\n                                          onChange={(e: any) => {\r\n                                            handleHostInputChange(e);\r\n                                          }}\r\n                                        />\r\n                                        <TextField\r\n                                          required\r\n                                          type={showPassword ? 'text' : 'password'}\r\n                                          sx={{ width: '100%', mt: 3 }}\r\n                                          name=\"password\"\r\n                                          label=\"Password\"\r\n                                          autoFocus\r\n                                          value={hostData.password}\r\n                                          onChange={(e: any) => {\r\n                                            handleHostInputChange(e);\r\n                                          }}\r\n                                          InputProps={{\r\n                                            endAdornment: (\r\n                                              <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                  onClick={() => setShowPassword(!showPassword)}\r\n                                                  edge=\"end\"\r\n                                                >\r\n                                                  {showPassword === true ? (\r\n                                                    <VisibilityIcon />\r\n                                                  ) : (\r\n                                                    <VisibilityOffIcon />\r\n                                                  )}\r\n                                                </IconButton>\r\n                                              </InputAdornment>\r\n                                            )\r\n                                          }}\r\n                                        />\r\n                                        <Button\r\n                                          fullWidth\r\n                                          type=\"button\"\r\n                                          variant=\"contained\"\r\n                                          onClick={generatePassword}\r\n                                          style={{ fontWeight: 'bolder', marginTop: '5%', width: '50%' }}\r\n                                        >Generate Random Password</Button>\r\n                                      </>}\r\n                                    {isPreviousVersionInstalled == 'false' ? (<>\r\n                                      {/* < TextField\r\n                                            required\r\n                                            type=\"text\"\r\n                                            sx={{ width: '100%', mt: 3 }}\r\n                                            name=\"MYSQL_DATABASE\"\r\n                                            label=\"Database Name\"\r\n                                            autoFocus\r\n                                            value={hostData.MYSQL_DATABASE}\r\n                                            onChange={(e: any) => {\r\n                                              handleHostInputChange(e);\r\n                                            }}\r\n                                          /> */}\r\n                                      <div style={{ marginTop: '10px' }}>\r\n                                        <Checkbox\r\n                                          onChange={handleInstallMasterData}\r\n                                          inputProps={{ 'aria-label': 'controlled' }}\r\n                                          style={{ padding: '9px 0px' }}\r\n                                        />Install Master Data\r\n                                      </div>\r\n                                      {isPreviousVersionInstalled == 'false' && <>\r\n                                        <Checkbox\r\n                                          onChange={handleInstallSampleData}\r\n                                          style={{ padding: '9px 0px' }}\r\n                                          inputProps={{ 'aria-label': 'controlled' }}\r\n                                          disabled={!ismasterData}\r\n                                        />Install Sample Data\r\n                                      </>\r\n                                      }\r\n                                    </>\r\n                                    ) : (<>\r\n                                      {databases && databases.length > 0 ? (<>\r\n                                        <InputLabel id=\"demo-multiple-name-label\" style={{ margin: '8px 0px 10px 0px' }}>\r\n                                          Select Databse\r\n                                          <Tooltip\r\n                                            title='Please Select version carefully'\r\n                                          >\r\n                                            <InfoIcon sx={{ 'font-size': '16px!important', display: 'inline' }} />\r\n                                          </Tooltip>\r\n                                        </InputLabel>\r\n                                        < FormControl\r\n                                          sx={{ width: '100%', display: 'inline' }}\r\n                                        >\r\n                                          <Select\r\n                                            labelId=\"demo-multiple-name-label\"\r\n                                            id=\"demo-multiple-dataabse\"\r\n                                            multiple={false}\r\n                                            name=\"MYSQL_DATABASE\"\r\n                                            onChange={(e: any) => {\r\n                                              handleHostInputChange(e);\r\n                                            }}\r\n                                            required\r\n                                            label=\"Select Database\"\r\n                                            style={{ width: '100%' }}\r\n                                          >\r\n                                            {databases.map((arr: any, index: number) => {\r\n                                              return (\r\n                                                <MenuItem value={arr.Database\r\n                                                } key={arr.Database}>\r\n                                                  {arr.Database}\r\n                                                </MenuItem>\r\n                                              )\r\n                                            })}\r\n                                          </Select>\r\n                                          {isDatabaseSelectionRequired && (\r\n                                            <FormHelperText style={{ color: 'red', height: '22px' }}>\r\n                                              'Database is required'\r\n                                            </FormHelperText>\r\n                                          )}\r\n                                        </FormControl>\r\n                                        <div style={{ marginTop: '10px' }}>\r\n                                          <Checkbox\r\n                                            onChange={handleInstallMasterData}\r\n                                            inputProps={{ 'aria-label': 'controlled' }}\r\n                                            style={{ padding: '9px 0px' }}\r\n                                          />Install MasterData\r\n                                        </div>\r\n                                        {isPreviousVersionInstalled == 'false' && <>\r\n                                          <Checkbox\r\n                                            onChange={handleInstallSampleData}\r\n                                            style={{ padding: '9px 0px' }}\r\n                                            inputProps={{ 'aria-label': 'controlled' }}\r\n                                            disabled={!ismasterData}\r\n                                          />Install SampleData\r\n                                        </>\r\n                                        }\r\n                                      </>\r\n                                      ) : (\r\n                                        <Typography sx={{ color: 'red', marginTop: \"20px\", marginBottom: \"20px\" }}>No Database Found with your MYSQL Server Configuration Please Go back and again configure with your server</Typography>\r\n                                      )\r\n                                      }\r\n                                    </>\r\n                                    )}\r\n                                  </Form>\r\n                                  <div style={{ position: 'absolute', bottom: '20px', width: '96%', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '10px' }}>\r\n                                    <Button\r\n                                      fullWidth\r\n                                      type=\"submit\"\r\n                                      variant=\"contained\"\r\n                                      disabled={!hostData.MYSQL_DATABASE}\r\n                                      onClick={databaseConfiguration}\r\n                                      style={{ fontWeight: 'bolder', marginTop: '1%' }}\r\n                                    >\r\n                                      <div>\r\n                                        {isLoading ? (\r\n                                          <LoaderLogin title=\"Loading...\" />\r\n                                        ) : (\r\n                                          'Save & Configure'\r\n                                        )}\r\n                                      </div>\r\n                                    </Button>\r\n                                    <Button\r\n                                      fullWidth\r\n\r\n                                      color=\"inherit\"\r\n\r\n                                      onClick={handleBack}\r\n                                      sx={{ mr: 1 }}\r\n                                      variant=\"outlined\"\r\n                                    >\r\n                                      Back\r\n                                    </Button>\r\n                                  </div>\r\n                                  {/* </Card> */}\r\n                                  {/* {isSetupdatabase && (\r\n                              <Typography>\r\n                                Database Creating\r\n                              </Typography>\r\n                            )}\r\n                            {isInstallMasterData && (\r\n                              <Typography>\r\n                                Installing MasterData\r\n                              </Typography>\r\n                            )}\r\n                            {isInstalledSampleData && (\r\n                              <Typography>\r\n                                Installing SampleData\r\n                              </Typography>\r\n                            )} */}\r\n                                </>\r\n                              }\r\n                              {activeStep == 2 &&\r\n                                <>\r\n                                  <Typography style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n\r\n                                    {!isInstallSuccessfully &&\r\n                                      <>\r\n                                        <Typography style={{ marginBottom: '10px' }}>\r\n                                          Please wait while we are installing the database\r\n                                        </Typography>\r\n                                      </>\r\n\r\n                                    }\r\n                                    <Typography>\r\n                                      {(databaseState === 'creating') ?\r\n                                        <>\r\n                                          <Typography style={{ margin: '10px 5px', fontSize: '18px' }}>\r\n                                            <CircularProgress thickness={1} style={{ height: '18px', width: '18px', marginRight: '20px' }} />\r\n                                            Creating Database...\r\n                                          </Typography>\r\n\r\n                                        </> :\r\n                                        <>\r\n                                          {(isSetupdatabase && databaseState === 'created') ? (\r\n                                            <Typography style={{ margin: '10px 5px', fontSize: '18px' }}>\r\n                                              <CheckCircleIcon style={{ color: '#78b144', marginRight: '10px' }} />\r\n                                              Database Created\r\n                                            </Typography>\r\n                                          ) :\r\n                                            (<Typography style={{ margin: '10px 5px', fontSize: '18px' }}>\r\n                                              <CancelIcon style={{ color: 'red', marginRight: '10px' }} />\r\n                                              Error in database creation\r\n                                            </Typography>)}</>\r\n\r\n                                      }\r\n\r\n                                      {(ismasterData) &&\r\n                                        <>\r\n                                          {(masterdataState === 'creating' && databaseState !== 'Error') ?\r\n                                            <>\r\n                                              <Typography style={{ margin: '10px 5px', fontSize: '18px' }}>\r\n                                                {/* <CircularProgress color=\"primary\" /> */}\r\n                                                <CircularProgress thickness={1} style={{ height: '18px', width: '18px', marginRight: '20px' }} />\r\n                                                Installing MasterData...\r\n                                              </Typography>\r\n\r\n                                            </> :\r\n                                            <>\r\n                                              {(ismasterData && isInstallMasterData) ? (\r\n                                                <Typography style={{ margin: '10px 5px', fontSize: '18px' }}>\r\n                                                  <CheckCircleIcon style={{ color: '#78b144', marginRight: '10px' }} />\r\n                                                  MasterData Installed\r\n                                                </Typography>\r\n                                              ) :\r\n                                                (<Typography style={{ margin: '10px 5px', fontSize: '18px' }}>\r\n                                                  <CancelIcon style={{ color: 'red', marginRight: '10px' }} />\r\n                                                  Error in installing Masterdata\r\n                                                </Typography>)}\r\n                                            </>\r\n\r\n                                          }\r\n                                        </>}\r\n\r\n                                      {(isSampleData) &&\r\n                                        <>\r\n                                          {(sampledataState === 'creating' && databaseState !== 'Error') ?\r\n                                            <>\r\n                                              <Typography style={{ margin: '10px 5px', fontSize: '18px' }}>\r\n                                                <CircularProgress thickness={1} style={{ height: '18px', width: '18px', marginRight: '20px' }} />\r\n\r\n                                                Installing SampleData...\r\n                                              </Typography>\r\n\r\n                                            </> :\r\n                                            <>\r\n                                              {(isSampleData && isInstalledSampleData) ? (\r\n                                                <Typography style={{ margin: '10px 5px', fontSize: '18px' }}>\r\n                                                  <CheckCircleIcon style={{ color: '#78b144', marginRight: '10px' }} />\r\n                                                  SampleData Installed\r\n                                                </Typography>\r\n                                              ) :\r\n                                                (<Typography style={{ margin: '10px 5px', fontSize: '18px' }}>\r\n                                                  <CancelIcon style={{ color: 'red', marginRight: '10px' }} />\r\n                                                  Error in installing SampleData\r\n                                                </Typography>)}\r\n\r\n                                            </>\r\n                                          }\r\n                                        </>}\r\n\r\n                                    </Typography>\r\n                                    {(databaseState === 'Error') && (\r\n                                      <Button\r\n                                        fullWidth\r\n                                        type=\"submit\"\r\n                                        variant=\"contained\"\r\n                                        onClick={handleErrorBack}\r\n                                        style={{ fontWeight: 'bolder', marginTop: '2%', width: '15%' }}\r\n                                      >\r\n                                        Back\r\n                                      </Button>\r\n                                    )\r\n\r\n                                    }\r\n                                    {isInstallSuccessfully &&\r\n                                      <>\r\n                                        <Typography style={{ fontSize: '42px', textAlign: 'center', fontWeight: '900', marginTop: '10px', color: '#78b144' }}>\r\n                                          Congratulations!\r\n                                        </Typography>\r\n                                        <Typography style={{ fontSize: '17px', textAlign: 'center', fontWeight: '600', margin: '40px 0px' }}>\r\n                                          Your configuration process has been successfully completed. Below are your credentials. We appreciate your cooperation in this matter and look forward to your continued success with our services.\r\n                                        </Typography>\r\n                                        <Typography style={{ fontSize: '19px', textAlign: 'center', fontWeight: '600', marginTop: '10px', color: 'red' }}>\r\n                                          Please restart API(Nodejs APP) - Check documentation\r\n                                        </Typography>\r\n                                        {!version && <>\r\n                                          <Box style={{ border: \"1px solid #ddd\", marginTop: '20px', padding: '8px', width: '300px' }}>\r\n                                            <Button\r\n                                              type=\"button\"\r\n                                              variant=\"contained\"\r\n                                              style={{ fontWeight: 'bolder', width: '15%', float: 'right', right: '-10px', top: '-10px', padding: '3px', minWidth: '0px' }}\r\n                                              onClick={handleCopy}\r\n                                            >\r\n                                              <ContentCopyIcon />\r\n                                            </Button>\r\n                                            <Typography style={{ fontSize: '14px', marginTop: '10px' }}>\r\n                                              Username : {userName}\r\n                                            </Typography>\r\n                                            <Typography style={{ fontSize: '14px' }}>\r\n                                              Password: {password}\r\n                                            </Typography>\r\n                                          </Box>\r\n                                        </>\r\n                                        }\r\n                                        <div style={{ position: 'absolute', bottom: '20px', width: '96%', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '10px' }}>\r\n                                          <Button\r\n                                            fullWidth\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            onClick={handleGotoLogin}\r\n                                            style={{ fontWeight: 'bolder', marginTop: '5%' }}\r\n                                          >\r\n                                            Go To Login\r\n                                          </Button>\r\n                                        </div>\r\n                                      </>}\r\n                                  </Typography>\r\n                                </>}\r\n\r\n                              {/* <Typography sx={{ mt: 2, mb: 1 }}>Step {activeStep + 1}</Typography> */}\r\n                              {/* <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2, paddingLeft: '63.5%' }}> */}\r\n                              {/* {activeStep != 0 && (\r\n                                      <Button\r\n                                        className=\"button\"\r\n                                        color=\"inherit\"\r\n                                        disabled={activeStep === 0}\r\n                                        onClick={handleBack}\r\n                                        sx={{ mr: 1 }}\r\n                                        variant=\"outlined\"\r\n                                      >\r\n                                        Back\r\n                                      </Button>\r\n                                    )} */}\r\n                              {/* <Box sx={{ flex: '1 1 auto' }} /> */}\r\n                              {/* {isStepOptional(activeStep) && (\r\n                              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\r\n                                Skip\r\n                              </Button>\r\n                            )} */}\r\n                              {/* <Button onClick={handleNext}>\r\n                              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                            </Button> */}\r\n                              {/* </Box> */}\r\n                            </React.Fragment>\r\n                          )}\r\n                        </Box>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                </Col>\r\n                <Col md={3} lg={3} xs={12}></Col>\r\n              </Row>\r\n            </>\r\n          }\r\n        </Container>\r\n      </OverviewWrapper >\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["props","title","_jsx","className","children","OverviewWrapper","styled","Box","steps","initialState","email","password","initialDefaultState","initialDefaultPasswordState","initialAuthenticationCodeState","twoFactorCode","initialHostState","styles","heading4","orderedList","login","setLogin","React","isEmailValidateError","setIsEmailValidateError","useState","emailValidateErrorMsg","setEmailValidateErrorMsg","isPasswordValidateError","setIsPasswordValidateError","passwordValidateErrorMsg","setPasswordValidateErrorMsg","showPassword","setShowPassword","isLoading","setIsLoading","navigate","useNavigate","isLogin","setIsLogin","changeEmail","setChangeEmail","isChangeEmailValidateError","setIsChangeEmailValidateError","changeEmailValidateErrorMsg","setChangeEmailValidateErrorMsg","isChangeEmail","setIsChangeEmail","changePassword","setChangePassword","isChangePasswordValidateError","setIsChangePasswordValidateError","changePasswordValidateErrorMsg","setChangePasswordValidateErrorMsg","showChangePassword","setShowChangePassword","isChangePassword","setIsChangePassword","is2FAOpen","setIs2FAOpen","is2FAQRCode","setIs2FAQRCode","is2FAEnter","setIs2FAEnter","isConfiguration","setIsConfiguration","isUrlErrorMsg","setIsUrlErrorMsg","isVerified","setIsVerified","apiUrl","setApiUrl","isTakeHostData","setIsTakeHostData","hostData","setHostInput","setEmail","isAuthenticationCodeError","setIsAuthenticationCodeErrorError","authenticationCodeErrorMsg","setAuthenticationCodeErrorMsg","authenticationCode","setAuthenticationCode","refreshToken","setRefreshToken","sessionToken","setSessionToken","userId","setUserId","crendientials","setCrendientials","defaultCurrency","setDefaultCurrency","qrcodeUrl","setqrCodeUrl","base32","setBase32","isTested","setIsTeseted","version","setVersion","isInstallSuccessfully","setIsInstallSucessfully","ismasterData","setIsMasterData","isSampleData","setIsSampleData","isSetupdatabase","setIsSetUpDatabase","databaseState","setDatabaseState","masterdataState","setMasterdataState","sampledataState","setSampledataState","isInstallMasterData","setIsInstallMasterData","isPreviousVersionInstalled","setPreviousVersionInstalled","isAPIUrlValidation","setIsAPIUrlValidation","isHostRequired","setIsHostRequired","isUserRequired","setIsUserRequired","isPORTRequired","setIsPortRequired","isPasswordRequired","setIsPasswordRequired","isVersionSelectionRequired","setIsVersionRequired","isDatabaseSelectionRequired","setIsDatabaseRequired","isInstalledSampleData","setIsInstallSampleData","databases","setDatabases","isCreatedatabaseUser","setIsCreateDatabaseUser","isRestartServerRequired","setIsRestartServerRequired","userName","setUserName","setPassword","handleInputChange","event","name","value","target","mediumRegex","RegExp","useEffect","getConfiguration","updateFCMToken","async","token","localStorage","getItem","fcmToken","sessionStorage","APIservice","httpPost","error","toast","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","validateTwoFactorCode","e","handleInputTwoFactorCodeChange","handleVerifyAuthenticateCode","preventDefault","res","status","setItem","JSON","stringify","data","recordList","systemFlag","position","POSITION","TOP_RIGHT","console","log","handleChange","isTakeHostDetail","setActiveStep","handleHostInputChange","databaseConfiguration","MYSQL_DATABASE","data1","username","activeStep","skipped","setSkipped","Set","isStepSkipped","step","has","handleInstallMasterData","checked","handleInstallSampleData","_jsxs","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","Helmet","Container","Row","style","left","top","width","height","Col","md","lg","xs","maxWidth","Logo","Card","borderRadius","CardContent","padding","Form","onSubmit","Typography","align","fontSize","fontWeight","TextField","required","type","sx","mt","label","autoFocus","onChange","validateEmail","FormHelperText","color","InputProps","endAdornment","InputAdornment","IconButton","onClick","edge","VisibilityIcon","VisibilityOffIcon","ValidatePassword","Button","fullWidth","variant","flag","validator","test","validateForm","detail","id","isFirstLogin","parse","isTwoFactorEnable","response","profilePicApproveIndex","findIndex","c","isUserProfilePicApprove","_data","length","i","j","group","customFieldIndex","isEnableCustomFields","familyIndex","isEnableFamilyDetails","astroIndex","isEnableAstrologicDetails","lifeStyleIndex","isEnableLifeStyles","communityIndex","isEnableCommunity","subCommunityIndex","isEnableSubCommunity","roleId","pagePermissions","index","page","path","history","go","marginTop","LoaderLogin","Stack","direction","alignItems","justifyContent","my","RouterLink","to","textDecoration","_Fragment","validateChangeEmail","handleInputDefaultEmailChange","Link","cursor","ValidateChangePassword","handleInputDefaultPasswordChange","noWrap","marginBottom","disabled","cred","otpAuthUrl","baseSecret","permissionDetail","QRCode","textAlign","src","alt","margin","minHeight","paddingBottom","Stepper","map","stepProps","completed","Step","StepLabel","mb","display","flexDirection","pt","flex","handleReset","MYSQL_HOST","MYSQL_USER","MYSQL_PASSWORD","MYSQL_PORT","bottom","gap","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","InputLabel","Tooltip","InfoIcon","FormControl","Select","labelId","multiple","MenuItem","borderBottom","Checkbox","inputProps","generatePassword","charset","Math","floor","random","arr","Database","handleBack","mr","CircularProgress","thickness","marginRight","CheckCircleIcon","CancelIcon","border","float","right","minWidth","handleCopy","this","navigator","clipboard","writeText","then","alert","catch","err","ContentCopyIcon","warning"],"sourceRoot":""}