{"version":3,"file":"static/js/1824.570d3d4a.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/Report/SystemBlockedUsers/SystemBlockedUsers.tsx","../node_modules/@mui/icons-material/DateRange.js","../node_modules/@mui/icons-material/Print.js","../node_modules/@mui/icons-material/UploadFileRounded.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import {\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  Chip,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  FormControl,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  Paper,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme\r\n} from '@mui/material';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from '../../../components/PageTitleWrapper';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\n// import FileOpenIcon from '@mui/icons-material/FileOpen';\r\nimport UploadFileRoundedIcon from '@mui/icons-material/UploadFileRounded';\r\nimport CurrencyRupeeIcon from '@mui/icons-material/CurrencyRupee';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Footer from 'src/components/Footer';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport React, { useState, ChangeEvent } from 'react';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport Loader from '../../Loader';\r\nimport { CSVLink } from 'react-csv';\r\nimport { format } from 'date-fns';\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-date-range/dist/styles.css';\r\nimport 'react-date-range/dist/theme/default.css';\r\nimport './../../smallScreen.css';\r\n\r\nconst initialState = {\r\n  fromDate: null,\r\n  toDate: null\r\n};\r\n\r\nconst SystemBlockedUsers = () => {\r\n  const [data, setData] = React.useState<any>([]);\r\n  const [data1, setData1] = React.useState<any>([]);\r\n  const [isloading, setIsLoading] = React.useState(false);\r\n  const [row, setRow] = useState<number>(10);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [limit, setLimit] = React.useState<number>(10);\r\n  const [printUser, setPrintUser] = useState<any>([]);\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n  const [select, setSelect] = useState<boolean>(false);\r\n  const [chip, setChip] = useState<boolean>(false);\r\n  const [userValue, setUserValue] = React.useState<any>(initialState);\r\n  const [state, setState] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: 'selection'\r\n    }\r\n  ]);\r\n  const dateData = localStorage.getItem('DateFormat');\r\n  const navigate = useNavigate();\r\n\r\n  React.useEffect(() => {\r\n    getData(page, limit);\r\n  }, []);\r\n\r\n  const getData = async (startIndex: number, fetchRecord: number) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let from = userValue.fromDate ? userValue.fromDate : '';\r\n      let to = userValue.toDate ? userValue.toDate : '';\r\n      let obj = {\r\n        startIndex: startIndex,\r\n        fetchRecord: fetchRecord,\r\n        fromDate: from,\r\n        toDate: to\r\n      };\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/report/getSystemBlockedUsers',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setData(res.recordList);\r\n      setRow(res.totalRecords);\r\n      if (res && res.status == 200) {\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSelect = (ranges: any) => {\r\n    const { selection } = ranges;\r\n    setState([selection]);\r\n    userValue.fromDate = ranges.selection.startDate;\r\n    userValue.toDate = ranges.selection.endDate;\r\n  };\r\n\r\n  const handleOpenRangePicker = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleCloseDailog = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const save = () => {\r\n    setIsOpen(false);\r\n    if (userValue.fromDate && userValue.toDate) {\r\n      setChip(true);\r\n    }\r\n    getData(0, limit);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (userValue.fromDate && userValue.toDate) {\r\n      userValue.fromDate = null;\r\n      userValue.toDate = null;\r\n      setChip(false);\r\n    }\r\n    // handleSearch();\r\n    setState([\r\n      {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection'\r\n      }\r\n    ]);\r\n    getData(0, limit);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    userValue.fromDate = null;\r\n    userValue.toDate = null;\r\n    setChip(false);\r\n    setIsOpen(false);\r\n    setState([\r\n      {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection'\r\n      }\r\n    ]);\r\n    getData(0, limit);\r\n  };\r\n\r\n  const DataSend = () => {\r\n    const user = data.map((arr: any, index: number) => {\r\n      const dataDetail = {\r\n        Id: index + 1,\r\n        Name: arr.firstName + ' ' + arr.lastName,\r\n        Email: arr.email,\r\n        ContactNo: arr.contactNo,\r\n        Gender: arr.gender,\r\n        'Modified Date': format(new Date(arr.modifiedDate), dateData)\r\n      };\r\n      return dataDetail;\r\n    });\r\n    setData1(user);\r\n  };\r\n\r\n  const handlePrint = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/report/getSystemBlockedUsers',\r\n      userValue,\r\n      token,\r\n      refreshToken\r\n    );\r\n    setPrintUser(res.recordList);\r\n    if (res && res.status == 200) {\r\n    } else if (res.status == 401) {\r\n      navigate('/admin');\r\n      localStorage.clear();\r\n    }\r\n    let html = `<html>\r\n        <div class=\"img-container\">\r\n        <img src=\"/Image20221010173301.png\" alt=\"logo\" height=\"30px\"/>\r\n        <span>System Blocked User</span>\r\n    </div>\r\n\r\n      <body  onload=\"window.print(); window.close();\">\r\n      <style>\r\n      .img-container {\r\n        text-align: center;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding-Bottom: 20px;\r\n      }\r\n\r\n      span{\r\n        font-size: 30px;\r\n        padding-Left: 5px;\r\n      }\r\n      .date-container {\r\n        text-align: right;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n\r\n      table {\r\n         border-collapse: collapse;\r\n        border: 1px solid black;\r\n        width: 100%;\r\n      }\r\n\r\n      .th1 {\r\n        border-top: 0px;\r\n        border-bottom: 1px solid black;\r\n        border-right: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n\r\n\r\n      .th2 {\r\n        border-bottom: 1px solid black;\r\n        border-right: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n\r\n      .th3 {\r\n        border-bottom: 1px solid black;\r\n        border-right: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n\r\n      .th4 {\r\n        border-bottom: 1px solid black;\r\n        border-right: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n      .th5 {\r\n        border-bottom: 1px solid black;\r\n        border-right: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n\r\n      .th6 {\r\n        border-bottom: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n\r\n      .td1 {\r\n        border-right: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n\r\n      .td2 {\r\n        border-right: 1px solid black;\r\n        text-align: left;\r\n        padding: 8px;\r\n      }\r\n      .td3 {\r\n        border-right: 1px solid black;\r\n        text-align: left;\r\n        padding: 8px;\r\n      }\r\n\r\n      .td4 {\r\n        border-right: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n      .td5 {\r\n        border-right: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n\r\n      .td6 {\r\n          text-align: center;\r\n          padding: 8px;\r\n        }\r\n\r\n        tr:nth-child(even) {background-color: #f2f2f2;}\r\n        </style>\r\n        <table>\r\n        <Divider/>\r\n    <thead>\r\n      <th class=\"th1\">#</th>\r\n      <th class=\"th2\">Name</th>\r\n      <th class=\"th3\">Email</th>\r\n      <th class=\"th4\">ContactNo</th>\r\n      <th class=\"th5\">Gender</th>\r\n      <th class=\"th6\">Modified Date</th>\r\n    </thead>\r\n    <tbody>`;\r\n    for (let i = 0; i < res.recordList.length; i++) {\r\n      html +=\r\n        `<tr>\r\n          <td class=\"td1\">` +\r\n        (i + 1) +\r\n        `</td>\r\n          <td class=\"td2\">` +\r\n        res.recordList[i].firstName +\r\n        ' ' +\r\n        res.recordList[i].lastName +\r\n        `</td>\r\n          <td class=\"td3\">` +\r\n        res.recordList[i].email +\r\n        ` </td>\r\n         <td class=\"td4\">` +\r\n        res.recordList[i].contactNo +\r\n        ` </td>\r\n         <td class=\"td5\">` +\r\n        res.recordList[i].gender +\r\n        ` </td>\r\n         <td class=\"td6\">` +\r\n        format(new Date(res.recordList[i].modifiedDate), dateData) +\r\n        ` </td>\r\n         </tr>`;\r\n    }\r\n    html += `</tbody>\r\n      </table>\r\n     </body>\r\n    </html >`;\r\n\r\n    let frame1 = document.createElement('iframe');\r\n    frame1.name = 'frame1';\r\n    frame1.style.position = 'absolute';\r\n    frame1.style.top = '-1000000px';\r\n    document.body.appendChild(frame1);\r\n    frame1.contentWindow.document.open();\r\n    frame1.contentWindow.document.write(html);\r\n    frame1.contentWindow.document.close();\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n    getData(newPage * limit, limit);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n    setPage(0);\r\n    getData(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    // eslint-disable-next-line\r\n    <div>\r\n      <ToastContainer\r\n        style={{ top: '8.5%', right: '0%' }}\r\n        // position=\"top-right\"\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>System Blocked User</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box pt={1.3} pb={1.2} pl={1}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n          >\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link to=\"/admin\" style={{ display: 'flex', color: 'black' }}>\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle2\"\r\n                    fontWeight=\"bold\"\r\n                  >\r\n                    System Blocked User\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n            <div>\r\n              {chip === true ? (\r\n                <>\r\n                  <Chip\r\n                    label={\r\n                      format(new Date(userValue.fromDate), dateData) +\r\n                      '-' +\r\n                      format(new Date(userValue.toDate), dateData)\r\n                    }\r\n                    onDelete={(e) => {\r\n                      handleDelete();\r\n                    }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n            <Grid item>\r\n              <Tooltip title=\"Print\" arrow>\r\n                <IconButton\r\n                  sx={{\r\n                    '&:hover': { background: theme.colors.primary.lighter },\r\n                    color: theme.palette.primary.main,\r\n                    marginTop: '3px'\r\n                  }}\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={handlePrint}\r\n                >\r\n                  <PrintIcon fontSize=\"medium\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip title=\"Export File\" arrow>\r\n                <IconButton\r\n                  sx={{\r\n                    '&:hover': { background: theme.colors.primary.lighter },\r\n                    color: theme.palette.primary.main\r\n                  }}\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={DataSend}\r\n                >\r\n                  <CSVLink\r\n                    data={data1}\r\n                    filename={'SystemBlockedUser.csv'}\r\n                    style={{\r\n                      '&:hover': { background: theme.colors.primary.lighter },\r\n                      color: theme.palette.primary.main\r\n                    }}\r\n                  >\r\n                    <UploadFileRoundedIcon />\r\n                  </CSVLink>\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip title=\"Select Date\" arrow>\r\n                <IconButton\r\n                  sx={{\r\n                    '&:hover': { background: theme.colors.primary.lighter },\r\n                    color: theme.palette.primary.main,\r\n                    marginTop: '3px'\r\n                  }}\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={handleOpenRangePicker}\r\n                >\r\n                  <DateRangeIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card className=\"userProposalcard\">\r\n              <div>\r\n                {isloading ? (\r\n                  <Loader title=\"Loading...\" />\r\n                ) : (\r\n                  <>\r\n                    <Divider />\r\n                    {data && data.length > 0 ? (\r\n                      <>\r\n                        <TableContainer className=\"userProposalTableContainer\" >\r\n                          <Table stickyHeader>\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>\r\n                                  <Typography\r\n                                    noWrap\r\n                                    style={{\r\n                                      fontSize: '13px',\r\n                                      fontWeight: 'bold',\r\n                                      marginBottom: 'none'\r\n                                    }}\r\n                                  >\r\n                                    Id\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography\r\n                                    noWrap\r\n                                    style={{\r\n                                      fontSize: '13px',\r\n                                      fontWeight: 'bold',\r\n                                      marginBottom: 'none'\r\n                                    }}\r\n                                  >\r\n                                    Name\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography\r\n                                    noWrap\r\n                                    style={{\r\n                                      fontSize: '13px',\r\n                                      fontWeight: 'bold',\r\n                                      marginBottom: 'none'\r\n                                    }}\r\n                                  >\r\n                                    Email\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography\r\n                                    noWrap\r\n                                    style={{\r\n                                      fontSize: '13px',\r\n                                      fontWeight: 'bold',\r\n                                      marginBottom: 'none'\r\n                                    }}\r\n                                  >\r\n                                    ContactNo\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography\r\n                                    noWrap\r\n                                    style={{\r\n                                      fontSize: '13px',\r\n                                      fontWeight: 'bold',\r\n                                      marginBottom: 'none'\r\n                                    }}\r\n                                  >\r\n                                    Gender\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography\r\n                                    noWrap\r\n                                    style={{\r\n                                      fontSize: '13px',\r\n                                      fontWeight: 'bold',\r\n                                      marginBottom: 'none'\r\n                                    }}\r\n                                  >\r\n                                    Modified Date\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {data.map((arr: any, index) => {\r\n                                return (\r\n                                  <TableRow hover key={index}>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        variant=\"body1\"\r\n                                        fontWeight=\"bold\"\r\n                                        color=\"text.primary\"\r\n                                        gutterBottom\r\n                                        noWrap\r\n                                      >\r\n                                        {page * limit + index + 1}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        variant=\"body1\"\r\n                                        fontWeight=\"bold\"\r\n                                        color=\"text.primary\"\r\n                                        gutterBottom\r\n                                        noWrap\r\n                                      >\r\n                                        {arr.firstName} {arr.lastName}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        variant=\"body1\"\r\n                                        fontWeight=\"bold\"\r\n                                        color=\"text.primary\"\r\n                                        gutterBottom\r\n                                        noWrap\r\n                                      >\r\n                                        {arr.email}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        variant=\"body1\"\r\n                                        fontWeight=\"bold\"\r\n                                        color=\"text.primary\"\r\n                                        gutterBottom\r\n                                        noWrap\r\n                                      >\r\n                                        {arr.contactNo}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        variant=\"body1\"\r\n                                        fontWeight=\"bold\"\r\n                                        color=\"text.primary\"\r\n                                        gutterBottom\r\n                                        noWrap\r\n                                      >\r\n                                        {arr.gender}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        variant=\"body1\"\r\n                                        fontWeight=\"bold\"\r\n                                        color=\"text.primary\"\r\n                                        gutterBottom\r\n                                        noWrap\r\n                                      >\r\n                                        {format(\r\n                                          new Date(arr.modifiedDate),\r\n                                          dateData\r\n                                        )}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                        <Box p={2}>\r\n                          <TablePagination\r\n                            component=\"div\"\r\n                            count={row}\r\n                            onPageChange={handlePageChange}\r\n                            onRowsPerPageChange={handleLimitChange}\r\n                            page={page}\r\n                            rowsPerPage={limit}\r\n                            rowsPerPageOptions={[10, 20, 30, 40]}\r\n                          />\r\n                        </Box>\r\n                      </>\r\n                    ) : (\r\n                      <Paper\r\n                        sx={{\r\n                          display: 'flex',\r\n                          justifyContent: 'center',\r\n                          alignItems: 'center',\r\n                          textAlign: 'center',\r\n                          verticalAlign: 'middle',\r\n                          boxShadow: 'none'\r\n                        }}\r\n                        className=\"userProposalcard\"\r\n                      >\r\n                        <Typography variant=\"h5\" paragraph>\r\n                          Data not Found\r\n                        </Typography>\r\n                      </Paper>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      {/* <Footer /> */}\r\n\r\n      <div>\r\n        <Dialog open={isOpen} onClose={handleCloseDailog}>\r\n          <DialogTitle\r\n            sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n          >\r\n            Select Date\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleCloseDailog}\r\n              sx={{\r\n                position: 'absolute',\r\n                right: 13,\r\n                top: 10,\r\n                color: (theme) => theme.palette.grey[500]\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <DateRangePicker\r\n              className=\"rangepicker\"\r\n              // ranges={[selectionRange]}\r\n              ranges={state}\r\n              onChange={handleSelect}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions sx={{ pl: '24px', pr: '24px' }}>\r\n            <Button onClick={save}>Save</Button>\r\n            <Button onClick={handleClear}>Clear</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SystemBlockedUsers;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z\"\n}), 'DateRange');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\"\n}), 'Print');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m19.41 7.41-4.83-4.83c-.37-.37-.88-.58-1.41-.58H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8.83c0-.53-.21-1.04-.59-1.42zM14.8 15H13v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H9.21c-.45 0-.67-.54-.35-.85l2.8-2.79c.2-.19.51-.19.71 0l2.79 2.79c.3.31.08.85-.36.85zM14 9c-.55 0-1-.45-1-1V3.5L18.5 9H14z\"\n}), 'UploadFileRounded');\nexports.default = _default;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","initialState","fromDate","toDate","SystemBlockedUsers","data","setData","React","data1","setData1","isloading","setIsLoading","row","setRow","useState","page","setPage","limit","setLimit","printUser","setPrintUser","isOpen","setIsOpen","select","setSelect","chip","setChip","userValue","setUserValue","state","setState","startDate","Date","endDate","key","dateData","localStorage","getItem","navigate","useNavigate","getData","async","startIndex","fetchRecord","token","refreshToken","obj","res","APIservice","httpPost","recordList","totalRecords","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","POSITION","TOP_RIGHT","handleCloseDailog","useTheme","_jsxs","ToastContainer","style","top","right","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","pt","pb","pl","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","color","HomeIcon","Typography","variant","fontWeight","_Fragment","Chip","label","format","onDelete","e","Tooltip","arrow","IconButton","sx","background","colors","primary","lighter","palette","main","marginTop","size","onClick","html","i","length","firstName","lastName","email","contactNo","gender","modifiedDate","frame1","document","createElement","name","body","appendChild","contentWindow","open","write","close","PrintIcon","fontSize","DataSend","user","map","arr","index","Id","Name","Email","ContactNo","Gender","CSVLink","filename","UploadFileRoundedIcon","handleOpenRangePicker","DateRangeIcon","direction","xs","Card","Loader","Divider","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","noWrap","marginBottom","TableBody","hover","gutterBottom","p","TablePagination","component","count","onPageChange","handlePageChange","event","newPage","onRowsPerPageChange","parseInt","target","value","rowsPerPage","rowsPerPageOptions","Paper","textAlign","verticalAlign","boxShadow","paragraph","Dialog","onClose","DialogTitle","m","grey","CloseIcon","DialogContent","dividers","DateRangePicker","ranges","onChange","selection","DialogActions","pr","Button","save","handleClear","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}