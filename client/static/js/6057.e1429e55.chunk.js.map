{"version":3,"file":"static/js/6057.e1429e55.chunk.js","mappings":"wKAIA,MAAMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAChBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAK,sBACEC,EAAMC,QAAQ,OAChC,IAmBD,EAZoDC,IAAmB,IAAlB,SAAEC,GAAUD,EAC/D,OACEE,EAAAA,EAAAA,KAACR,EAAS,CAACS,UAAU,uBAAsBF,UACzCC,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAACC,SAAS,KAAIJ,SAAEA,KAChB,C,gkBCgChB,MAAMK,GAAkBX,EAAAA,EAAAA,IAAOY,EAAAA,EAAPZ,EAAeE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CACnD,2BAA4B,CACxBW,QAASV,EAAMC,QAAQ,IAE3B,2BAA4B,CACxBS,QAASV,EAAMC,QAAQ,IAE3B,mBAAoB,CAChBU,OAAQ,SAEf,IAQD,SAASC,EAAqBC,GAC1B,MAAM,SAAEV,EAAQ,QAAEW,KAAYC,GAAUF,EAExC,OACIG,EAAAA,EAAAA,MAACC,EAAAA,EAAW,CACRC,GAAI,CAAEC,EAAG,EAAGC,EAAG,EAAGC,SAAU,OAAQC,WAAY,WAC5CP,EAAKZ,SAAA,CAERA,EACAW,GACGV,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CACP,aAAW,QACXC,QAASV,EACTI,GAAI,CACAO,SAAU,WACVC,MAAO,GACPC,IAAK,GACLC,MAAQ5B,GAAUA,EAAM6B,QAAQC,KAAK,MACvC3B,UAEFC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,MAEd,OAGhB,CAEA,MAAMC,EAAe,CACjBC,GAAI,EACJC,KAAM,GACNC,WAAY,MAw1BhB,QAr1BA,WACI,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAiB,IAClCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAiB,KACpCG,EAAKC,IAAUJ,EAAAA,EAAAA,UAAiB,KAChCK,EAAeC,IAAoBC,EAAAA,SAAoB,KACvDC,GAAIC,IAASF,EAAAA,SAAoBb,IACjCgB,GAAQC,IAAaJ,EAAAA,UAAe,IACpCK,GAAWC,KAAgBb,EAAAA,EAAAA,WAAS,IACpCc,GAASC,KAAcf,EAAAA,EAAAA,WAAS,IAChCgB,GAAqBC,KAA+BjB,EAAAA,EAAAA,WAAS,IAC7DkB,GAAsBC,KAA2BnB,EAAAA,EAAAA,UAAS,IACjE,IAAKoB,GAAQC,KAAarB,EAAAA,EAAAA,UAAS,IAEnC,MAAOsB,GAAkBC,KAAuBvB,EAAAA,EAAAA,WAAS,IAClDwB,GAAmBC,KAAwBzB,EAAAA,EAAAA,WAAS,IACpD0B,GAAkBC,KAAuB3B,EAAAA,EAAAA,WAAS,IAClD4B,GAAoBC,KAAyB7B,EAAAA,EAAAA,WAAS,GAEvD8B,IAAWC,EAAAA,EAAAA,OAEVC,GAAaC,KAAgBjC,EAAAA,EAAAA,WAAS,IACtCkC,GAAcC,KAAmBnC,EAAAA,EAAAA,UAAS,IACjD,IAAKoC,GAAYC,KAAiBrC,EAAAA,EAAAA,YAMlCO,EAAAA,WAAgB,KACZ,IAAI+B,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,gBAE3C,GADAL,GAAcC,GACVA,EACA,GAAmB,GAAfA,EAAKK,OAAa,CAClB,IAAIC,EAAMN,EAAKO,gBAAgBC,WAAWC,GAAuB,gBAAZA,EAAEC,QACnDJ,GAAO,IACPrB,GAAoBe,EAAKO,gBAAgBD,GAAKtB,kBAC9CG,GAAqBa,EAAKO,gBAAgBD,GAAKK,iBAC/CtB,GAAoBW,EAAKO,gBAAgBD,GAAKlB,kBAC9CG,GAAsBS,EAAKO,gBAAgBD,GAAKhB,oBAE5CU,EAAKO,gBAAgBD,GAAKtB,kBAC1B4B,KAEZ,MACIA,IAER,GACD,IAEH,MAAMA,GAAWC,gBACPC,GAAQtD,EAAMG,GACpBU,IAAU,EAAM,EAGd0C,GAAM,IAAIC,OAAO,iBAsCjBC,GAA4BA,KAC9B5C,IAAU,EAAM,EAGd6C,GAAmBL,UACrB1C,GAAMf,GACNiB,IAAU,GACVsB,IAAa,GACbE,GAAgB,IAChBlB,IAA4B,GAC5BE,GAAwB,GAAG,EA+BzBsC,GAAcA,KAChB1C,IAAW,EAAM,EAgCfqC,GAAUD,MAAOO,EAAoBC,KACvC,IACI,GAAIvC,GAAQ,CACR,MAAMwC,EAAQnB,aAAaC,QAAQ,gBAC7BmB,EAAepB,aAAaC,QAAQ,gBAC1C,IAAIoB,EAAM,CACNJ,WAAYA,EACZC,YAAaA,EACb/D,KAAMwB,IAAkB,GACxB2C,SAAU,MAEd,MAAMC,QAAYC,EAAAA,EAAWC,SACzB,2CACAJ,EACAF,EACAC,GAEJvD,GAAiB0D,EAAIG,YACrB/D,EAAO4D,EAAII,aACf,KAAO,CACHvD,IAAa,GACb,MAAM+C,EAAQnB,aAAaC,QAAQ,gBAC7BmB,EAAepB,aAAaC,QAAQ,gBAC1C,IAAIoB,EAAM,CACNJ,WAAYA,EACZC,YAAaA,GAEjB,MAAMK,QAAYC,EAAAA,EAAWC,SACzB,2CACAJ,EACAF,EACAC,GAEJvD,GAAiB0D,EAAIG,YACrB/D,EAAO4D,EAAII,cACPJ,GAAqB,KAAdA,EAAIK,OACX1D,IAAU,GACW,KAAdqD,EAAIK,QACXvC,GAAS,UACTW,aAAa6B,UACQ,KAAdN,EAAIK,QAYU,KAAdL,EAAIK,QAYU,KAAdL,EAAIK,QAYU,KAAdL,EAAIK,UAnCX1D,IAAU,GACV4D,EAAAA,GAAMC,MAAMR,EAAIS,QAAS,CACrBC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVtH,MAAO,UACPyB,SAAUoF,EAAAA,GAAMU,SAASC,aAuCjCrE,IAAa,EACjB,CACJ,CAAE,MAAO2D,GACL3D,IAAa,GACbF,IAAU,GACV4D,EAAAA,GAAMC,MAAMA,EAAO,CACfE,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVtH,MAAO,UACPyB,SAAUoF,EAAAA,GAAMU,SAASC,WAEjC,GAuLExH,IAAQyH,EAAAA,EAAAA,KACd,OACIzG,EAAAA,EAAAA,MAAA0G,EAAAA,SAAA,CAAAvH,SAAA,EACIC,EAAAA,EAAAA,KAACuH,EAAAA,GAAc,CACXC,MAAO,CAAEjG,IAAK,MAAOkG,KAAM,OAC3Bb,UAAW,IACXC,iBAAiB,EACjBa,aAAa,EACbZ,cAAY,EACZa,KAAK,EACLC,kBAAgB,EAChBZ,WAAS,EACTD,cAAY,KAEhB/G,EAAAA,EAAAA,KAAC6H,EAAAA,GAAM,CAAA9H,UACHC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,qBAEXC,EAAAA,EAAAA,KAAC8H,EAAAA,EAAgB,CAAA/H,UACbC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACsB,EAAG,EAAEjB,UACNa,EAAAA,EAAAA,MAACmH,EAAAA,GAAI,CAACC,WAAS,EAACC,eAAe,gBAAgBC,WAAW,SAAQnI,SAAA,EAC9DC,EAAAA,EAAAA,KAAC+H,EAAAA,GAAI,CAACI,MAAI,EAAApI,UACNC,EAAAA,EAAAA,KAACoI,EAAAA,EAAK,CAACF,WAAW,OAAOD,eAAe,gBAAelI,UACnDa,EAAAA,EAAAA,MAACyH,EAAAA,EAAW,CAAC,aAAW,aAAYtI,SAAA,EAChCC,EAAAA,EAAAA,KAACsI,EAAAA,GAAI,CAACC,GAAG,SAASf,MAAO,CAAEgB,QAAS,OAAQhH,MAAO,SAAUzB,UACzDC,EAAAA,EAAAA,KAACyI,EAAAA,EAAQ,OAEbzI,EAAAA,EAAAA,KAAC0I,EAAAA,EAAU,CACPC,QAAQ,YACRnH,MAAM,UACNN,WAAW,OAAMnB,SACpB,0BAMbC,EAAAA,EAAAA,KAAC+H,EAAAA,GAAI,CAACI,MAAI,EAAApI,UACNa,EAAAA,EAAAA,MAACmH,EAAAA,GAAI,CAACC,WAAS,EAACnI,QAAS,IAAIE,SAAA,EACzBC,EAAAA,EAAAA,KAAC+H,EAAAA,GAAI,CAACI,MAAI,EAAApI,SACL2D,IAAoB9C,EAAAA,EAAAA,MAAA0G,EAAAA,SAAA,CAAAvH,SAAA,EACjBa,EAAAA,EAAAA,MAACgI,EAAAA,EAAM,CACH3I,UAAU,cACVa,GAAI,CACA+H,GAAI,CACAC,GAAI,EACJC,GAAI,EACJP,QAAS,OACTN,WAAY,SACZ5H,QAAS,QACTiB,IAAK,QAGboH,QAAQ,YACRvH,QAASsE,GACTsD,KAAK,QAAOjJ,SAAA,EAEZC,EAAAA,EAAAA,KAACiJ,EAAAA,EAAc,CAAChI,SAAS,UAAU,2BAGvCjB,EAAAA,EAAAA,KAAC4I,EAAAA,EAAM,CACH3I,UAAU,SACVa,GAAI,CACA+H,GAAI,CACAC,GAAI,EACJC,GAAI,EACJP,QAAS,OACTN,WAAY,SACZ5H,QAAS,QACTiB,IAAK,QAGboH,QAAQ,YACRvH,QAASsE,GACTsD,KAAK,QAAOjJ,UAEZC,EAAAA,EAAAA,KAACiJ,EAAAA,EAAc,CAAChI,SAAS,gBAE3BjB,EAAAA,EAAAA,KAAAsH,EAAAA,SAAA,OAEVtH,EAAAA,EAAAA,KAAC+H,EAAAA,GAAI,CAACI,MAAI,EAAApI,UACNC,EAAAA,EAAAA,KAACkJ,EAAAA,EAAW,CACRpI,GAAI,CAAE+H,GAAI,CAAEC,GAAI,GAAKC,GAAI,GAAKI,GAAI,GAAKC,GAAI,KAAQrJ,UAEnDC,EAAAA,EAAAA,KAACqJ,EAAAA,EACG,CACAxH,GAAG,iBACHyH,MAAM,SACNX,QAAQ,WACR7G,KAAK,eACLyH,MAAOjG,GACPkG,SAAWC,GA3G/BA,KAChBlG,GAAUkG,EAAEC,OAAOH,OACnBjG,GAASmG,EAAEC,OAAOH,MAClBjE,GAAQtD,EAAMG,EAAM,EAwGiCwH,CAAWF,GAC5BT,KAAK,QACLY,WAAY,CACRC,gBACI7J,EAAAA,EAAAA,KAAC8J,EAAAA,EAAc,CAACzI,SAAS,QAAOtB,UAC5BC,EAAAA,EAAAA,KAAC+J,EAAAA,EAAU,0BAYvD/J,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAACC,SAAS,KAAIJ,UACpBC,EAAAA,EAAAA,KAAC+H,EAAAA,GAAI,CACDC,WAAS,EACTgC,UAAU,MACV/B,eAAe,SACfC,WAAW,UACXrI,QAAS,EAAEE,UAEXC,EAAAA,EAAAA,KAAC+H,EAAAA,GAAI,CAACI,MAAI,EAACW,GAAI,GAAG/I,UACdC,EAAAA,EAAAA,KAAAsH,EAAAA,SAAA,CAAAvH,UACIC,EAAAA,EAAAA,KAACiK,EAAAA,EAAI,CAAChK,UAAU,eAAcF,UAC1BC,EAAAA,EAAAA,KAAA,OAAAD,SACK+C,IACG9C,EAAAA,EAAAA,KAACkK,EAAAA,EAAO,CAAChF,MAAM,gBAEftE,EAAAA,EAAAA,MAAA0G,EAAAA,SAAA,CAAAvH,SAAA,EACIC,EAAAA,EAAAA,KAACmK,EAAAA,EAAO,IACP5H,GAAiBA,EAAc6H,OAAS,GACrCxJ,EAAAA,EAAAA,MAAA0G,EAAAA,SAAA,CAAAvH,SAAA,EACIC,EAAAA,EAAAA,KAACqK,EAAAA,EAAc,CAACpK,UAAU,yBAAwBF,UAC9Ca,EAAAA,EAAAA,MAAC0J,EAAAA,EAAK,CAACC,cAAY,EAAAxK,SAAA,EACfC,EAAAA,EAAAA,KAACwK,EAAAA,EAAS,CAAAzK,UACNa,EAAAA,EAAAA,MAAC6J,EAAAA,EAAQ,CAAA1K,SAAA,EACLC,EAAAA,EAAAA,KAAC0K,EAAAA,EAAS,CAAA3K,UACNC,EAAAA,EAAAA,KAAC0I,EAAAA,EAAU,CACPiC,QAAM,EACNnD,MAAO,CACHvG,SAAU,OACVC,WAAY,OACZ0J,aAAc,QAChB7K,SACL,cAILC,EAAAA,EAAAA,KAAC0K,EAAAA,EAAS,CAAA3K,UACNC,EAAAA,EAAAA,KAAC0I,EAAAA,EAAU,CACPiC,QAAM,EACNnD,MAAO,CACHvG,SAAU,OACVC,WAAY,OACZ0J,aAAc,QAChB7K,SACL,qBAILC,EAAAA,EAAAA,KAAC0K,EAAAA,EAAS,CAACG,MAAM,QAAO9K,UACpBC,EAAAA,EAAAA,KAAC0I,EAAAA,EAAU,CACPiC,QAAM,EACNnD,MAAO,CACHvG,SAAU,OACVC,WAAY,OACZ0J,aAAc,QAChB7K,SACL,oBAMbC,EAAAA,EAAAA,KAAC8K,EAAAA,EAAS,CAAA/K,SACLwC,EAAcwI,KAAI,CAACC,EAAUC,KAEtBrK,EAAAA,EAAAA,MAAC6J,EAAAA,EAAQ,CAACS,OAAK,EAAAnL,SAAA,EACXC,EAAAA,EAAAA,KAAC0K,EAAAA,EAAS,CAAA3K,UACNC,EAAAA,EAAAA,KAAC0I,EAAAA,EAAU,CACPC,QAAQ,QACRzH,WAAW,OACXM,MAAM,eACN2J,cAAY,EACZR,QAAM,EAAA5K,SAELiC,EAAOG,EAAQ8I,EAAQ,OAGhCjL,EAAAA,EAAAA,KAAC0K,EAAAA,EAAS,CAAA3K,UACNC,EAAAA,EAAAA,KAAC0I,EAAAA,EAAU,CACPC,QAAQ,QACRzH,WAAW,OACXM,MAAM,eACN2J,cAAY,EACZR,QAAM,EACN7J,GAAI,CAAEsK,cAAe,cAAerL,SAEnCiL,EAAIlJ,UAGb9B,EAAAA,EAAAA,KAAC0K,EAAAA,EAAS,CACNG,MAAM,QAAO9K,SAEZ6D,IAAmBhD,EAAAA,EAAAA,MAAA0G,EAAAA,SAAA,CAAAvH,SAAA,EAChBC,EAAAA,EAAAA,KAACqL,EAAAA,EAAO,CACJnG,MACqB,IAAjB8F,EAAI/E,SACE,WACA,SAEVqF,OAAK,EAAAvL,UAELC,EAAAA,EAAAA,KAACuL,EAAAA,EAAM,CACHC,SAAgC,oBAAZ,OAAVlH,SAAU,IAAVA,QAAU,EAAVA,GAAYmH,OACtBC,QACqB,IAAjBV,EAAI/E,SAER7E,QAAUqI,GA7hB7EpE,OAAOxD,EAAY0E,KAKpC5D,GAJU,CACNd,GAAIA,EACJ0E,OAAQA,IAGZtD,IAAW,EAAK,EAwhBwE0I,CAAaX,EAAInJ,GAAImJ,EAAI/E,UAE7B2F,WAAY,CACR,aAAc,mBAI1B5L,EAAAA,EAAAA,KAACqL,EAAAA,EAAO,CAACnG,MAAM,OAAOoG,OAAK,EAAAvL,UACvBC,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CACPqK,SAAgC,oBAAZ,OAAVlH,SAAU,IAAVA,QAAU,EAAVA,GAAYmH,OACtB3K,GAAI,CACA,UAAW,CACP+K,WACIjM,GAAMkM,OAAOC,QAAQC,SAE7BxK,MAAO5B,GAAM6B,QAAQsK,QAAQE,MAEjCzK,MAAM,UACNwH,KAAK,QACL5H,QAAUqI,IACNyC,OArkBjEC,EAskBqEnB,EAAInJ,GAtkB7DuK,EAukByDpB,EAAIlJ,KAvkBjDC,EAwkB6CiJ,EAAIjJ,WAlkBhGY,GALU,CACNd,GAAIsK,EACJrK,KAAMsK,EACNrK,WAAYA,IAGhBc,IAAU,GACVsB,IAAa,GACbE,GAAgB,IAChBlB,IAA4B,QAC5BE,GAAwB,IAXF6I,IAACC,EAAYC,EAAYrK,CA0kBsC,EACD,cAAY,QACZ,cAAY,gBAAehC,UAE3BC,EAAAA,EAAAA,KAACqM,EAAAA,EAAe,CAACpL,SAAS,kBAGhCjB,EAAAA,EAAAA,KAAAsH,EAAAA,SAAA,QA1EO0D,EAAInJ,cAmF7C7B,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACsB,EAAG,EAAEjB,UACNC,EAAAA,EAAAA,KAACsM,EAAAA,EAAe,CACZC,UAAU,MACVC,MAAOnK,EACPoK,aA7Q/BC,CAACC,EAAYC,KAClC3K,EAAQ2K,GACRtH,GAAQsH,EAAUzK,EAAOA,EAAM,EA4QqB0K,oBAzQ7BF,IACvBvK,EAAS0K,SAASH,EAAMjD,OAAOH,QAC/BtH,EAAQ,GACRqD,GAAQ,EAAGwH,SAASH,EAAMjD,OAAOH,OAAO,EAuQYvH,KAAMA,EACN+K,YAAa5K,EACb6K,mBAAoB,CAAC,GAAI,GAAI,GAAI,YAK7ChN,EAAAA,EAAAA,KAACiN,EAAAA,EAAK,CACFnM,GAAI,CACA0H,QAAS,OACTP,eAAgB,SAChBC,WAAY,SACZgF,UAAW,SACXC,cAAe,SACfC,UAAW,QAEfnN,UAAU,eAAcF,UAExBC,EAAAA,EAAAA,KAAC0I,EAAAA,EAAU,CAACC,QAAQ,KAAK0E,WAAS,EAAAtN,SAAC,sBAK3CC,EAAAA,EAAAA,KAAA,OAAAD,UACIa,EAAAA,EAAAA,MAACP,EAAAA,EAAM,CACHiN,KAAMtK,GACNtC,QAASiF,GACT4H,WAAS,EACTpN,SAAS,KAAIJ,SAAA,EAEbC,EAAAA,EAAAA,KAACa,EAAAA,EAAW,CACRC,GAAI,CACAC,EAAG,EACHC,EAAG,EACHC,SAAU,OACVC,WAAY,UACdnB,SAEa,IAAd2C,GAAG6D,OAAe,WAAa,YAEpCvG,EAAAA,EAAAA,KAACwN,EAAAA,EAAa,CAAAzN,UACVC,EAAAA,EAAAA,KAACyN,EAAAA,EAAiB,CACdjG,MAAO,CACHvG,SAAU,OACVyM,cAAe,aACjB3N,SAEa,IAAd2C,GAAG6D,OACE,mCACA,0CAGd3F,EAAAA,EAAAA,MAAC+M,EAAAA,EAAa,CAAA5N,SAAA,EACVC,EAAAA,EAAAA,KAAC4I,EAAAA,EAAM,CAACxH,QAASuE,GAAagD,QAAQ,WAAWnB,MAAO,CAACoG,YAAa,QAAQ7N,SAAC,YAC/EC,EAAAA,EAAAA,KAAC4I,EAAAA,EAAM,CAAC4C,SAAgC,oBAAZ,OAAVlH,SAAU,IAAVA,QAAU,EAAVA,GAAYmH,OAA4BrK,QAtnBpFiE,UACtB,MAAMS,EAAQnB,aAAaC,QAAQ,gBAC7BmB,EAAepB,aAAaC,QAAQ,gBAC1C,IAAIoB,EAAM,CACNnE,GAAIa,GAAGb,UAEOsE,EAAAA,EAAWC,SACzB,sDACAJ,EACAF,EACAC,GAEJ9C,IAAW,GACXqC,GAAQtD,EAAOG,EAAOA,EAAM,EAymB0GwG,QAAQ,WAAWnB,MAAO,CAACoG,YAAa,QAAQ7N,SAAC,iBAKnJC,EAAAA,EAAAA,KAAA,OAAAD,UACIa,EAAAA,EAAAA,MAACR,EAAe,CACZkN,KAAM1K,GACNlC,QAAS+E,GACToI,WAAY,CAAE/M,GAAI,CAAEP,OAAQ,QAC5BgN,WAAS,EACTpN,SAAS,KAAIJ,SAAA,EAEbC,EAAAA,EAAAA,KAACQ,EAAoB,CACjBqB,GAAG,0BACHnB,QAAS+E,GAA0B1F,SAElC2C,GAAGb,GAAK,qBAAuB,uBAEpCjB,EAAAA,EAAAA,MAAC4M,EAAAA,EAAa,CAACM,UAAQ,EAAA/N,SAAA,EACnBC,EAAAA,EAAAA,KAACqJ,EAAAA,EAAS,CACN0E,WAAS,EACTC,OAAO,QACPnM,GAAG,OACHyH,MAAM,gBACN2E,KAAK,OACLV,WAAS,EACT5E,QAAQ,WACR7G,KAAK,OACLyH,MAAO7G,GAAGZ,KACV0H,SAAWwB,IApoBxCA,KACvB,MAAM,KAAElJ,EAAI,MAAEyH,GAAUyB,EAAItB,OAC5B/G,GAAM,IAAKD,GAAI,CAACZ,GAAOyH,IACvB1G,IAAU,EAAK,EAkoByCqL,CAAkBlD,GAvuBxDA,KAClB,MAAM,KAAElJ,EAAI,MAAEyH,GAAUyB,EAAItB,OACxBH,EACIhE,GAAI4I,KAAKnD,EAAItB,OAAOH,QACpBpF,IAAa,GACbE,GAAgB,MAEhBF,IAAa,GACbE,GAAgB,gCAGpBF,IAAa,GACbE,GAAgB,6BACpB,EA2tBwD+J,CAAapD,EAAI,EAErBqD,UAAU,KAEdrO,EAAAA,EAAAA,KAACsO,EAAAA,EAAc,CACX9G,MAAO,CAAEhG,MAAO,MAAOjB,OAAQ,QAASR,SAEvCmE,IAAeE,KACH,aACRpE,EAAAA,EAAAA,KAACuO,EAAAA,EAAQ,CACd7C,QAAShJ,GAAGX,WACZyH,SA3oBlCmD,IAElB,MAAM7K,EAAO6K,EAAMjD,OAAO5H,KAC1Ba,GAAM,IAAKD,GAAI,CAACZ,GAAO6K,EAAMjD,OAAOgC,UACpC7I,IAAU,EAAK,EAwoBqCf,KAAK,aACL8J,WAAY,CAAE,aAAc,oBAGpChL,EAAAA,EAAAA,MAAClB,EAAAA,EAAG,CACAoB,GAAI,CACA0H,QAAS,OACTP,eAAgB,gBAChBjH,EAAG,OACLjB,SAAA,EAEFC,EAAAA,EAAAA,KAACsO,EAAAA,EAAc,CACX9G,MAAO,CACHhG,MAAO,MACPjB,OAAQ,OACRyN,OAAQ,OACR1N,QAAS,OACXP,SAEDmD,IAAuBE,MAE5BxC,EAAAA,EAAAA,MAAC8H,EAAAA,EAAU,CAAA3I,SAAA,EACNC,EAAAA,EAAAA,KAAC4I,EAAAA,EAAM,CAAC4C,SAAgC,oBAAZ,OAAVlH,SAAU,IAAVA,QAAU,EAAVA,GAAYmH,OAA4BrK,QAASqE,GAA2BkD,QAAQ,WAAWnB,MAAO,CAACoG,YAAa,QAAQ7N,SAAC,YACpJC,EAAAA,EAAAA,KAAC4I,EAAAA,EAAM,CAAC4C,SAAgC,oBAAZ,OAAVlH,SAAU,IAAVA,QAAU,EAAVA,GAAYmH,OAA4BrK,QAjjBrFiE,UACrB,IAAImJ,EA3Mc/E,KAClBA,EAAEgF,iBACF,IAAID,GAAO,EAgBX,OAfK9L,GAAGZ,KAKAyD,GAAI4I,KAAKzL,GAAGZ,OACZqC,IAAa,GACbE,GAAgB,IAChBmK,GAAO,IAEPrK,IAAa,GACbE,GAAgB,8BAChBmK,GAAO,IAXXrK,IAAa,GACbE,GAAgB,6BAChBmK,GAAO,GAYJA,CAAI,EAyLAE,CAAajF,GACxB,GAAI+E,EACA,IACI,GAAI9L,GAAGb,GAAI,CACP,MAAMiE,EAAQnB,aAAaC,QAAQ,gBAC7BmB,EAAepB,aAAaC,QAAQ,gBAC1ClC,GAAGX,aAAaW,GAAGX,WACnB,IAAI4M,EAAM,CACN9M,GAAIa,GAAGb,GACPC,KAAMY,GAAGZ,KACTC,WAAYW,GAAGX,YAEnB,MAAMmE,QAAYC,EAAAA,EAAWC,SACzB,oDACAuI,EACA7I,EACAC,GAEAG,GAAqB,KAAdA,EAAIK,QACX1D,IAAU,GACVyC,GAAQtD,EAAOG,EAAOA,IACD,KAAd+D,EAAIK,QACXvC,GAAS,UACTW,aAAa6B,SACQ,KAAdN,EAAIK,QAYU,KAAdL,EAAIK,QAYU,KAAdL,EAAIK,QAYU,KAAdL,EAAIK,QAnCX1D,IAAU,GACV4D,EAAAA,GAAMC,MAAMR,EAAIS,QAAS,CACrBC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVtH,MAAO,UACPyB,SAAUoF,EAAAA,GAAMU,SAASC,aAsCR,KAAdlB,EAAIK,SACXpD,IAA4B,GAC5BE,GAAwB,iCAEhC,KAAO,CACHX,GAAGX,aAAaW,GAAGX,WACnB,MAAM+D,EAAQnB,aAAaC,QAAQ,gBAC7BmB,EAAepB,aAAaC,QAAQ,gBACpCsB,QAAYC,EAAAA,EAAWC,SACzB,oDACA1D,GACAoD,EACAC,GAEAG,GAAqB,KAAdA,EAAIK,QACXtE,EAAQ,GACRY,IAAU,GACVyC,GAAQ,EAAGnD,IACU,KAAd+D,EAAIK,QACXvC,GAAS,UACTW,aAAa6B,SACQ,KAAdN,EAAIK,QAYU,KAAdL,EAAIK,QAYU,KAAdL,EAAIK,QAYU,KAAdL,EAAIK,QAnCX1D,IAAU,GACV4D,EAAAA,GAAMC,MAAMR,EAAIS,QAAS,CACrBC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVtH,MAAO,UACPyB,SAAUoF,EAAAA,GAAMU,SAASC,aAsCR,KAAdlB,EAAIK,SACXpD,IAA4B,GAC5BE,GAAwB,iCAEhC,CACJ,CAAE,MAAOqD,GACL7D,IAAU,GACV4D,EAAAA,GAAMC,MAAMA,EAAO,CACfE,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVtH,MAAO,UACPyB,SAAUoF,EAAAA,GAAMU,SAASC,WAEjC,CACJ,EAiZqIuB,QAAQ,WAAWnB,MAAO,CAACoG,YAAa,QAAQ7N,SAAC,qCAiB9L,C,2DCj7BA,MAaA,EAbiBU,IACf,MAAM,MAAEyE,GAAUzE,EAClB,OAKET,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBF,UAChCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBACX,C,sBCbN2O,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,wCACD,cACJN,EAAQ,EAAUG,C,sBCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+OACD,UACJN,EAAQ,EAAUG,C,0ICJlB,SAAeI,EAAAA,EAAAA,IAA4BrP,EAAAA,EAAAA,KAAK,OAAQ,CACtDoP,EAAG,+FACD,wBCFJ,GAAeC,EAAAA,EAAAA,IAA4BrP,EAAAA,EAAAA,KAAK,OAAQ,CACtDoP,EAAG,wIACD,YCFJ,GAAeC,EAAAA,EAAAA,IAA4BrP,EAAAA,EAAAA,KAAK,OAAQ,CACtDoP,EAAG,kGACD,yB,qECTG,SAASE,EAAwBC,GACtC,OAAOC,EAAAA,EAAAA,IAAqB,cAAeD,EAC7C,CACA,MACA,GADwBE,EAAAA,EAAAA,GAAuB,cAAe,CAAC,OAAQ,UAAW,WAAY,gBAAiB,eAAgB,iBAAkB,YAAa,eCDxJC,EAAY,CAAC,cAAe,QAAS,OAAQ,gBAAiB,oBAAqB,aAAc,OAAQ,aA6BzGC,GAAelQ,EAAAA,EAAAA,IAAOmQ,EAAAA,EAAY,CACtCC,kBAAmBC,IAAQC,EAAAA,EAAAA,GAAsBD,IAAkB,YAATA,EAC1DhO,KAAM,cACNyN,KAAM,OACNS,kBAAmBA,CAACvP,EAAOwP,KACzB,MAAM,WACJC,GACEzP,EACJ,MAAO,CAACwP,EAAOE,KAAMD,EAAWE,eAAiBH,EAAOG,cAAeH,EAAO,QAAOI,EAAAA,EAAAA,GAAWH,EAAWlH,SAA+B,YAArBkH,EAAW1O,OAAuByO,EAAO,SAAQI,EAAAA,EAAAA,GAAWH,EAAW1O,UAAU,GARrL/B,EAUlBE,IAAA,IAAC,MACFC,EAAK,WACLsQ,GACDvQ,EAAA,OAAK2Q,EAAAA,EAAAA,GAAS,CACb9O,OAAQ5B,EAAM2Q,MAAQ3Q,GAAO6B,QAAQ+O,KAAKC,YACxCP,EAAWQ,eAAiB,CAC9B,UAAW,CACTC,gBAAiB/Q,EAAM2Q,KAAO,QAA6B,YAArBL,EAAW1O,MAAsB5B,EAAM2Q,KAAK9O,QAAQmP,OAAOC,cAAgBjR,EAAM2Q,KAAK9O,QAAQyO,EAAW1O,OAAOsP,iBAAiBlR,EAAM2Q,KAAK9O,QAAQmP,OAAOG,iBAAkBC,EAAAA,EAAAA,IAA2B,YAArBd,EAAW1O,MAAsB5B,EAAM6B,QAAQmP,OAAOK,OAASrR,EAAM6B,QAAQyO,EAAW1O,OAAOyK,KAAMrM,EAAM6B,QAAQmP,OAAOG,cAEnV,uBAAwB,CACtBJ,gBAAiB,iBAGC,YAArBT,EAAW1O,OAAuB,CACnC,CAAC,KAAK0P,EAAgBxF,cAAcwF,EAAgBd,iBAAkB,CACpE5O,OAAQ5B,EAAM2Q,MAAQ3Q,GAAO6B,QAAQyO,EAAW1O,OAAOyK,MAEzD,CAAC,KAAKiF,EAAgB1F,YAAa,CACjChK,OAAQ5B,EAAM2Q,MAAQ3Q,GAAO6B,QAAQmP,OAAOpF,WAE9C,IACI2F,GAAkCnR,EAAAA,EAAAA,KAAKoR,EAAc,CAAC,GACtDC,GAA2BrR,EAAAA,EAAAA,KAAKsR,EAA0B,CAAC,GAC3DC,GAAwCvR,EAAAA,EAAAA,KAAKwR,EAA2B,CAAC,GAiJ/E,EAhJ8B/O,EAAAA,YAAiB,SAAkBgP,EAASC,GACxE,IAAIC,EAAsBC,EAC1B,MAAMnR,GAAQoR,EAAAA,EAAAA,GAAgB,CAC5BpR,MAAOgR,EACP3P,KAAM,iBAEF,YACFgQ,EAAcX,EAAkB,MAChC3P,EAAQ,UACRuQ,KAAMC,EAAWX,EAAW,cAC5BjB,GAAgB,EAChB6B,kBAAmBC,EAAwBX,EAAwB,WACnE3F,EAAU,KACV5C,EAAO,SAAQ,UACf/I,GACEQ,EACJE,GAAQwR,EAAAA,EAAAA,GAA8B1R,EAAOiP,GACzCqC,EAAO3B,EAAgB8B,EAAwBF,EAC/CC,EAAoB7B,EAAgB8B,EAAwBJ,EAC5D5B,GAAaI,EAAAA,EAAAA,GAAS,CAAC,EAAG7P,EAAO,CACrCe,QACA4O,gBACApH,SAEIoJ,EAvEkBlC,KACxB,MAAM,QACJkC,EAAO,cACPhC,EAAa,MACb5O,EAAK,KACLwH,GACEkH,EACEmC,EAAQ,CACZlC,KAAM,CAAC,OAAQC,GAAiB,gBAAiB,SAAQC,EAAAA,EAAAA,GAAW7O,KAAU,QAAO6O,EAAAA,EAAAA,GAAWrH,OAE5FsJ,GAAkBC,EAAAA,EAAAA,GAAeF,EAAO/C,EAAyB8C,GACvE,OAAO9B,EAAAA,EAAAA,GAAS,CAAC,EAAG8B,EAASE,EAAgB,EA4D7BE,CAAkBtC,GAClC,OAAoBlQ,EAAAA,EAAAA,KAAK2P,GAAcW,EAAAA,EAAAA,GAAS,CAC9CrC,KAAM,WACNrC,YAAY0E,EAAAA,EAAAA,GAAS,CACnB,qBAAsBF,GACrBxE,GACHmG,KAAmBtP,EAAAA,aAAmBsP,EAAM,CAC1C9Q,SAA0D,OAA/C0Q,EAAuBI,EAAKtR,MAAMQ,UAAoB0Q,EAAuB3I,IAE1F8I,YAA0BrP,EAAAA,aAAmBwP,EAAmB,CAC9DhR,SAAwE,OAA7D2Q,EAAwBK,EAAkBxR,MAAMQ,UAAoB2Q,EAAwB5I,IAEzGkH,WAAYA,EACZwB,IAAKA,EACLzR,WAAWwS,EAAAA,EAAAA,GAAKL,EAAQjC,KAAMlQ,IAC7BU,EAAO,CACRyR,QAASA,IAEb,G,qJC3GO,SAASM,EAAyBnD,GACvC,OAAOC,EAAAA,EAAAA,IAAqB,eAAgBD,EAC9C,EACyBE,EAAAA,EAAAA,GAAuB,eAAgB,CAAC,S,eCDjE,MAAMC,EAAY,CAAC,YAAa,aAmB1BiD,GAAgBlT,EAAAA,EAAAA,IAAO,QAAS,CACpCqC,KAAM,eACNyN,KAAM,OACNS,kBAAmBA,CAACvP,EAAOwP,IAAWA,EAAOE,MAHzB1Q,CAInB,CACD+I,QAAS,uBAELoK,EAAY,CAChBjK,QAAS,QAELkK,EAAmB,QAqDzB,EApD+BpQ,EAAAA,YAAiB,SAAmBgP,EAASC,GAC1E,MAAMjR,GAAQoR,EAAAA,EAAAA,GAAgB,CAC5BpR,MAAOgR,EACP3P,KAAM,kBAEF,UACF7B,EAAS,UACTsM,EAAYsG,GACVpS,EACJE,GAAQwR,EAAAA,EAAAA,GAA8B1R,EAAOiP,GACzCQ,GAAaI,EAAAA,EAAAA,GAAS,CAAC,EAAG7P,EAAO,CACrC8L,cAEI6F,EAjCkBlC,KACxB,MAAM,QACJkC,GACElC,EAIJ,OAAOqC,EAAAA,EAAAA,GAHO,CACZpC,KAAM,CAAC,SAEoBuC,EAA0BN,EAAQ,EA0B/CI,CAAkBtC,GAClC,OAAoBlQ,EAAAA,EAAAA,KAAK8S,EAAAA,EAAiBC,SAAU,CAClDxJ,MAAOqJ,EACP7S,UAAuBC,EAAAA,EAAAA,KAAK2S,GAAerC,EAAAA,EAAAA,GAAS,CAClD0C,GAAIzG,EACJtM,WAAWwS,EAAAA,EAAAA,GAAKL,EAAQjC,KAAMlQ,GAC9ByR,IAAKA,EACLuB,KAAM1G,IAAcsG,EAAmB,KAAO,WAC9C3C,WAAYA,GACXvP,KAEP,G,qJCxDO,SAASuS,EAAqB3D,GACnC,OAAOC,EAAAA,EAAAA,IAAqB,WAAYD,EAC1C,EACqBE,EAAAA,EAAAA,GAAuB,WAAY,CAAC,OAAQ,iB,eCDjE,MAAMC,EAAY,CAAC,YAAa,YAAa,UAAW,OAAQ,gBAoB1DyD,GAAY1T,EAAAA,EAAAA,IAAO,QAAS,CAChCqC,KAAM,WACNyN,KAAM,OACNS,kBAAmBA,CAACvP,EAAOwP,KACzB,MAAM,WACJC,GACEzP,EACJ,MAAO,CAACwP,EAAOE,KAAMD,EAAW3F,cAAgB0F,EAAO1F,aAAa,GAPtD9K,EASfE,IAAA,IAAC,MACFC,EAAK,WACLsQ,GACDvQ,EAAA,OAAK2Q,EAAAA,EAAAA,GAAS,CACb9H,QAAS,QACT4K,MAAO,OACPC,eAAgB,WAChBC,cAAe,EACf,aAAahD,EAAAA,EAAAA,GAAS,CAAC,EAAG1Q,EAAM2T,WAAWC,MAAO,CAChDlT,QAASV,EAAMC,QAAQ,GACvB2B,OAAQ5B,EAAM2Q,MAAQ3Q,GAAO6B,QAAQ+O,KAAKC,UAC1CvD,UAAW,OACXuG,YAAa,YAEdvD,EAAW3F,cAAgB,CAC5B8I,eAAgB,YAChB,IACIR,EAAmB,QAiFzB,EAhF2BpQ,EAAAA,YAAiB,SAAegP,EAASC,GAClE,MAAMjR,GAAQoR,EAAAA,EAAAA,GAAgB,CAC5BpR,MAAOgR,EACP3P,KAAM,cAEF,UACF7B,EAAS,UACTsM,EAAYsG,EAAgB,QAC5BvS,EAAU,SAAQ,KAClB0I,EAAO,SAAQ,aACfuB,GAAe,GACb9J,EACJE,GAAQwR,EAAAA,EAAAA,GAA8B1R,EAAOiP,GACzCQ,GAAaI,EAAAA,EAAAA,GAAS,CAAC,EAAG7P,EAAO,CACrC8L,YACAjM,UACA0I,OACAuB,iBAEI6H,EAxDkBlC,KACxB,MAAM,QACJkC,EAAO,aACP7H,GACE2F,EACEmC,EAAQ,CACZlC,KAAM,CAAC,OAAQ5F,GAAgB,iBAEjC,OAAOgI,EAAAA,EAAAA,GAAeF,EAAOa,EAAsBd,EAAQ,EAgD3CI,CAAkBtC,GAC5BwD,EAAQjR,EAAAA,SAAc,KAAM,CAChCnC,UACA0I,OACAuB,kBACE,CAACjK,EAAS0I,EAAMuB,IACpB,OAAoBvK,EAAAA,EAAAA,KAAK2T,EAAAA,EAAaZ,SAAU,CAC9CxJ,MAAOmK,EACP3T,UAAuBC,EAAAA,EAAAA,KAAKmT,GAAW7C,EAAAA,EAAAA,GAAS,CAC9C0C,GAAIzG,EACJ0G,KAAM1G,IAAcsG,EAAmB,KAAO,QAC9CnB,IAAKA,EACLzR,WAAWwS,EAAAA,EAAAA,GAAKL,EAAQjC,KAAMlQ,GAC9BiQ,WAAYA,GACXvP,KAEP,G","sources":["components/PageTitleWrapper/index.tsx","content/DocumentType/DocumentType.tsx","content/Loader.tsx","../node_modules/@mui/icons-material/AddTwoTone.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/material/Table/tableClasses.js","../node_modules/@mui/material/Table/Table.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from '../../components/PageTitleWrapper';\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Box,\r\n    Breadcrumbs,\r\n    Button,\r\n    Card,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Divider,\r\n    FormHelperText,\r\n    IconButton,\r\n    Stack,\r\n    Switch,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TextField,\r\n    Tooltip,\r\n    Typography,\r\n    useTheme,\r\n    styled,\r\n    FormControl,\r\n    InputAdornment,\r\n    Paper,\r\n    Checkbox\r\n} from '@mui/material';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Footer from 'src/components/Footer';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport React, { useState, ChangeEvent } from 'react';\r\nimport Loader1 from '../Loader';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../smallScreen.css';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n        padding: theme.spacing(2)\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1)\r\n    },\r\n    '& .MuiPaper-root': {\r\n        height: '300px'\r\n    },\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n    id: string;\r\n    children?: React.ReactNode;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle\r\n            sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n            {...other}\r\n        >\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 13,\r\n                        top: 13,\r\n                        color: (theme) => theme.palette.grey[500]\r\n                    }}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </DialogTitle>\r\n    );\r\n}\r\n\r\nconst initialState = {\r\n    id: 0,\r\n    name: '',\r\n    isRequired: null\r\n};\r\n\r\nfunction DocumentType() {\r\n    const [page, setPage] = useState<number>(0);\r\n    const [limit, setLimit] = useState<number>(10);\r\n    const [row, setRow] = useState<number>(10);\r\n    const [documentTypes, setDocumentTypes] = React.useState<any>([]);\r\n    const [v1, setV1] = React.useState<any>(initialState);\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [isloading, setIsLoading] = useState(false);\r\n    const [ischeck, setIsCheck] = useState(false);\r\n    const [isDocumentTypeError, setIsDocumentTypeErrorError] = useState(false);\r\n    const [documentTypeErrorMsg, setDocumentTypeErrorMsg] = useState('');\r\n    let [search, setSearch] = useState('');\r\n\r\n    const [isReadPermission, setIsReadPermission] = useState(true);\r\n    const [isWritePermission, setIsWritePermission] = useState(true);\r\n    const [isEditPermission, setIsEditPermission] = useState(true);\r\n    const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [isNameError, setNameError] = useState(false);\r\n    const [NameErrorMsg, setNameErrorMsg] = useState('');\r\n    let [credentail, setCredentail] = useState<any>();\r\n\r\n    // window.onpopstate = () => {\r\n    //   navigate(-1);\r\n    // }\r\n\r\n    React.useEffect(() => {\r\n        let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n        setCredentail(cred);\r\n        if (cred) {\r\n            if (cred.roleId != 1) {\r\n                let ind = cred.pagePermissions.findIndex((c: any) => c.title === \"Block Users\");\r\n                if (ind >= 0) {\r\n                    setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n                    setIsWritePermission(cred.pagePermissions[ind].isAddPermission)\r\n                    setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n                    setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n                    if (cred.pagePermissions[ind].isReadPermission)\r\n                        loadData();\r\n                }\r\n            } else {\r\n                loadData();\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const loadData = async () => {\r\n        await getdata(page, limit);\r\n        setIsOpen(false);\r\n    }\r\n\r\n    const reg = new RegExp(/^[a-zA-Z_ ]+$/);\r\n    const validateName = (arr) => {\r\n        const { name, value } = arr.target;\r\n        if (value) {\r\n            if (reg.test(arr.target.value)) {\r\n                setNameError(false);\r\n                setNameErrorMsg('');\r\n            } else {\r\n                setNameError(true);\r\n                setNameErrorMsg('Alphabet and space allowed');\r\n            }\r\n        } else {\r\n            setNameError(true);\r\n            setNameErrorMsg('Document Type is required');\r\n        }\r\n    };\r\n\r\n    const validateForm = (e: any) => {\r\n        e.preventDefault();\r\n        var flag = true;\r\n        if (!v1.name) {\r\n            setNameError(true);\r\n            setNameErrorMsg('Document Type is required');\r\n            flag = false;\r\n        } else {\r\n            if (reg.test(v1.name)) {\r\n                setNameError(false);\r\n                setNameErrorMsg('');\r\n                flag = true;\r\n            } else {\r\n                setNameError(true);\r\n                setNameErrorMsg('Alphabet and space allowed');\r\n                flag = false;\r\n            }\r\n        }\r\n        return flag;\r\n    };\r\n\r\n    const handleCloseReligionDialog = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const handleClickisAdd = async () => {\r\n        setV1(initialState);\r\n        setIsOpen(true);\r\n        setNameError(false);\r\n        setNameErrorMsg('');\r\n        setIsDocumentTypeErrorError(false);\r\n        setDocumentTypeErrorMsg('');\r\n    };\r\n\r\n    const handleClickisEdit = (no: number, st: string, isRequired?: boolean) => {\r\n        let obj = {\r\n            id: no,\r\n            name: st,\r\n            isRequired: isRequired\r\n        };\r\n        setV1(obj);\r\n        setIsOpen(true);\r\n        setNameError(false);\r\n        setNameErrorMsg('');\r\n        setIsDocumentTypeErrorError(false);\r\n        setDocumentTypeErrorMsg('');\r\n    };\r\n\r\n    const editReligionDialog = (arr: any) => {\r\n        setV1(arr);\r\n        setIsOpen(true);\r\n    };\r\n\r\n    const handleSwitch = async (id: number, status: number) => {\r\n        let obj = {\r\n            id: id,\r\n            status: status\r\n        };\r\n        setV1(obj);\r\n        setIsCheck(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setIsCheck(false);\r\n    };\r\n\r\n    const handleSwitchCheck = async () => {\r\n        const token = localStorage.getItem('SessionToken');\r\n        const refreshToken = localStorage.getItem('RefreshToken');\r\n        let obj = {\r\n            id: v1.id\r\n        };\r\n        const res = await APIservice.httpPost(\r\n            '/api/admin/documentType/activeInactiveDocumentTypes',\r\n            obj,\r\n            token,\r\n            refreshToken\r\n        );\r\n        setIsCheck(false);\r\n        getdata(page * limit, limit);\r\n    };\r\n\r\n    const handleInputChange = (arr: any) => {\r\n        const { name, value } = arr.target;\r\n        setV1({ ...v1, [name]: value });\r\n        setIsOpen(true);\r\n    };\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        //setChecked(event.target.checked);\r\n        const name = event.target.name;\r\n        setV1({ ...v1, [name]: event.target.checked });\r\n        setIsOpen(true);\r\n    };\r\n\r\n    const getdata = async (startIndex: number, fetchRecord: number) => {\r\n        try {\r\n            if (search) {\r\n                const token = localStorage.getItem('SessionToken');\r\n                const refreshToken = localStorage.getItem('RefreshToken');\r\n                let obj = {\r\n                    startIndex: startIndex,\r\n                    fetchRecord: fetchRecord,\r\n                    name: search ? search : '',\r\n                    isActive: null\r\n                };\r\n                const res = await APIservice.httpPost(\r\n                    '/api/admin/documentType/getDocumentTypes',\r\n                    obj,\r\n                    token,\r\n                    refreshToken\r\n                );\r\n                setDocumentTypes(res.recordList);\r\n                setRow(res.totalRecords);\r\n            } else {\r\n                setIsLoading(true);\r\n                const token = localStorage.getItem('SessionToken');\r\n                const refreshToken = localStorage.getItem('RefreshToken');\r\n                let obj = {\r\n                    startIndex: startIndex,\r\n                    fetchRecord: fetchRecord\r\n                };\r\n                const res = await APIservice.httpPost(\r\n                    '/api/admin/documentType/getDocumentTypes',\r\n                    obj,\r\n                    token,\r\n                    refreshToken\r\n                );\r\n                setDocumentTypes(res.recordList);\r\n                setRow(res.totalRecords);\r\n                if (res && res.status == 200) {\r\n                    setIsOpen(false);\r\n                } else if (res.status == 401) {\r\n                    navigate('/admin');\r\n                    localStorage.clear();\r\n                } else if (res.status == 500) {\r\n                    setIsOpen(false);\r\n                    toast.error(res.message, {\r\n                        autoClose: 6000,\r\n                        hideProgressBar: true,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        theme: 'colored',\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n                } else if (res.status == 300) {\r\n                    setIsOpen(false);\r\n                    toast.error(res.message, {\r\n                        autoClose: 6000,\r\n                        hideProgressBar: true,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        theme: 'colored',\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n                } else if (res.status == 400) {\r\n                    setIsOpen(false);\r\n                    toast.error(res.message, {\r\n                        autoClose: 6000,\r\n                        hideProgressBar: true,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        theme: 'colored',\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n                } else if (res.status == 404) {\r\n                    setIsOpen(false);\r\n                    toast.error(res.message, {\r\n                        autoClose: 6000,\r\n                        hideProgressBar: true,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        theme: 'colored',\r\n                        position: toast.POSITION.TOP_RIGHT\r\n                    });\r\n                }\r\n                setIsLoading(false);\r\n            }\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n            setIsOpen(false);\r\n            toast.error(error, {\r\n                autoClose: 6000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'colored',\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n\r\n    const saveDocumentType = async (e: any) => {\r\n        var flag = validateForm(e);\r\n        if (flag) {\r\n            try {\r\n                if (v1.id) {\r\n                    const token = localStorage.getItem('SessionToken');\r\n                    const refreshToken = localStorage.getItem('RefreshToken');\r\n                    v1.isRequired = v1.isRequired ? true : false;\r\n                    let val = {\r\n                        id: v1.id,\r\n                        name: v1.name,\r\n                        isRequired: v1.isRequired\r\n                    };\r\n                    const res = await APIservice.httpPost(\r\n                        '/api/admin/documentType/insertUpdateDocumentTypes',\r\n                        val,\r\n                        token,\r\n                        refreshToken\r\n                    );\r\n                    if (res && res.status == 200) {\r\n                        setIsOpen(false);\r\n                        getdata(page * limit, limit);\r\n                    } else if (res.status == 401) {\r\n                        navigate('/admin');\r\n                        localStorage.clear();\r\n                    } else if (res.status == 500) {\r\n                        setIsOpen(false);\r\n                        toast.error(res.message, {\r\n                            autoClose: 6000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: 'colored',\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n                    } else if (res.status == 300) {\r\n                        setIsOpen(false);\r\n                        toast.error(res.message, {\r\n                            autoClose: 6000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: 'colored',\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n                    } else if (res.status == 404) {\r\n                        setIsOpen(false);\r\n                        toast.error(res.message, {\r\n                            autoClose: 6000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: 'colored',\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n                    } else if (res.status == 400) {\r\n                        setIsOpen(false);\r\n                        toast.error(res.message, {\r\n                            autoClose: 6000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: 'colored',\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n                    } else if (res.status == 203) {\r\n                        setIsDocumentTypeErrorError(true);\r\n                        setDocumentTypeErrorMsg('Document Type already exists!');\r\n                    }\r\n                } else {\r\n                    v1.isRequired = v1.isRequired ? true : false;                                                                                                                                                                                                                                                                   \r\n                    const token = localStorage.getItem('SessionToken');\r\n                    const refreshToken = localStorage.getItem('RefreshToken');\r\n                    const res = await APIservice.httpPost(\r\n                        '/api/admin/documentType/insertUpdateDocumentTypes',\r\n                        v1,\r\n                        token,\r\n                        refreshToken\r\n                    );\r\n                    if (res && res.status == 200) {\r\n                        setPage(0);\r\n                        setIsOpen(false);\r\n                        getdata(0, limit);\r\n                    } else if (res.status == 401) {\r\n                        navigate('/admin');\r\n                        localStorage.clear();\r\n                    } else if (res.status == 500) {\r\n                        setIsOpen(false);\r\n                        toast.error(res.message, {\r\n                            autoClose: 6000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: 'colored',\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n                    } else if (res.status == 300) {\r\n                        setIsOpen(false);\r\n                        toast.error(res.message, {\r\n                            autoClose: 6000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: 'colored',\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n                    } else if (res.status == 404) {\r\n                        setIsOpen(false);\r\n                        toast.error(res.message, {\r\n                            autoClose: 6000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: 'colored',\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n                    } else if (res.status == 400) {\r\n                        setIsOpen(false);\r\n                        toast.error(res.message, {\r\n                            autoClose: 6000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: 'colored',\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n                    } else if (res.status == 203) {\r\n                        setIsDocumentTypeErrorError(true);\r\n                        setDocumentTypeErrorMsg('Document Type already exists!');\r\n                    }\r\n                }\r\n            } catch (error: any) {\r\n                setIsOpen(false);\r\n                toast.error(error, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const searchData = (e) => {\r\n        setSearch(e.target.value);\r\n        search = e.target.value;\r\n        getdata(page, limit);\r\n    };\r\n\r\n    const handlePageChange = (event: any, newPage: number): void => {\r\n        setPage(newPage);\r\n        getdata(newPage * limit, limit);\r\n    };\r\n\r\n    const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n        setLimit(parseInt(event.target.value));\r\n        setPage(0);\r\n        getdata(0, parseInt(event.target.value));\r\n    };\r\n\r\n    const theme = useTheme();\r\n    return (\r\n        <>\r\n            <ToastContainer\r\n                style={{ top: '10%', left: '80%' }}\r\n                autoClose={6000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Helmet>\r\n                <title>Document Type</title>\r\n            </Helmet>\r\n            <PageTitleWrapper>\r\n                <Box p={1}>\r\n                    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                                    <Link to=\"/admin\" style={{ display: 'flex', color: 'black' }}>\r\n                                        <HomeIcon />\r\n                                    </Link>\r\n                                    <Typography\r\n                                        variant=\"subtitle2\"\r\n                                        color=\"inherit\"\r\n                                        fontWeight=\"bold\"\r\n                                    >\r\n                                        Document Type\r\n                                    </Typography>\r\n                                </Breadcrumbs>\r\n                            </Stack>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container spacing={1.5}>\r\n                                <Grid item>\r\n                                    {isWritePermission ? <>\r\n                                        <Button\r\n                                            className=\"buttonLarge\"\r\n                                            sx={{\r\n                                                mt: {\r\n                                                    xs: 0,\r\n                                                    md: 0,\r\n                                                    display: 'flex',\r\n                                                    alignItems: 'center',\r\n                                                    padding: '8.3px',\r\n                                                    top: '3px'\r\n                                                }\r\n                                            }}\r\n                                            variant=\"contained\"\r\n                                            onClick={handleClickisAdd}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <AddTwoToneIcon fontSize=\"small\" />\r\n                                            Create Document Type\r\n                                        </Button>\r\n                                        <Button\r\n                                            className=\"button\"\r\n                                            sx={{\r\n                                                mt: {\r\n                                                    xs: 0,\r\n                                                    md: 0,\r\n                                                    display: 'flex',\r\n                                                    alignItems: 'center',\r\n                                                    padding: '8.3px',\r\n                                                    top: '3px'\r\n                                                }\r\n                                            }}\r\n                                            variant=\"contained\"\r\n                                            onClick={handleClickisAdd}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            <AddTwoToneIcon fontSize=\"small\" />\r\n                                        </Button>\r\n                                    </> : <></>}\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <FormControl\r\n                                        sx={{ mt: { xs: 0.3, md: 0.3, lg: 0.3, sm: 0.3 } }}\r\n                                    >\r\n                                        <TextField\r\n                                            // size=\"small\"\r\n                                            id=\"outlined-basic\"\r\n                                            label=\"Search\"\r\n                                            variant=\"outlined\"\r\n                                            name=\"searchString\"\r\n                                            value={search}\r\n                                            onChange={(e) => searchData(e)}\r\n                                            size=\"small\"\r\n                                            InputProps={{\r\n                                                startAdornment: (\r\n                                                    <InputAdornment position=\"start\">\r\n                                                        <SearchIcon />\r\n                                                    </InputAdornment>\r\n                                                )\r\n                                            }}\r\n                                        />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </PageTitleWrapper>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <>\r\n                            <Card className=\"religioncard\">\r\n                                <div>\r\n                                    {isloading ? (\r\n                                        <Loader1 title=\"Loading...\" />\r\n                                    ) : (\r\n                                        <>\r\n                                            <Divider />\r\n                                            {documentTypes && documentTypes.length > 0 ? (\r\n                                                <>\r\n                                                    <TableContainer className=\"religiontableContainer\">\r\n                                                        <Table stickyHeader>\r\n                                                            <TableHead>\r\n                                                                <TableRow>\r\n                                                                    <TableCell>\r\n                                                                        <Typography\r\n                                                                            noWrap\r\n                                                                            style={{\r\n                                                                                fontSize: '13px',\r\n                                                                                fontWeight: 'bold',\r\n                                                                                marginBottom: 'none'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Sr. No\r\n                                                                        </Typography>\r\n                                                                    </TableCell>\r\n                                                                    <TableCell>\r\n                                                                        <Typography\r\n                                                                            noWrap\r\n                                                                            style={{\r\n                                                                                fontSize: '13px',\r\n                                                                                fontWeight: 'bold',\r\n                                                                                marginBottom: 'none'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Document Type\r\n                                                                        </Typography>\r\n                                                                    </TableCell>\r\n                                                                    <TableCell align=\"right\">\r\n                                                                        <Typography\r\n                                                                            noWrap\r\n                                                                            style={{\r\n                                                                                fontSize: '13px',\r\n                                                                                fontWeight: 'bold',\r\n                                                                                marginBottom: 'none'\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            Actions\r\n                                                                        </Typography>\r\n                                                                    </TableCell>\r\n                                                                </TableRow>\r\n                                                            </TableHead>\r\n                                                            <TableBody>\r\n                                                                {documentTypes.map((arr: any, index: number) => {\r\n                                                                    return (\r\n                                                                        <TableRow hover key={arr.id}>\r\n                                                                            <TableCell>\r\n                                                                                <Typography\r\n                                                                                    variant=\"body1\"\r\n                                                                                    fontWeight=\"bold\"\r\n                                                                                    color=\"text.primary\"\r\n                                                                                    gutterBottom\r\n                                                                                    noWrap\r\n                                                                                >\r\n                                                                                    {page * limit + index + 1}\r\n                                                                                </Typography>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell>\r\n                                                                                <Typography\r\n                                                                                    variant=\"body1\"\r\n                                                                                    fontWeight=\"bold\"\r\n                                                                                    color=\"text.primary\"\r\n                                                                                    gutterBottom\r\n                                                                                    noWrap\r\n                                                                                    sx={{ textTransform: 'capitalize' }}\r\n                                                                                >\r\n                                                                                    {arr.name}\r\n                                                                                </Typography>\r\n                                                                            </TableCell>\r\n                                                                            <TableCell\r\n                                                                                align=\"right\"\r\n                                                                            >\r\n                                                                                {isEditPermission ? <>\r\n                                                                                    <Tooltip\r\n                                                                                        title={\r\n                                                                                            arr.isActive === 0\r\n                                                                                                ? 'Inactive'\r\n                                                                                                : 'Active'\r\n                                                                                        }\r\n                                                                                        arrow\r\n                                                                                    >\r\n                                                                                        <Switch\r\n                                                                                            disabled={credentail?.email === \"demo@admin.com\"}\r\n                                                                                            checked={\r\n                                                                                                arr.isActive === 0 ? false : true\r\n                                                                                            }\r\n                                                                                            onClick={(e) =>\r\n                                                                                                handleSwitch(arr.id, arr.isActive)\r\n                                                                                            }\r\n                                                                                            inputProps={{\r\n                                                                                                'aria-label': 'controlled'\r\n                                                                                            }}\r\n                                                                                        />\r\n                                                                                    </Tooltip>\r\n                                                                                    <Tooltip title=\"Edit\" arrow>\r\n                                                                                        <IconButton\r\n                                                                                            disabled={credentail?.email === \"demo@admin.com\"}\r\n                                                                                            sx={{\r\n                                                                                                '&:hover': {\r\n                                                                                                    background:\r\n                                                                                                        theme.colors.primary.lighter\r\n                                                                                                },\r\n                                                                                                color: theme.palette.primary.main\r\n                                                                                            }}\r\n                                                                                            color=\"inherit\"\r\n                                                                                            size=\"small\"\r\n                                                                                            onClick={(e) =>\r\n                                                                                                handleClickisEdit(\r\n                                                                                                    arr.id,\r\n                                                                                                    arr.name,\r\n                                                                                                    arr.isRequired\r\n                                                                                                )\r\n                                                                                            }\r\n                                                                                            data-toggle=\"modal\"\r\n                                                                                            data-target=\"#exampleModal\"\r\n                                                                                        >\r\n                                                                                            <EditTwoToneIcon fontSize=\"small\" />\r\n                                                                                        </IconButton>\r\n                                                                                    </Tooltip>\r\n                                                                                </> : <></>}\r\n\r\n                                                                            </TableCell>\r\n                                                                        </TableRow>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </TableBody>\r\n                                                        </Table>\r\n                                                    </TableContainer>\r\n                                                    <Box p={2}>\r\n                                                        <TablePagination\r\n                                                            component=\"div\"\r\n                                                            count={row}\r\n                                                            onPageChange={handlePageChange}\r\n                                                            onRowsPerPageChange={handleLimitChange}\r\n                                                            page={page}\r\n                                                            rowsPerPage={limit}\r\n                                                            rowsPerPageOptions={[10, 20, 30, 40]}\r\n                                                        />\r\n                                                    </Box>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Paper\r\n                                                    sx={{\r\n                                                        display: 'flex',\r\n                                                        justifyContent: 'center',\r\n                                                        alignItems: 'center',\r\n                                                        textAlign: 'center',\r\n                                                        verticalAlign: 'middle',\r\n                                                        boxShadow: 'none'\r\n                                                    }}\r\n                                                    className=\"religioncard\"\r\n                                                >\r\n                                                    <Typography variant=\"h5\" paragraph>\r\n                                                        Data not Found\r\n                                                    </Typography>\r\n                                                </Paper>\r\n                                            )}\r\n                                            <div>\r\n                                                <Dialog\r\n                                                    open={ischeck}\r\n                                                    onClose={handleClose}\r\n                                                    fullWidth\r\n                                                    maxWidth=\"xs\"\r\n                                                >\r\n                                                    <DialogTitle\r\n                                                        sx={{\r\n                                                            m: 0,\r\n                                                            p: 2,\r\n                                                            fontSize: '20px',\r\n                                                            fontWeight: 'bolder'\r\n                                                        }}\r\n                                                    >\r\n                                                        {v1.status === 0 ? 'Inactive' : 'Active'}\r\n                                                    </DialogTitle>\r\n                                                    <DialogContent>\r\n                                                        <DialogContentText\r\n                                                            style={{\r\n                                                                fontSize: '1rem',\r\n                                                                letterSpacing: '0.00938em'\r\n                                                            }}\r\n                                                        >\r\n                                                            {v1.status === 0\r\n                                                                ? 'Are you sure you want to Active?'\r\n                                                                : 'Are you sure you want to Inactive?'}\r\n                                                        </DialogContentText>\r\n                                                    </DialogContent>\r\n                                                    <DialogActions>\r\n                                                        <Button onClick={handleClose} variant=\"outlined\" style={{marginRight: '10px'}}>Cancel</Button>\r\n                                                        <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={handleSwitchCheck} variant=\"outlined\" style={{marginRight: '10px'}}>Yes</Button>\r\n                                                    </DialogActions>\r\n                                                </Dialog>\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                                <BootstrapDialog\r\n                                                    open={isOpen}\r\n                                                    onClose={handleCloseReligionDialog}\r\n                                                    PaperProps={{ sx: { height: '40%' } }}\r\n                                                    fullWidth\r\n                                                    maxWidth=\"xs\"\r\n                                                >\r\n                                                    <BootstrapDialogTitle\r\n                                                        id=\"customized-dialog-title\"\r\n                                                        onClose={handleCloseReligionDialog}\r\n                                                    >\r\n                                                        {v1.id ? 'Edit Document Type' : 'Add Document Type'}\r\n                                                    </BootstrapDialogTitle>\r\n                                                    <DialogContent dividers>\r\n                                                        <TextField\r\n                                                            autoFocus\r\n                                                            margin=\"dense\"\r\n                                                            id=\"name\"\r\n                                                            label=\"Document Type\"\r\n                                                            type=\"text\"\r\n                                                            fullWidth\r\n                                                            variant=\"outlined\"\r\n                                                            name=\"name\"\r\n                                                            value={v1.name}\r\n                                                            onChange={(arr) => {\r\n                                                                handleInputChange(arr);\r\n                                                                validateName(arr);\r\n                                                            }}\r\n                                                            required={true}\r\n                                                        />\r\n                                                        <FormHelperText\r\n                                                            style={{ color: 'red', height: '22px' }}\r\n                                                        >\r\n                                                            {isNameError && NameErrorMsg}\r\n                                                        </FormHelperText>\r\n                                                        Required <Checkbox\r\n                                                            checked={v1.isRequired}\r\n                                                            onChange={handleChange}\r\n                                                            name=\"isRequired\"\r\n                                                            inputProps={{ 'aria-label': 'controlled' }}\r\n                                                        />\r\n                                                    </DialogContent>\r\n                                                    <Box\r\n                                                        sx={{\r\n                                                            display: 'flex',\r\n                                                            justifyContent: 'space-between',\r\n                                                            p: '8px'\r\n                                                        }}\r\n                                                    >\r\n                                                        <FormHelperText\r\n                                                            style={{\r\n                                                                color: 'red',\r\n                                                                height: '22px',\r\n                                                                margin: 'none',\r\n                                                                padding: '8px'\r\n                                                            }}\r\n                                                        >\r\n                                                            {isDocumentTypeError && documentTypeErrorMsg}\r\n                                                        </FormHelperText>\r\n                                                        <Typography>\r\n                                                             <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={handleCloseReligionDialog} variant=\"outlined\" style={{marginRight: '10px'}}>Cancel</Button>\r\n                                                        <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={saveDocumentType} variant=\"outlined\" style={{marginRight: '10px'}}>Save</Button>\r\n                                                        </Typography>\r\n                                                       \r\n                                                    </Box>\r\n                                                </BootstrapDialog>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                                </div>\r\n                            </Card>\r\n                        </>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            {/* <Footer /> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DocumentType;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddTwoTone');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableUtilityClass(slot) {\n  return generateUtilityClass('MuiTable', slot);\n}\nconst tableClasses = generateUtilityClasses('MuiTable', ['root', 'stickyHeader']);\nexport default tableClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport TableContext from './TableContext';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableUtilityClass } from './tableClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', stickyHeader && 'stickyHeader']\n  };\n  return composeClasses(slots, getTableUtilityClass, classes);\n};\nconst TableRoot = styled('table', {\n  name: 'MuiTable',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'table',\n  width: '100%',\n  borderCollapse: 'collapse',\n  borderSpacing: 0,\n  '& caption': _extends({}, theme.typography.body2, {\n    padding: theme.spacing(2),\n    color: (theme.vars || theme).palette.text.secondary,\n    textAlign: 'left',\n    captionSide: 'bottom'\n  })\n}, ownerState.stickyHeader && {\n  borderCollapse: 'separate'\n}));\nconst defaultComponent = 'table';\nconst Table = /*#__PURE__*/React.forwardRef(function Table(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTable'\n  });\n  const {\n      className,\n      component = defaultComponent,\n      padding = 'normal',\n      size = 'medium',\n      stickyHeader = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    padding,\n    size,\n    stickyHeader\n  });\n  const classes = useUtilityClasses(ownerState);\n  const table = React.useMemo(() => ({\n    padding,\n    size,\n    stickyHeader\n  }), [padding, size, stickyHeader]);\n  return /*#__PURE__*/_jsx(TableContext.Provider, {\n    value: table,\n    children: /*#__PURE__*/_jsx(TableRoot, _extends({\n      as: component,\n      role: component === defaultComponent ? null : 'table',\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   * @default 'normal'\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Allows TableCells to inherit size of the Table.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE11.\n   * @default false\n   */\n  stickyHeader: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Table;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","BootstrapDialog","Dialog","padding","height","BootstrapDialogTitle","props","onClose","other","_jsxs","DialogTitle","sx","m","p","fontSize","fontWeight","IconButton","onClick","position","right","top","color","palette","grey","CloseIcon","initialState","id","name","isRequired","page","setPage","useState","limit","setLimit","row","setRow","documentTypes","setDocumentTypes","React","v1","setV1","isOpen","setIsOpen","isloading","setIsLoading","ischeck","setIsCheck","isDocumentTypeError","setIsDocumentTypeErrorError","documentTypeErrorMsg","setDocumentTypeErrorMsg","search","setSearch","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","navigate","useNavigate","isNameError","setNameError","NameErrorMsg","setNameErrorMsg","credentail","setCredentail","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","title","isAddPermission","loadData","async","getdata","reg","RegExp","handleCloseReligionDialog","handleClickisAdd","handleClose","startIndex","fetchRecord","token","refreshToken","obj","isActive","res","APIservice","httpPost","recordList","totalRecords","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","POSITION","TOP_RIGHT","useTheme","_Fragment","ToastContainer","style","left","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","HomeIcon","Typography","variant","Button","mt","xs","md","size","AddTwoToneIcon","FormControl","lg","sm","TextField","label","value","onChange","e","target","searchData","InputProps","startAdornment","InputAdornment","SearchIcon","direction","Card","Loader1","Divider","length","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","noWrap","marginBottom","align","TableBody","map","arr","index","hover","gutterBottom","textTransform","Tooltip","arrow","Switch","disabled","email","checked","handleSwitch","inputProps","background","colors","primary","lighter","main","handleClickisEdit","no","st","EditTwoToneIcon","TablePagination","component","count","onPageChange","handlePageChange","event","newPage","onRowsPerPageChange","parseInt","rowsPerPage","rowsPerPageOptions","Paper","textAlign","verticalAlign","boxShadow","paragraph","open","fullWidth","DialogContent","DialogContentText","letterSpacing","DialogActions","marginRight","PaperProps","dividers","autoFocus","margin","type","handleInputChange","test","validateName","required","FormHelperText","Checkbox","flag","preventDefault","validateForm","val","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","createSvgIcon","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","root","indeterminate","capitalize","_extends","vars","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","alpha","active","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useDefaultProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","clsx","getTableHeadUtilityClass","TableHeadRoot","tablelvl2","defaultComponent","Tablelvl2Context","Provider","as","role","getTableUtilityClass","TableRoot","width","borderCollapse","borderSpacing","typography","body2","captionSide","table","TableContext"],"sourceRoot":""}