{"version":3,"file":"static/js/6493.a84a6b70.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/profile/Profile.tsx","../node_modules/@mui/icons-material/LockReset.js","../node_modules/@mui/icons-material/NoEncryptionGmailerrorred.js","../node_modules/@mui/material/DialogContentText/dialogContentTextClasses.js","../node_modules/@mui/material/DialogContentText/DialogContentText.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from '../../components/PageTitleWrapper';\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Box,\r\n    Breadcrumbs,\r\n    Button,\r\n    Card,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormHelperText,\r\n    Stack,\r\n    TextField,\r\n    Typography,\r\n    useTheme,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormLabel,\r\n    RadioGroup,\r\n    Radio,\r\n    FormGroup\r\n} from '@mui/material';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport React, { useState, ChangeEvent, useEffect } from 'react';\r\nimport Loader1 from '../Loader';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../content/smallScreen.css';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { Col, Form, Row } from 'react-bootstrap';\r\n\r\nimport NoEncryptionGmailerrorredIcon from '@mui/icons-material/NoEncryptionGmailerrorred';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport { UserCredential } from 'src/models/userCredential';\r\nimport validator from 'validator';\r\nimport QRCode from 'react-qr-code';\r\nimport LockResetIcon from '@mui/icons-material/LockReset';\r\n\r\nconst styles = {\r\n    heading4: `text-base text-ct-blue-600 font-medium border-b mb-2`,\r\n    orderedList: `space-y-1 text-sm list-decimal`,\r\n};\r\n\r\n\r\nconst Profile = () => {\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n    const [isloading, setIsLoading] = useState(false);\r\n    const [userValue, setUserValue] = useState<UserCredential>()\r\n    const [image, setImage] = React.useState('');\r\n    const [isGenderError, setGenderError] = useState(false);\r\n    const [GenderErrorMsg, setGenderErrorMsg] = useState('');\r\n    const [isUserError, setUserError] = useState(false);\r\n    const [UserErrorMsg, setUserErrorMsg] = useState('');\r\n    const [ischeck, setIsCheck] = useState(false);\r\n\r\n    const [qrcodeUrl, setqrCodeUrl] = useState(\"\");\r\n    const [base32, setBase32] = useState(\"\");\r\n    const [is2FAQRCode, setIs2FAQRCode] = useState(false);\r\n    let [credentail, setCredentail] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        let credentail = JSON.parse(localStorage.getItem(\"Credentials\")) as UserCredential;\r\n        setCredentail(credentail);\r\n        if (credentail) {\r\n            credentail.confirmEmail = credentail.email;\r\n            if (credentail.image) setImage(process.env.REACT_APP_IMAGE_URL + credentail.image);\r\n            setUserValue(credentail);\r\n        }\r\n    }, []);\r\n\r\n    const handleEnableTwoFactorAuth = async () => {\r\n        setIsCheck(true);\r\n    };\r\n\r\n    const handleCloseTwoFactorAuth = () => {\r\n        setIsCheck(false);\r\n    };\r\n\r\n    const onFileChange = (e: any) => {\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            setImage(reader.result.toString());\r\n        };\r\n        reader.readAsDataURL(file);\r\n    };\r\n\r\n    const onImageChange = (e: any) => {\r\n        const { name, value } = e.target;\r\n        setUserValue({\r\n            ...userValue,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const handlechange = (e: any) => {\r\n        const { name, value } = e.target;\r\n        setUserValue({\r\n            ...userValue,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const [isFirstNameError, setFirstNameError] = useState(false);\r\n    const [firstNameErrorMsg, setFirstNameErrorMsg] = useState('');\r\n    const validateFirstName = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        if (value) {\r\n            if (validator.isAlpha(value)) {\r\n                setFirstNameError(false);\r\n                setFirstNameErrorMsg('');\r\n            } else {\r\n                setFirstNameError(true);\r\n                setFirstNameErrorMsg('Only alphabet');\r\n            }\r\n        } else {\r\n            setFirstNameError(true);\r\n            setFirstNameErrorMsg('Firstname is required');\r\n        }\r\n    };\r\n\r\n    const [isMiddleNameError, setMiddleNameError] = useState(false);\r\n    const [middleNameErrorMsg, setMiddleNameErrorMsg] = useState('');\r\n    const validateMiddleName = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        if (value) {\r\n            if (validator.isAlpha(value)) {\r\n                setMiddleNameError(false);\r\n                setMiddleNameErrorMsg('');\r\n            } else {\r\n                setMiddleNameError(true);\r\n                setMiddleNameErrorMsg('Only alphabet');\r\n            }\r\n        } else {\r\n            setMiddleNameError(true);\r\n            setMiddleNameErrorMsg('Middlename is required');\r\n        }\r\n    };\r\n\r\n    const [isLastNameError, setLastNameError] = useState(false);\r\n    const [lastNameErrorMsg, setLastNameErrorMsg] = useState('');\r\n    const validateLastName = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        if (value) {\r\n            if (validator.isAlpha(value)) {\r\n                setLastNameError(false);\r\n                setLastNameErrorMsg('');\r\n            } else {\r\n                setLastNameError(true);\r\n                setLastNameErrorMsg(' Only alphabet');\r\n            }\r\n        } else {\r\n            setLastNameError(true);\r\n            setLastNameErrorMsg('Lastname is required');\r\n        }\r\n    };\r\n\r\n    const [isEmailValidateError, setIsEmailValidateError] = useState(false);\r\n    const [emailValidateErrorMsg, setEmailValidateErrorMsg] = useState('');\r\n    const validateEmail = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        if (value) {\r\n            if (validator.isEmail(value)) {\r\n                setIsEmailValidateError(false);\r\n                setEmailValidateErrorMsg('');\r\n            } else {\r\n                setIsEmailValidateError(true);\r\n                setEmailValidateErrorMsg('Invalid email');\r\n            }\r\n        } else {\r\n            setIsEmailValidateError(true);\r\n            setEmailValidateErrorMsg('Email is required');\r\n        }\r\n    };\r\n\r\n    const [isEmailError, setIsEmailError] = useState(false);\r\n    const [confirmEmailValidateErrorMsg, setConfirmEmailValidateErrorMsg] = useState('');\r\n    const confirmEmailValidation = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        if (value) {\r\n            if (!(userValue?.email === value)) {\r\n                setIsEmailError(true);\r\n                setConfirmEmailValidateErrorMsg('Email and confirm email must matched');\r\n            } else {\r\n                setIsEmailError(false);\r\n                setConfirmEmailValidateErrorMsg('');\r\n            }\r\n        } else {\r\n            setIsEmailError(true);\r\n            setConfirmEmailValidateErrorMsg('Confirm email is required');\r\n        }\r\n    };\r\n\r\n    const phoneRegex = new RegExp(\r\n        '^[+]?[(]?[0-9]{3}[)]?[-s.]?[0-9]{3}[-s.]?[0-9]{4,6}$'\r\n    );\r\n    const [isPhoneValidateError, setIsPhoneValidateError] = useState(false);\r\n    const [phoneValidateErrorMsg, setPhoneValidateErrorMsg] = useState('');\r\n    const ValidatePhone = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        if (value) {\r\n            if (!phoneRegex.test(event.target.value)) {\r\n                setIsPhoneValidateError(true);\r\n                setPhoneValidateErrorMsg('Contact No must be 10 digit');\r\n            } else {\r\n                setIsPhoneValidateError(false);\r\n                setPhoneValidateErrorMsg('');\r\n            }\r\n        } else {\r\n            setIsPhoneValidateError(true);\r\n            setPhoneValidateErrorMsg('Contact No is required');\r\n        }\r\n    };\r\n\r\n    const validateGender = (event: ChangeEvent<HTMLInputElement>) => {\r\n        const { name, value } = event.target;\r\n        if (value) {\r\n            setGenderError(false);\r\n            setGenderErrorMsg('');\r\n        } else {\r\n            setGenderError(true);\r\n            setGenderErrorMsg('Gender is required');\r\n        }\r\n    };\r\n\r\n    const validateForm = (e: any) => {\r\n        e.preventDefault();\r\n        var flag = true;\r\n        if (!userValue?.firstName) {\r\n            setFirstNameError(true);\r\n            setFirstNameErrorMsg('Firstname is required');\r\n            flag = false;\r\n        } else {\r\n            if (validator.isAlpha(userValue?.firstName)) {\r\n                setFirstNameError(false);\r\n                setFirstNameErrorMsg('');\r\n            } else {\r\n                setFirstNameError(true);\r\n                setFirstNameErrorMsg('Only alphabet');\r\n                flag = false;\r\n            }\r\n        }\r\n        if (!userValue?.middleName) {\r\n            setMiddleNameError(true);\r\n            setMiddleNameErrorMsg('Middlename is required');\r\n            flag = false;\r\n        } else {\r\n            if (validator.isAlpha(userValue?.middleName)) {\r\n                setMiddleNameError(false);\r\n                setMiddleNameErrorMsg('');\r\n            } else {\r\n                setMiddleNameError(true);\r\n                setMiddleNameErrorMsg('Only alphabet');\r\n                flag = false;\r\n            }\r\n        }\r\n        if (!userValue?.lastName) {\r\n            setLastNameError(true);\r\n            setLastNameErrorMsg('Lastname is required');\r\n            flag = false;\r\n        } else {\r\n            if (validator.isAlpha(userValue?.lastName)) {\r\n                setLastNameError(false);\r\n                setLastNameErrorMsg('');\r\n            } else {\r\n                setLastNameError(true);\r\n                setLastNameErrorMsg(' Only alphabet');\r\n                flag = false;\r\n            }\r\n        }\r\n        if (!userValue?.email) {\r\n            setIsEmailValidateError(true);\r\n            setEmailValidateErrorMsg('Email is required');\r\n            flag = false;\r\n        } else {\r\n            if (validator.isEmail(userValue?.email)) {\r\n                setIsEmailValidateError(false);\r\n                setEmailValidateErrorMsg('');\r\n            } else {\r\n                setIsEmailValidateError(true);\r\n                setEmailValidateErrorMsg('Invalid email');\r\n                flag = false;\r\n            }\r\n        }\r\n        if (!userValue?.confirmEmail) {\r\n            setIsEmailError(true);\r\n            setConfirmEmailValidateErrorMsg('Confirm Email is required');\r\n            flag = false;\r\n        } else {\r\n            if (!(userValue?.email === userValue?.confirmEmail)) {\r\n                setIsEmailError(true);\r\n                setConfirmEmailValidateErrorMsg(\r\n                    'Email and confirm email must matched'\r\n                );\r\n                flag = false;\r\n            } else {\r\n                setIsEmailError(false);\r\n                setConfirmEmailValidateErrorMsg('');\r\n            }\r\n        }\r\n        if (!userValue?.contactNo) {\r\n            setIsPhoneValidateError(true);\r\n            setPhoneValidateErrorMsg('Contact No is required');\r\n            flag = false;\r\n        } else {\r\n            if (!phoneRegex.test(userValue?.contactNo)) {\r\n                setIsPhoneValidateError(true);\r\n                setPhoneValidateErrorMsg('Contact No must be 10 digit');\r\n                flag = false;\r\n            } else {\r\n                setIsPhoneValidateError(false);\r\n                setPhoneValidateErrorMsg('');\r\n            }\r\n        }\r\n        if (!userValue?.gender) {\r\n            setGenderError(true);\r\n            setGenderErrorMsg('Gender is required ');\r\n            flag = false;\r\n        } else {\r\n            setGenderError(false);\r\n            setGenderErrorMsg('');\r\n        }\r\n        return flag;\r\n    };\r\n\r\n    const saveUsers = async (e: any) => {\r\n        var flag = validateForm(e);\r\n        if (flag) {\r\n            try {\r\n                if (userValue?.id) {\r\n                    //Update\r\n                    const token = localStorage.getItem('SessionToken');\r\n                    const refreshToken = localStorage.getItem('RefreshToken');\r\n                    let val = {\r\n                        id: userValue?.id,\r\n                        image: image ? image : null,\r\n                        firstName: userValue?.firstName,\r\n                        middleName: userValue?.middleName,\r\n                        lastName: userValue?.lastName,\r\n                        email: userValue?.email,\r\n                        contactNo: userValue?.contactNo,\r\n                        gender: userValue?.gender\r\n                    };\r\n                    const res = await APIservice.httpPost(\r\n                        '/api/admin/users/updateUser',\r\n                        val,\r\n                        token,\r\n                        refreshToken\r\n                    );\r\n                    if (res && res.status == 200) {\r\n                        let credentail = userValue;\r\n                        localStorage.setItem(\"Credentials\", JSON.stringify(credentail));\r\n                    } else if (res.status == 401) {\r\n                        navigate('/admin');\r\n                        localStorage.clear();\r\n                    } else if (res.status == 203 || res.status == 400) {\r\n                        toast.error(res.message, {\r\n                            autoClose: 6000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: 'colored',\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n                    } else if (res.status == 500) {\r\n                        toast.error(res.message, {\r\n                            autoClose: 6000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: 'colored',\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n                    } else if (res.status == 300) {\r\n                        toast.error(res.message, {\r\n                            autoClose: 6000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: 'colored',\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n                    } else if (res.status == 404) {\r\n                        toast.error(res.message, {\r\n                            autoClose: 6000,\r\n                            hideProgressBar: true,\r\n                            closeOnClick: true,\r\n                            pauseOnHover: true,\r\n                            draggable: true,\r\n                            progress: undefined,\r\n                            theme: 'colored',\r\n                            position: toast.POSITION.TOP_RIGHT\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error: any) {\r\n                toast.error(error, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleUpdateAuthenticationStatus = async (e: any) => {\r\n        e.preventDefault();\r\n        try {\r\n            const token = localStorage.getItem('SessionToken');\r\n            const refreshToken = localStorage.getItem('RefreshToken');\r\n            const res = await APIservice.httpPost(\r\n                '/api/admin/users/updateAuthenticationStatus',\r\n                { \"isTwoFactorEnable\": !userValue.isTwoFactorEnable },\r\n                token,\r\n                refreshToken\r\n            );\r\n            if (res.status === 200) {\r\n                if (!userValue.isTwoFactorEnable) {\r\n                    setIs2FAQRCode(true);\r\n                    setqrCodeUrl(res.recordList[0].otpAuthUrl);\r\n                    setBase32(res.recordList[0].baseSecret);\r\n                }\r\n\r\n                let credentail = userValue;\r\n                credentail.isTwoFactorEnable = !userValue.isTwoFactorEnable\r\n                localStorage.setItem(\"Credentials\", JSON.stringify(credentail));\r\n                handleCloseTwoFactorAuth();\r\n\r\n            } else if (res && res.status === 401) {\r\n                navigate('/admin');\r\n            } else if (res.status == 500) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 400) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 300) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 404) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(error, {\r\n                autoClose: 6000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'colored',\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleCloseQRCode = (e: any) => {\r\n        setIs2FAQRCode(false);\r\n    }\r\n\r\n    const [errorArray, setErrorArray] = useState<boolean[]>([]);\r\n    const handleImageError = (ele: any, index: number) => {\r\n        setErrorArray((prevErrors) => {\r\n            const newErrors = [...prevErrors];\r\n            newErrors[index] = true;\r\n            return newErrors;\r\n        });\r\n    }\r\n\r\n    const handleResetTwoFactorAuth = async (e: any) => {\r\n        e.preventDefault();\r\n        try {\r\n            const token = localStorage.getItem('SessionToken');\r\n            const refreshToken = localStorage.getItem('RefreshToken');\r\n            const res = await APIservice.httpPost(\r\n                '/api/admin/users/resetAuthenticationOTP',\r\n                {},\r\n                token,\r\n                refreshToken\r\n            );\r\n            if (res.status === 200) {\r\n                //if (!userValue.isTwoFactorEnable) {\r\n                setIs2FAQRCode(true);\r\n                setqrCodeUrl(res.recordList[0].otpAuthUrl);\r\n                setBase32(res.recordList[0].baseSecret);\r\n                //}\r\n\r\n                // let credentail = userValue;\r\n                // credentail.isTwoFactorEnable = !userValue.isTwoFactorEnable\r\n                // localStorage.setItem(\"Credentials\", JSON.stringify(credentail));\r\n                handleCloseTwoFactorAuth();\r\n\r\n            } else if (res && res.status === 401) {\r\n                navigate('/admin');\r\n            } else if (res.status == 500) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 400) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 300) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 404) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(error, {\r\n                autoClose: 6000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'colored',\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer\r\n                style={{ top: '8.5%', right: '0%' }}\r\n                autoClose={6000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Helmet>\r\n                <title>Profile</title>\r\n            </Helmet>\r\n            <PageTitleWrapper>\r\n                <Box p={1}>\r\n                    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                                    <Link to=\"/admin\" style={{ display: 'flex', color: 'black' }}>\r\n                                        <HomeIcon />\r\n                                    </Link>\r\n                                    <Typography\r\n                                        variant=\"subtitle2\"\r\n                                        color=\"inherit\"\r\n                                        fontWeight=\"bold\"\r\n                                    >\r\n                                        Profile\r\n                                    </Typography>\r\n                                </Breadcrumbs>\r\n                            </Stack>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container spacing={1.5}>\r\n                                <Grid item>\r\n                                    {credentail?.email === \"demo@admin.com\" ? <></> : <>\r\n                                        {userValue?.isTwoFactorEnable ?\r\n                                            <Button\r\n                                                className=\"buttonLarge\"\r\n                                                sx={{\r\n                                                    mt: {\r\n                                                        xs: 0,\r\n                                                        md: 0,\r\n                                                        display: 'flex',\r\n                                                        alignItems: 'center',\r\n                                                        padding: '8.3px',\r\n                                                        top: '3px'\r\n                                                    }\r\n                                                }}\r\n                                                variant=\"contained\"\r\n                                                onClick={handleResetTwoFactorAuth}\r\n                                                size=\"small\"\r\n                                            ><LockResetIcon></LockResetIcon>Reset 2FA</Button>\r\n                                            : <></>\r\n                                        }\r\n                                        {userValue?.isTwoFactorEnable ?\r\n                                            <Button\r\n                                                className=\"button\"\r\n                                                sx={{\r\n                                                    mt: {\r\n                                                        xs: 0,\r\n                                                        md: 0,\r\n                                                        display: 'flex',\r\n                                                        alignItems: 'center',\r\n                                                        padding: '8.3px',\r\n                                                        top: '3px'\r\n                                                    }\r\n                                                }}\r\n                                                variant=\"contained\"\r\n                                                onClick={handleResetTwoFactorAuth}\r\n                                                size=\"small\"\r\n                                            ><LockResetIcon></LockResetIcon></Button>\r\n                                            : <></>\r\n                                        }\r\n                                    </>\r\n                                    }\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    {credentail?.email === \"demo@admin.com\" ? <></> : <>\r\n                                        <Button\r\n                                            className=\"buttonLarge\"\r\n                                            sx={{\r\n                                                mt: {\r\n                                                    xs: 0,\r\n                                                    md: 0,\r\n                                                    display: 'flex',\r\n                                                    alignItems: 'center',\r\n                                                    padding: '8.3px',\r\n                                                    top: '3px'\r\n                                                },\r\n                                                width: \"150px\"\r\n                                            }}\r\n                                            variant=\"contained\"\r\n                                            onClick={handleEnableTwoFactorAuth}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            {userValue?.isTwoFactorEnable ?\r\n                                                <>\r\n                                                    <NoEncryptionGmailerrorredIcon></NoEncryptionGmailerrorredIcon>Disabled 2FA\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    <LockIcon></LockIcon>Enable 2FA\r\n                                                </>\r\n                                            }\r\n                                        </Button>\r\n                                        <Button\r\n                                            className=\"button\"\r\n                                            sx={{\r\n                                                mt: {\r\n                                                    xs: 0,\r\n                                                    md: 0,\r\n                                                    display: 'flex',\r\n                                                    alignItems: 'center',\r\n                                                    padding: '8.3px',\r\n                                                    top: '3px'\r\n                                                }\r\n                                            }}\r\n                                            variant=\"contained\"\r\n                                            onClick={handleEnableTwoFactorAuth}\r\n                                            size=\"small\"\r\n                                        >\r\n                                            {userValue?.isTwoFactorEnable ?\r\n                                                <>\r\n                                                    <NoEncryptionGmailerrorredIcon></NoEncryptionGmailerrorredIcon>\r\n                                                </>\r\n                                                :\r\n                                                <>\r\n                                                    <LockIcon></LockIcon>\r\n                                                </>\r\n                                            }\r\n                                        </Button>\r\n                                    </>\r\n                                    }\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </PageTitleWrapper>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item xs={12}>\r\n                        <>\r\n                            <Card className=\"religioncard\">\r\n                                <div>\r\n                                    {isloading ? (\r\n                                        <Loader1 title=\"Loading...\" />\r\n                                    ) : (\r\n                                        <Box p={1}>\r\n                                            <Form style={{ height: 'calc(100vh - 300px)' }}>\r\n                                                <FormGroup\r\n                                                    style={{\r\n                                                        alignItems: 'center',\r\n                                                        marginBottom: '10px'\r\n                                                    }}\r\n                                                >\r\n                                                    <input\r\n                                                        style={{\r\n                                                            display: 'none'\r\n                                                        }}\r\n                                                        id=\"icon-button-file\"\r\n                                                        type=\"file\"\r\n                                                        accept=\"image/*\"\r\n                                                        name=\"image\"\r\n                                                        onChange={(e) => {\r\n                                                            onFileChange(e);\r\n                                                            onImageChange(e);\r\n                                                        }}\r\n                                                        className=\"upload-button\"\r\n                                                    />\r\n                                                    <label htmlFor=\"icon-button-file\">\r\n                                                        {image ? (\r\n                                                            <div>\r\n                                                                {errorArray[0] ? (\r\n                                                                    <img src=\"/userLogo.png\" alt=\"Default Image\" style={{\r\n                                                                        height: '100px',\r\n                                                                        width: '100px'\r\n                                                                        // borderRadius: '50%',\r\n                                                                    }} />\r\n                                                                ) : (\r\n                                                                    <img\r\n                                                                        src={image}\r\n                                                                        alt=\"userProfile\"\r\n                                                                        style={{\r\n                                                                            height: '100px',\r\n                                                                            width: '100px'\r\n                                                                            // borderRadius: '50%',\r\n                                                                        }}\r\n                                                                        onError={() => { handleImageError(image, 0); }}\r\n                                                                    />\r\n                                                                    //   <img src={process.env.REACT_APP_IMAGE_URL + ele.documentUrl} style={{ height: 'calc(100vh - 650px)', width: 'auto' }} onError={() => { handleImageError(ele, ind); ele.isError = true; }}></img>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        ) : (\r\n                                                            <img\r\n                                                                src=\"/userLogo.png\"\r\n                                                                alt=\"userProfile\"\r\n                                                                style={{\r\n                                                                    height: '100px',\r\n                                                                    width: '100px'\r\n                                                                    // borderRadius: '50%',\r\n                                                                }}\r\n                                                            />\r\n                                                        )}\r\n                                                    </label>\r\n                                                </FormGroup>\r\n                                                <Row>\r\n                                                    <Col sm>\r\n                                                        <TextField\r\n                                                            fullWidth\r\n                                                            margin=\"dense\"\r\n                                                            label=\"Firstname\"\r\n                                                            type=\"text\"\r\n                                                            variant=\"outlined\"\r\n                                                            name=\"firstName\"\r\n                                                            value={userValue?.firstName}\r\n                                                            onChange={(e: any) => {\r\n                                                                validateFirstName(e);\r\n                                                                handlechange(e);\r\n                                                            }}\r\n                                                            required={true}\r\n                                                        />\r\n                                                        <FormHelperText\r\n                                                            style={{ color: 'red', height: '22px' }}\r\n                                                        >\r\n                                                            {isFirstNameError && firstNameErrorMsg}\r\n                                                        </FormHelperText>\r\n                                                    </Col>\r\n                                                    <Col sm>\r\n                                                        <TextField\r\n                                                            fullWidth\r\n                                                            margin=\"dense\"\r\n                                                            label=\"Middlename\"\r\n                                                            type=\"text\"\r\n                                                            variant=\"outlined\"\r\n                                                            name=\"middleName\"\r\n                                                            value={userValue?.middleName}\r\n                                                            onChange={(e: any) => {\r\n                                                                validateMiddleName(e);\r\n                                                                handlechange(e);\r\n                                                            }}\r\n                                                            required={true}\r\n                                                        />\r\n                                                        <FormHelperText\r\n                                                            style={{ color: 'red', height: '22px' }}\r\n                                                        >\r\n                                                            {isMiddleNameError && middleNameErrorMsg}\r\n                                                        </FormHelperText>\r\n                                                    </Col>\r\n                                                    <Col sm>\r\n                                                        <TextField\r\n                                                            fullWidth\r\n                                                            margin=\"dense\"\r\n                                                            label=\"Lastname\"\r\n                                                            type=\"text\"\r\n                                                            variant=\"outlined\"\r\n                                                            name=\"lastName\"\r\n                                                            value={userValue?.lastName}\r\n                                                            onChange={(e: any) => {\r\n                                                                validateLastName(e);\r\n                                                                handlechange(e);\r\n                                                            }}\r\n                                                            required={true}\r\n                                                        />\r\n                                                        <FormHelperText\r\n                                                            style={{ color: 'red', height: '22px' }}\r\n                                                        >\r\n                                                            {isLastNameError && lastNameErrorMsg}\r\n                                                        </FormHelperText>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col xs={12} md={6}>\r\n                                                        <TextField\r\n                                                            fullWidth\r\n                                                            margin=\"dense\"\r\n                                                            label=\"Email\"\r\n                                                            type=\"text\"\r\n                                                            variant=\"outlined\"\r\n                                                            name=\"email\"\r\n                                                            value={userValue?.email}\r\n                                                            onChange={(e: any) => {\r\n                                                                validateEmail(e);\r\n                                                                handlechange(e);\r\n                                                            }}\r\n                                                            required={true}\r\n                                                        />\r\n                                                        <FormHelperText\r\n                                                            style={{ color: 'red', height: '22px' }}\r\n                                                        >\r\n                                                            {isEmailValidateError &&\r\n                                                                emailValidateErrorMsg}\r\n                                                        </FormHelperText>\r\n                                                    </Col>\r\n                                                    <Col xs={12} md={6}>\r\n                                                        <TextField\r\n                                                            fullWidth\r\n                                                            margin=\"dense\"\r\n                                                            label=\"Confirm Email\"\r\n                                                            type=\"text\"\r\n                                                            variant=\"outlined\"\r\n                                                            name=\"confirmEmail\"\r\n                                                            value={userValue?.confirmEmail}\r\n                                                            onChange={(e: any) => {\r\n                                                                confirmEmailValidation(e);\r\n                                                                handlechange(e);\r\n                                                            }}\r\n                                                            required={true}\r\n                                                        />\r\n                                                        <FormHelperText\r\n                                                            style={{ color: 'red', height: '22px' }}\r\n                                                        >\r\n                                                            {isEmailError &&\r\n                                                                confirmEmailValidateErrorMsg}\r\n                                                        </FormHelperText>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col xs={12} md={6}>\r\n                                                        <TextField\r\n                                                            fullWidth\r\n                                                            margin=\"dense\"\r\n                                                            id=\"name\"\r\n                                                            label=\"Contact No\"\r\n                                                            type=\"text\"\r\n                                                            variant=\"outlined\"\r\n                                                            name=\"contactNo\"\r\n                                                            value={userValue?.contactNo}\r\n                                                            onChange={(e: any) => {\r\n                                                                ValidatePhone(e);\r\n                                                                handlechange(e);\r\n                                                            }}\r\n                                                            required={true}\r\n                                                        />\r\n                                                        <FormHelperText\r\n                                                            style={{ color: 'red', height: '22px' }}\r\n                                                        >\r\n                                                            {isPhoneValidateError &&\r\n                                                                phoneValidateErrorMsg}\r\n                                                        </FormHelperText>\r\n                                                    </Col>\r\n                                                    <Col xs={12} md={6}>\r\n                                                        <FormControl style={{ verticalAlign: 'sub' }}>\r\n                                                            <FormLabel id=\"demo-radio-buttons-group-label\">\r\n                                                                Gender\r\n                                                            </FormLabel>\r\n                                                            <RadioGroup\r\n                                                                row\r\n                                                                aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                                                                name=\"radio-buttons-group\"\r\n                                                            >\r\n                                                                <FormControlLabel\r\n                                                                    name=\"gender\"\r\n                                                                    value=\"Female\"\r\n                                                                    checked={userValue?.gender === 'Female'}\r\n                                                                    onChange={(e: any) => {\r\n                                                                        validateGender(e);\r\n                                                                        handlechange(e);\r\n                                                                    }}\r\n                                                                    control={<Radio />}\r\n                                                                    label=\"Female\"\r\n                                                                />\r\n                                                                <FormControlLabel\r\n                                                                    name=\"gender\"\r\n                                                                    value=\"Male\"\r\n                                                                    checked={userValue?.gender === 'Male'}\r\n                                                                    onChange={(e: any) => {\r\n                                                                        validateGender(e);\r\n                                                                        handlechange(e);\r\n                                                                    }}\r\n                                                                    control={<Radio />}\r\n                                                                    label=\"Male\"\r\n                                                                />\r\n                                                            </RadioGroup>\r\n                                                            <FormHelperText\r\n                                                                style={{ color: 'red', height: '22px' }}\r\n                                                            >\r\n                                                                {isGenderError && GenderErrorMsg}\r\n                                                            </FormHelperText>\r\n                                                        </FormControl>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                            <Box\r\n                                                sx={{\r\n                                                    display: 'flex',\r\n                                                    justifyContent: 'space-between',\r\n                                                    p: '8px'\r\n                                                }}\r\n                                            >\r\n                                                <FormHelperText\r\n                                                    style={{\r\n                                                        color: 'red',\r\n                                                        height: '22px',\r\n                                                        margin: 'none',\r\n                                                        padding: '8px'\r\n                                                    }}\r\n                                                >\r\n                                                    {isUserError && UserErrorMsg}\r\n                                                </FormHelperText>\r\n                                                <Button disabled={credentail?.email === \"demo@admin.com\"} onClick={saveUsers}>Save</Button>\r\n                                            </Box>\r\n                                            <div>\r\n                                                <Dialog\r\n                                                    open={ischeck}\r\n                                                    onClose={handleCloseTwoFactorAuth}\r\n                                                    fullWidth\r\n                                                    maxWidth=\"xs\"\r\n                                                >\r\n                                                    <DialogTitle\r\n                                                        sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n                                                    >\r\n                                                        {userValue?.isTwoFactorEnable ? 'Inactive Two Factor Authentication' : 'Active Two Factor Authentication'}\r\n                                                    </DialogTitle>\r\n                                                    <DialogContent>\r\n                                                        <DialogContentText\r\n                                                            style={{ fontSize: '1rem', letterSpacing: '0.00938em' }}\r\n                                                        >\r\n                                                            {userValue?.isTwoFactorEnable\r\n                                                                ? 'Are you sure you want to Inactive Two Factor Authentication?'\r\n                                                                : 'Are you sure you want to Active Two Factor Authentication?'}\r\n                                                        </DialogContentText>\r\n                                                    </DialogContent>\r\n                                                    <DialogActions>\r\n                                                        <Button onClick={handleCloseTwoFactorAuth}>Cancel</Button>\r\n                                                        <Button onClick={handleUpdateAuthenticationStatus}>Yes</Button>\r\n                                                    </DialogActions>\r\n                                                </Dialog>\r\n                                            </div>\r\n                                            <div>\r\n                                                <Dialog\r\n                                                    open={is2FAQRCode}\r\n                                                    onClose={handleCloseQRCode}\r\n                                                    fullWidth\r\n                                                    maxWidth=\"xs\">\r\n                                                    <DialogTitle\r\n                                                        sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 'bolder' }}\r\n                                                    >\r\n                                                        Two-Factor Authentication\r\n                                                    </DialogTitle>\r\n                                                    <DialogContent>\r\n                                                        <h4 className={styles.heading4}>\r\n                                                            Configuring Google Authenticator or Authy\r\n                                                        </h4>\r\n                                                        <div className={styles.orderedList}>\r\n                                                            <li>\r\n                                                                Install Google Authenticator (IOS - Android) or Authy (IOS -\r\n                                                                Android).\r\n                                                            </li>\r\n                                                            <li>In the authenticator app, select \"+\" icon.</li>\r\n                                                            <li>\r\n                                                                Select \"Scan a barcode (or QR code)\" and use the phone's camera\r\n                                                                to scan this barcode.\r\n                                                            </li>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <h4 className={styles.heading4}>Scan QR Code</h4>\r\n                                                            <div className=\"flex justify-center\">\r\n                                                                <QRCode value={qrcodeUrl} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <h4 className={styles.heading4}>Or Enter Code Into Your App</h4>\r\n                                                            <p className=\"text-sm\">SecretKey: {base32} (Base32 encoded)</p>\r\n                                                        </div>\r\n                                                    </DialogContent>\r\n                                                    <DialogActions>\r\n                                                        <Button onClick={handleCloseQRCode}>Close</Button>\r\n                                                    </DialogActions>\r\n                                                </Dialog>\r\n                                            </div>\r\n                                        </Box>\r\n\r\n                                    )}\r\n                                </div>\r\n                            </Card>\r\n                        </>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9H1l4 4 4-4H6c0-3.86 3.14-7 7-7s7 3.14 7 7-3.14 7-7 7c-1.9 0-3.62-.76-4.88-1.99L6.7 18.42C8.32 20.01 10.55 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9zm2 8v-1c0-1.1-.9-2-2-2s-2 .9-2 2v1c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1zm-1 0h-2v-1c0-.55.45-1 1-1s1 .45 1 1v1z\"\n}), 'LockReset');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M8.9 6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2h-4.27L20 17.17V10c0-1.1-.9-2-2-2h-1V6c0-2.76-2.24-5-5-5-2.21 0-4.07 1.45-4.73 3.44L8.9 6.07V6zM2.1 2.1.69 3.51 5.3 8.13C4.55 8.42 4 9.15 4 10v10c0 1.1.9 2 2 2h12c.34 0 .65-.09.93-.24l1.56 1.56 1.41-1.41L2.1 2.1zM12 17c-1.1 0-2-.9-2-2 0-.59.27-1.12.68-1.49l2.81 2.81c-.37.41-.9.68-1.49.68z\"\n}), 'NoEncryptionGmailerrorred');\nexports.default = _default;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDialogContentTextUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContentText', slot);\n}\nconst dialogContentTextClasses = generateUtilityClasses('MuiDialogContentText', ['root']);\nexport default dialogContentTextClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Typography from '../Typography';\nimport { getDialogContentTextUtilityClass } from './dialogContentTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  const composedClasses = composeClasses(slots, getDialogContentTextUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst DialogContentTextRoot = styled(Typography, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiDialogContentText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogContentText'\n  });\n  const {\n      className\n    } = props,\n    ownerState = _objectWithoutPropertiesLoose(props, _excluded);\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentTextRoot, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"text.secondary\",\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, props, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContentText;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","styles","heading4","orderedList","Profile","navigate","useNavigate","isloading","setIsLoading","useTheme","useState","userValue","setUserValue","image","setImage","React","isGenderError","setGenderError","GenderErrorMsg","setGenderErrorMsg","isUserError","setUserError","UserErrorMsg","setUserErrorMsg","ischeck","setIsCheck","qrcodeUrl","setqrCodeUrl","base32","setBase32","is2FAQRCode","setIs2FAQRCode","credentail","setCredentail","useEffect","JSON","parse","localStorage","getItem","confirmEmail","email","process","REACT_APP_IMAGE_URL","handleEnableTwoFactorAuth","async","handleCloseTwoFactorAuth","handlechange","e","name","value","target","isFirstNameError","setFirstNameError","firstNameErrorMsg","setFirstNameErrorMsg","isMiddleNameError","setMiddleNameError","middleNameErrorMsg","setMiddleNameErrorMsg","isLastNameError","setLastNameError","lastNameErrorMsg","setLastNameErrorMsg","isEmailValidateError","setIsEmailValidateError","emailValidateErrorMsg","setEmailValidateErrorMsg","isEmailError","setIsEmailError","confirmEmailValidateErrorMsg","setConfirmEmailValidateErrorMsg","phoneRegex","RegExp","isPhoneValidateError","setIsPhoneValidateError","phoneValidateErrorMsg","setPhoneValidateErrorMsg","validateGender","event","handleCloseQRCode","errorArray","setErrorArray","handleResetTwoFactorAuth","preventDefault","token","refreshToken","res","APIservice","httpPost","status","recordList","otpAuthUrl","baseSecret","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","POSITION","TOP_RIGHT","console","log","_jsxs","ToastContainer","style","top","right","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","p","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","color","HomeIcon","Typography","variant","fontWeight","_Fragment","isTwoFactorEnable","Button","sx","mt","xs","md","padding","onClick","size","LockResetIcon","width","NoEncryptionGmailerrorredIcon","LockIcon","direction","Card","Loader1","Form","height","FormGroup","marginBottom","id","type","accept","onChange","file","files","reader","FileReader","onload","result","toString","readAsDataURL","onFileChange","onImageChange","htmlFor","src","alt","onError","handleImageError","index","prevErrors","newErrors","Row","Col","sm","TextField","fullWidth","margin","label","firstName","validator","validateFirstName","required","FormHelperText","middleName","validateMiddleName","lastName","validateLastName","validateEmail","confirmEmailValidation","contactNo","test","ValidatePhone","FormControl","verticalAlign","FormLabel","RadioGroup","row","FormControlLabel","checked","gender","control","Radio","disabled","flag","validateForm","val","setItem","stringify","clear","Dialog","open","onClose","DialogTitle","m","fontSize","DialogContent","DialogContentText","letterSpacing","DialogActions","QRCode","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getDialogContentTextUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogContentTextRoot","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","root","inProps","ref","useDefaultProps","ownerState","_objectWithoutPropertiesLoose","classes","composedClasses","composeClasses","_extends","useUtilityClasses","component","clsx"],"sourceRoot":""}