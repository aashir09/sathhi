{"version":3,"file":"static/js/9217.c21efaaf.chunk.js","mappings":"wKAIA,MAAMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAChBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAK,sBACEC,EAAMC,QAAQ,OAChC,IAmBD,EAZoDC,IAAmB,IAAlB,SAAEC,GAAUD,EAC/D,OACEE,EAAAA,EAAAA,KAACR,EAAS,CAACS,UAAU,uBAAsBF,UACzCC,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAACC,SAAS,KAAIJ,SAAEA,KAChB,C,2DCXhB,MAaA,EAbiBK,IACf,MAAM,MAAEC,GAAUD,EAClB,OAKEJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBF,UAChCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBACX,C,oWC0DcR,EAAAA,EAAAA,IAAOa,EAAAA,EAAPb,EAAeE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAM,CACnD,2BAA4B,CACxBY,QAASX,EAAMC,QAAQ,IAE3B,2BAA4B,CACxBU,QAASX,EAAMC,QAAQ,IAE3B,mBAAoB,CAChBW,OAAQ,SAEf,IAmCD,MA6fA,EA3e0BC,KACtB,MAAMC,GAAWC,EAAAA,EAAAA,OAEVC,EAAQC,KADDC,EAAAA,EAAAA,KACcC,EAAAA,UAAe,KACpCC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,GAE3C,IAAKC,EAAaC,GAAkBL,EAAAA,SAAoB,IACxD,MAAOM,EAAWC,GAAgBP,EAAAA,SAAoB,IAGtD,IAAKQ,EAAYC,IAAiBN,EAAAA,EAAAA,YAElC,MAAOO,EAAkBC,IAAuBR,EAAAA,EAAAA,WAAS,IAClDS,EAAmBC,IAAwBV,EAAAA,EAAAA,WAAS,IACpDW,EAAkBC,IAAuBZ,EAAAA,EAAAA,WAAS,IAClDa,EAAoBC,IAAyBd,EAAAA,EAAAA,WAAS,GAEvDe,GAAMC,EAAAA,EAAAA,MAEZC,EAAAA,EAAAA,YAAU,KACN,IAAIC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,gBAE3C,GADAhB,EAAcY,GACVA,EACA,GAAmB,GAAfA,EAAKK,OAAa,CAClB,IAAIC,EAAMN,EAAKO,gBAAgBC,WAAWC,GAAuB,gBAAZA,EAAExC,QACnDqC,GAAO,IACPhB,EAAoBU,EAAKO,gBAAgBD,GAAKjB,kBAC9CG,EAAqBQ,EAAKO,gBAAgBD,GAAKI,iBAC/ChB,EAAoBM,EAAKO,gBAAgBD,GAAKb,kBAC9CG,EAAsBI,EAAKO,gBAAgBD,GAAKX,oBAE5CK,EAAKO,gBAAgBD,GAAKjB,kBAC1BsB,IAEZ,MACIA,GAER,GAED,IAEH,MAAMA,EAAWC,gBACPC,GAAS,EAGbA,EAAUD,UAEZ,IAoBI/B,GAAa,GACb,MAAMiC,EAAQX,aAAaC,QAAQ,gBAC7BW,EAAeZ,aAAaC,QAAQ,gBAC1C,IAAIY,EAAM,CACNC,GAAIpB,EAAIoB,IAEZ,MAAMC,QAAYC,EAAAA,EAAWC,SACzB,qDACAJ,EACAF,EACAC,GAEJ/B,EAAekC,EAAIG,YACnBtC,EAAcmC,EAAIG,WACe,OAA7BtC,EAAY,GAAGuC,WAAmD,KAA7BvC,EAAY,GAAGuC,YACpDvC,EAAY,GAAGuC,UAAYvC,EAAY,GAAGuC,UAAUC,KAAK,OAE7DxC,EAAY,GAAGyC,aAAezC,EAAY,GAAGyC,aAAaC,QAAQ,KAAM,KACxEvC,EAAaH,EAAY,GAAG2C,aAMxBR,GAAqB,KAAdA,EAAIS,OACXlD,GAAU,GACW,KAAdyC,EAAIS,QACXrD,EAAS,UACT6B,aAAayB,UACQ,KAAdV,EAAIS,QAYU,KAAdT,EAAIS,QAYU,KAAdT,EAAIS,QAYU,KAAdT,EAAIS,UAnCXlD,GAAU,GACVoD,EAAAA,GAAMC,MAAMZ,EAAIa,QAAS,CACrBC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACV9E,MAAO,UACP+E,SAAUV,EAAAA,GAAMW,SAASC,aAuCjC5D,GAAa,EAEjB,CAAE,MAAOiD,GACLjD,GAAa,GACbJ,GAAU,GACVoD,EAAAA,GAAMC,MAAMA,EAAO,CACfE,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACV9E,MAAO,UACP+E,SAAUV,EAAAA,GAAMW,SAASC,WAEjC,IAGGC,EAAOC,GAAYhE,EAAAA,SAAe,KAQzC,OACIiE,EAAAA,EAAAA,MAAA,OAAAjF,SAAA,EACIC,EAAAA,EAAAA,KAACiF,EAAAA,GAAc,CACXC,MAAO,CAAEC,IAAK,OAAQC,MAAO,MAE7BhB,UAAW,IACXC,iBAAiB,EACjBgB,aAAa,EACbf,cAAY,EACZgB,KAAK,EACLC,kBAAgB,EAChBf,WAAS,EACTD,cAAY,KAEhBvE,EAAAA,EAAAA,KAACwF,EAAAA,GAAM,CAAAzF,UACHC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,qBAEXC,EAAAA,EAAAA,KAACyF,EAAAA,EAAgB,CAAA1F,UACbC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACgG,EAAG,EAAE3F,UACNC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACC,WAAS,EAACC,eAAe,gBAAgBC,WAAW,SAAQ/F,UAC9DC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAAAhG,UACNC,EAAAA,EAAAA,KAACgG,EAAAA,EAAK,CAACF,WAAW,OAAOD,eAAe,gBAAe9F,UACnDiF,EAAAA,EAAAA,MAACiB,EAAAA,EAAW,CAAC,aAAW,aAAYlG,SAAA,EAChCC,EAAAA,EAAAA,KAACkG,EAAAA,GAAI,CAACC,GAAG,SAASjB,MAAO,CAAEkB,QAAS,OAAQC,MAAO,SAAUtG,UACzDC,EAAAA,EAAAA,KAACsG,EAAAA,EAAQ,OAEbtG,EAAAA,EAAAA,KAACkG,EAAAA,GAAI,CACDC,GAAG,8BACHjB,MAAO,CACHkB,QAAS,OACTC,MAAO,QACPE,eAAgB,QAClBxG,SACL,0BAGDC,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CACPC,QAAQ,YACRJ,MAAM,UACNK,WAAW,OAAM3G,SAEhBsB,kBAS7BrB,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAACC,SAAS,KAAIJ,UACpBC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CACDC,WAAS,EACTe,UAAU,MACVd,eAAe,SACfC,WAAW,UACXjG,QAAS,EAAEE,UAEXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAG7G,UAEdC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAI,CAAC5G,UAAU,eAAeiF,MAAO,CAAE1E,OAAQ,uBAAwBT,UACpEiF,EAAAA,EAAAA,MAAC8B,EAAAA,GAAU,CAAChC,MAAOA,EAAM/E,SAAA,EACrBC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CACAqH,GAAI,CACAC,aAAc,EACdC,YAAa,UACb1G,QAAS,OACT2G,YAAa,OACbC,UAAW,QACbpH,UAEFC,EAAAA,EAAAA,KAACoH,EAAAA,EAAO,CACJC,SA9EfC,CAACC,EAA6BC,KAC/CzC,EAASyC,EAAS,EA8Ec,aAAW,gCACXf,QAAQ,aAEZ1G,UAEIC,EAAAA,EAAAA,KAACyH,EAAAA,EAAG,CAACC,MAAM,SAAS5C,MAAM,WAIlC9E,EAAAA,EAAAA,KAAC2H,EAAAA,EAAQ,CAAC7C,MAAM,IAAG/E,SACdiB,GACGhB,EAAAA,EAAAA,KAAC4H,EAAAA,EAAO,CAACvH,MAAM,gBAEfL,EAAAA,EAAAA,KAAA6H,EAAAA,SAAA,CAAA9H,UACIC,EAAAA,EAAAA,KAAC8H,EAAAA,EAAc,CAAC5C,MAAO,CAAE1E,OAAQ,uBAAyBT,SACrDoB,EAAY4G,KAAI,CAACC,EAAYC,KAC1BjD,EAAAA,EAAAA,MAAA,OAAAjF,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAIkF,MAAO,CAAE3E,QAAS,mBAAoBmG,WAAW,MAAMwB,SAAS,QAASnI,SAAEiI,EAAMlE,eACrF9D,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACC,WAAS,EAAA7F,UACXiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,GAAIC,GAAI,GAAGrI,SAAA,EAE9BC,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAAC6B,cAAY,EAAC5B,QAAQ,KAAI1G,UACjCiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAAA7F,SAAA,EACXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BiF,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAAC0G,QAAQ,OAAON,WAAW,aAAY/F,SAAA,EACvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,SAAS,UAGpBC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAAK,SACCiI,EAAMM,KAAON,EAAMM,KAAO,eAM3CtI,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAAC6B,cAAY,EAAC5B,QAAQ,KAAI1G,UACjCiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAAA7F,SAAA,EACXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BiF,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAAC0G,QAAQ,OAAON,WAAW,aAAY/F,SAAA,EACvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iBAAiB,UAG5BC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAAK,SACCiI,EAAMlE,YAAckE,EAAMlE,YAAc,eAKzD9D,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAAC6B,cAAY,EAAC5B,QAAQ,KAAI1G,UACjCiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAAA7F,SAAA,EACXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BiF,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAAC0G,QAAQ,OAAON,WAAW,aAAY/F,SAAA,CACtC,KACDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iBAAiB,UAG5BC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BiF,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAAAK,SAAA,CACC,IACAiI,EAAMO,gBAAkBP,EAAMO,gBAAkB,gBAKjEvI,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAAC6B,cAAY,EAAC5B,QAAQ,KAAI1G,UACjCiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAAA7F,SAAA,EACXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAC0G,QAAQ,OAAON,WAAW,aAAY/F,UACvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sBAGXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BiF,EAAAA,EAAAA,MAACtF,EAAAA,EAAG,CAAAK,SAAA,CACC,IACAiI,EAAMQ,YAAcR,EAAMQ,YAAc,gBAKzDxI,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAAC6B,cAAY,EAAC5B,QAAQ,KAAI1G,UACjCiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAAA7F,SAAA,EACXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAC0G,QAAQ,OAAON,WAAW,aAAY/F,UACvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oBAGXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAAK,SACCiI,EAAMS,cAAgBT,EAAMS,cAAgB,eAK7DzI,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAAC6B,cAAY,EAAC5B,QAAQ,KAAI1G,UACjCiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAAA7F,SAAA,EACXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAC0G,QAAQ,OAAON,WAAW,aAAY/F,UACvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iBAGXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAAK,SACCiI,EAAMU,0BAA4BV,EAAMU,0BAA4B,eAKrF1I,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAAC6B,cAAY,EAAC5B,QAAQ,KAAI1G,UACjCiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAAA7F,SAAA,EACXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAC0G,QAAQ,OAAON,WAAW,aAAY/F,UACvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uBAGXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAAK,SACCiI,EAAMpE,aAAeoE,EAAMpE,aAAe,eAK3D5D,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAAC6B,cAAY,EAAC5B,QAAQ,KAAI1G,UACjCiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAAA7F,SAAA,EACXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAC0G,QAAQ,OAAON,WAAW,aAAY/F,UACvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oBAGXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAAK,SACCiI,EAAMtE,UAAYsE,EAAMtE,UAAY,eAKrD1D,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAAC6B,cAAY,EAAC5B,QAAQ,KAAI1G,UACjCiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAAA7F,SAAA,EACXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAC0G,QAAQ,OAAON,WAAW,aAAY/F,UACvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,qBAGXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAAK,SACsB,GAApBiI,EAAMW,WAAmB,MAAQ,eAKnD3I,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAAC6B,cAAY,EAAC5B,QAAQ,KAAI1G,UACjCiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAAA7F,SAAA,EACXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAC0G,QAAQ,OAAON,WAAW,aAAY/F,UACvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yBAGXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAAK,SACyB,GAAvBiI,EAAMY,cAAsB,MAAQ,eAKtD5I,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAAC6B,cAAY,EAAC5B,QAAQ,KAAI1G,UACjCiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAAA7F,SAAA,EACXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAC0G,QAAQ,OAAON,WAAW,aAAY/F,UACvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mCAGXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAAK,SACkC,GAAhCiI,EAAMa,uBAA+B,MAAQ,eAK/D7I,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAAC6B,cAAY,EAAC5B,QAAQ,KAAI1G,UACjCiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAAA7F,SAAA,EACXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAC0G,QAAQ,OAAON,WAAW,aAAY/F,UACvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BAGXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAAK,SAC8B,GAA5BiI,EAAMc,mBAA2B,MAAQ,eAK3D9I,EAAAA,EAAAA,KAACwG,EAAAA,EAAU,CAAC6B,cAAY,EAAC5B,QAAQ,KAAI1G,UACjCiF,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAAA7F,SAAA,EACXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAC0G,QAAQ,OAAON,WAAW,aAAY/F,UACvCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yBAGXC,EAAAA,EAAAA,KAAC2F,EAAAA,GAAI,CAACI,MAAI,EAACa,GAAI,GAAIuB,GAAI,EAAGC,GAAI,EAAErI,UAC5BC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAAAK,SACyB,GAAvBiI,EAAMe,cAAsB,MAAQ,qBA1LxDd,wBAmOhD,C,0IC9mBP,SAASe,EAA8BC,GAC5C,OAAOC,EAAAA,EAAAA,IAAqB,oBAAqBD,EACnD,EAC8BE,EAAAA,EAAAA,GAAuB,oBAAqB,CAAC,S,eCD3E,MAAMC,EAAY,CAAC,YAAa,aAkB1BC,GAAqB5J,EAAAA,EAAAA,IAAO,MAAO,CACvC6I,KAAM,oBACNW,KAAM,OACNK,kBAAmBA,CAAClJ,EAAOmJ,IAAWA,EAAOC,MAHpB/J,CAIxB,CACDgK,MAAO,OACPtC,UAAW,SAkDb,EAhDoCpG,EAAAA,YAAiB,SAAwB2I,EAASC,GACpF,MAAMvJ,GAAQwJ,EAAAA,EAAAA,GAAgB,CAC5BxJ,MAAOsJ,EACPpB,KAAM,uBAEF,UACFrI,EAAS,UACT4J,EAAY,OACVzJ,EACJ0J,GAAQC,EAAAA,EAAAA,GAA8B3J,EAAOgJ,GACzCY,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAG7J,EAAO,CACrCyJ,cAEIK,EA9BkBF,KACxB,MAAM,QACJE,GACEF,EAIJ,OAAOG,EAAAA,EAAAA,GAHO,CACZX,KAAM,CAAC,SAEoBR,EAA+BkB,EAAQ,EAuBpDE,CAAkBJ,GAClC,OAAoBhK,EAAAA,EAAAA,KAAKqJ,GAAoBY,EAAAA,EAAAA,GAAS,CACpDN,IAAKA,EACLU,GAAIR,EACJ5J,WAAWqK,EAAAA,EAAAA,GAAKJ,EAAQV,KAAMvJ,GAC9B+J,WAAYA,GACXF,GACL,G,qECzCA,SAAeS,EAAAA,EAAAA,IAA4BvK,EAAAA,EAAAA,KAAK,OAAQ,CACtDwK,EAAG,uDACD,oB,sECFJ,SAAeD,EAAAA,EAAAA,IAA4BvK,EAAAA,EAAAA,KAAK,OAAQ,CACtDwK,EAAG,qDACD,qB","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/ManageCustomFields/view/CustomFieldDetail.tsx","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from '../../../components/PageTitleWrapper';\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Box,\r\n    Breadcrumbs,\r\n    Button,\r\n    Card,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Divider,\r\n    FormHelperText,\r\n    IconButton,\r\n    Stack,\r\n    Switch,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    TextField,\r\n    Tooltip,\r\n    Typography,\r\n    useTheme,\r\n    styled,\r\n    FormControl,\r\n    InputAdornment,\r\n    Paper,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Chip\r\n} from '@mui/material';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport React, { useState, ChangeEvent, useEffect } from 'react';\r\nimport Loader1 from '../.././Loader';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../../content/smallScreen.css';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { CardHeader, Col, FormGroup, Row } from 'react-bootstrap';\r\nimport ForwardToInboxIcon from '@mui/icons-material/ForwardToInbox';\r\n// import './../manageCustomFields.css'\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { object } from 'prop-types';\r\nimport './CustomFieldDetail.css';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport { Tab } from '@mui/material';\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250\r\n        }\r\n    }\r\n};\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n        padding: theme.spacing(2)\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1)\r\n    },\r\n    '& .MuiPaper-root': {\r\n        height: '700px'\r\n    },\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n    id: string;\r\n    children?: React.ReactNode;\r\n    onClose: () => void;\r\n}\r\n\r\nfunction BootstrapDialogTitle(props: DialogTitleProps) {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle\r\n            sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n            {...other}\r\n        >\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 13,\r\n                        top: 13,\r\n                        color: (theme) => theme.palette.grey[500]\r\n                    }}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </DialogTitle>\r\n    );\r\n}\r\n\r\nconst initialState = {\r\n    id: 0,\r\n    name: '',\r\n    displayName: '',\r\n    mappedFieldName: '',\r\n    description: null,\r\n    valueTypeId: 0,\r\n    isRequired: false,\r\n    allowInSearch: false,\r\n    allowInFilter: false,\r\n    allowIncompleteProfile: false,\r\n    allowInPreferences: false,\r\n    defaultValue: null,\r\n    valueList: [],\r\n    textLength: null,\r\n    completeprofilesectioname: null\r\n};\r\n\r\nconst CustomFieldDetail = () => {\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n    const [isloading, setIsLoading] = useState(false);\r\n    // const [customNotifications, setCustomNotifications] = React.useState<any[]>([]);\r\n    let [customField, setCustomField] = React.useState<any>([]);\r\n    const [fieldName, setFieldName] = React.useState<any>('');\r\n\r\n\r\n    let [credentail, setCredentail] = useState<any>();\r\n\r\n    const [isReadPermission, setIsReadPermission] = useState(true);\r\n    const [isWritePermission, setIsWritePermission] = useState(true);\r\n    const [isEditPermission, setIsEditPermission] = useState(true);\r\n    const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n\r\n    const vId = useParams();\r\n\r\n    useEffect(() => {\r\n        let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n        setCredentail(cred);\r\n        if (cred) {\r\n            if (cred.roleId != 1) {\r\n                let ind = cred.pagePermissions.findIndex((c: any) => c.title === \"Block Users\");\r\n                if (ind >= 0) {\r\n                    setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n                    setIsWritePermission(cred.pagePermissions[ind].isAddPermission)\r\n                    setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n                    setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n                    if (cred.pagePermissions[ind].isReadPermission)\r\n                        loadData();\r\n                }\r\n            } else {\r\n                loadData();\r\n            }\r\n        }\r\n\r\n    }, []);\r\n\r\n    const loadData = async () => {\r\n        await getdata();\r\n    }\r\n\r\n    const getdata = async () => {\r\n        debugger\r\n        try {\r\n            // if (search) {\r\n            //     const token = localStorage.getItem('SessionToken');\r\n            //     const refreshToken = localStorage.getItem('RefreshToken');\r\n\r\n            //     let obj = {\r\n            //       id: vId.id\r\n            //     };\r\n            //     const res = await APIservice.httpPost(\r\n            //         '/api/admin/manageCustomFields/getCustomfieldDetail',\r\n            //         obj,\r\n            //         token,\r\n            //         refreshToken\r\n            //     );\r\n            //     setCustomFieldDeatil(res.recordList);\r\n            //     setRow(res.totalRecords);\r\n            //     for (let i = 0; i < customFieldDetail.length; i++) {\r\n            //         customFieldDetail[i].valueList = customFieldDetail[i].valueList.join(', ')\r\n            //     }\r\n            // } else {\r\n            setIsLoading(true);\r\n            const token = localStorage.getItem('SessionToken');\r\n            const refreshToken = localStorage.getItem('RefreshToken');\r\n            let obj = {\r\n                id: vId.id\r\n            };\r\n            const res = await APIservice.httpPost(\r\n                '/api/admin/manageCustomFields/getCustomfieldDetail',\r\n                obj,\r\n                token,\r\n                refreshToken\r\n            );\r\n            setCustomField(res.recordList);\r\n            customField = res.recordList;\r\n            if (customField[0].valueList !== null && customField[0].valueList !== '') {\r\n                customField[0].valueList = customField[0].valueList.join(', ')\r\n            }\r\n            customField[0].defaultValue = customField[0].defaultValue.replace(/;/g, ',');\r\n            setFieldName(customField[0].displayName)\r\n\r\n            // for (let i = 0; i < customFieldDetail.length; i++) {\r\n            //     customFieldDetail[i].valueList = customFieldDetail[i].valueList.join(', ')\r\n            // }\r\n\r\n            if (res && res.status == 200) {\r\n                setIsOpen(false);\r\n            } else if (res.status == 401) {\r\n                navigate('/admin');\r\n                localStorage.clear();\r\n            } else if (res.status == 500) {\r\n                setIsOpen(false);\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 300) {\r\n                setIsOpen(false);\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 400) {\r\n                setIsOpen(false);\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 404) {\r\n                setIsOpen(false);\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n            setIsLoading(false);\r\n            // }\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n            setIsOpen(false);\r\n            toast.error(error, {\r\n                autoClose: 6000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'colored',\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (event: React.SyntheticEvent, newValue: string) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer\r\n                style={{ top: '8.5%', right: '0%' }}\r\n                // position=\"top-right\"\r\n                autoClose={6000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Helmet>\r\n                <title>Custom Fields</title>\r\n            </Helmet>\r\n            <PageTitleWrapper>\r\n                <Box p={1}>\r\n                    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                                    <Link to=\"/admin\" style={{ display: 'flex', color: 'black' }}>\r\n                                        <HomeIcon />\r\n                                    </Link>\r\n                                    <Link\r\n                                        to=\"/admin/manage-custom-fields\"\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            color: 'black',\r\n                                            textDecoration: 'none'\r\n                                        }}\r\n                                    >\r\n                                        Manage Custom Fields\r\n                                    </Link>\r\n                                    <Typography\r\n                                        variant=\"subtitle2\"\r\n                                        color=\"inherit\"\r\n                                        fontWeight=\"bold\"\r\n                                    >\r\n                                        {fieldName}\r\n                                    </Typography>\r\n                                </Breadcrumbs>\r\n                            </Stack>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Box>\r\n            </PageTitleWrapper>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item xs={12}>\r\n\r\n                        <Card className=\"religioncard\" style={{ height: 'calc(100vh - 228px)' }}>\r\n                            <TabContext value={value}>\r\n                                <Box\r\n                                    sx={{\r\n                                        borderBottom: 1,\r\n                                        borderColor: 'divider',\r\n                                        padding: '16px',\r\n                                        paddingLeft: '16px',\r\n                                        overflowX: 'auto'\r\n                                    }}\r\n                                >\r\n                                    <TabList\r\n                                        onChange={handleChange}\r\n                                        aria-label=\"scrollable force tabs example\"\r\n                                        variant=\"scrollable\"\r\n                                    //  scrollButtons\r\n                                    // allowScrollButtonsMobile\r\n                                    >\r\n                                        <Tab label=\"Detail\" value=\"1\" />\r\n\r\n                                    </TabList>\r\n                                </Box>\r\n                                <TabPanel value='1'>\r\n                                    {isloading ? (\r\n                                        <Loader1 title=\"Loading...\" />\r\n                                    ) : (\r\n                                        <>\r\n                                            <TableContainer style={{ height: 'calc(100vh - 353px)', }}>\r\n                                                {customField.map((field: any, index: any) => (\r\n                                                    <div key={index}>\r\n                                                        <h3 style={{ padding: '0px 0px 16px 0px', fontWeight:'600',fontSize:'24px' }}>{field.displayName}</h3>\r\n                                                        <Grid container>\r\n                                                            <Grid item xs={12} sm={12} md={12}>\r\n\r\n                                                                <Typography gutterBottom variant=\"h6\">\r\n                                                                    <Grid container>\r\n                                                                        <Grid item xs={12} sm={3} md={3}>\r\n                                                                            <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                                                <b>Name</b>{' '}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                                            <Box>\r\n                                                                                {field.name ? field.name : '--'}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Typography>\r\n\r\n                                                                <Typography gutterBottom variant=\"h6\">\r\n                                                                    <Grid container>\r\n                                                                        <Grid item xs={12} sm={3} md={3}>\r\n                                                                            <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                                                <b>Diaply Name </b>{' '}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                                            <Box>\r\n                                                                                {field.displayName ? field.displayName : '--'}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Typography>\r\n                                                                <Typography gutterBottom variant=\"h6\">\r\n                                                                    <Grid container>\r\n                                                                        <Grid item xs={12} sm={3} md={3}>\r\n                                                                            <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                                                {' '}\r\n                                                                                <b>mapped Field</b>{' '}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                                            <Box>\r\n                                                                                {' '}\r\n                                                                                {field.mappedFieldName ? field.mappedFieldName : '--'}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Typography>\r\n                                                                <Typography gutterBottom variant=\"h6\">\r\n                                                                    <Grid container>\r\n                                                                        <Grid item xs={12} sm={3} md={3}>\r\n                                                                            <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                                                <b>Description </b>\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                                            <Box>\r\n                                                                                {' '}\r\n                                                                                {field.description ? field.description : '--'}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Typography>\r\n                                                                <Typography gutterBottom variant=\"h6\">\r\n                                                                    <Grid container>\r\n                                                                        <Grid item xs={12} sm={3} md={3}>\r\n                                                                            <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                                                <b>Value Type</b>\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                                            <Box>\r\n                                                                                {field.valueTypeName ? field.valueTypeName : '--'}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Typography>\r\n                                                                <Typography gutterBottom variant=\"h6\">\r\n                                                                    <Grid container>\r\n                                                                        <Grid item xs={12} sm={3} md={3}>\r\n                                                                            <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                                                <b>Section</b>\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                                            <Box>\r\n                                                                                {field.completeprofilesectioname ? field.completeprofilesectioname : '--'}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Typography>\r\n                                                                <Typography gutterBottom variant=\"h6\">\r\n                                                                    <Grid container>\r\n                                                                        <Grid item xs={12} sm={3} md={3}>\r\n                                                                            <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                                                <b>Default Value</b>\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                                            <Box>\r\n                                                                                {field.defaultValue ? field.defaultValue : '--'}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Typography>\r\n                                                                <Typography gutterBottom variant=\"h6\">\r\n                                                                    <Grid container>\r\n                                                                        <Grid item xs={12} sm={3} md={3}>\r\n                                                                            <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                                                <b>Value List</b>\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                                            <Box>\r\n                                                                                {field.valueList ? field.valueList : '--'}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Typography>\r\n                                                                <Typography gutterBottom variant=\"h6\" >\r\n                                                                    <Grid container>\r\n                                                                        <Grid item xs={12} sm={3} md={3}>\r\n                                                                            <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                                                <b>Is Required</b>\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                                            <Box>\r\n                                                                                {(field.isRequired == 1) ? 'Yes' : 'No'}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Typography>\r\n                                                                <Typography gutterBottom variant=\"h6\">\r\n                                                                    <Grid container>\r\n                                                                        <Grid item xs={12} sm={3} md={3}>\r\n                                                                            <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                                                <b>Allow in Filter</b>\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                                            <Box>\r\n                                                                                {(field.allowInFilter == 1) ? 'Yes' : 'No'}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Typography>\r\n                                                                <Typography gutterBottom variant=\"h6\">\r\n                                                                    <Grid container>\r\n                                                                        <Grid item xs={12} sm={3} md={3}>\r\n                                                                            <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                                                <b>Allow in Complete Profile</b>\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                                            <Box>\r\n                                                                                {(field.allowIncompleteProfile == 1) ? 'Yes' : 'No'}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Typography>\r\n                                                                <Typography gutterBottom variant=\"h6\">\r\n                                                                    <Grid container>\r\n                                                                        <Grid item xs={12} sm={3} md={3}>\r\n                                                                            <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                                                <b>Allow In Preferences</b>\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                                            <Box>\r\n                                                                                {(field.allowInPreferences == 1) ? 'Yes' : 'No'}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Typography>\r\n                                                                <Typography gutterBottom variant=\"h6\">\r\n                                                                    <Grid container>\r\n                                                                        <Grid item xs={12} sm={3} md={3}>\r\n                                                                            <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                                                <b>Allow In Search</b>\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                        <Grid item xs={12} sm={9} md={9}>\r\n                                                                            <Box>\r\n                                                                                {(field.allowInSearch == 1) ? 'Yes' : 'No'}\r\n                                                                            </Box>\r\n                                                                        </Grid>\r\n                                                                    </Grid>\r\n                                                                </Typography>\r\n\r\n                                                            </Grid>\r\n                                                            {/* <Grid item xs={12} sm={6} md={6}>\r\n                                                    <Box style={{ padding: '16px' }}>\r\n                                                       \r\n                                                    </Box>\r\n                                                </Grid> */}\r\n                                                        </Grid>\r\n\r\n                                                        {/* <Grid item xs={12} sm={6} md={6}>\r\n                                                <Box style={{ padding: '16px' }}>\r\n                                                    <Typography gutterBottom variant=\"h6\">\r\n                                                        <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                                            <b>User Wallet Amount </b>\r\n                                                            <Box sx={{ pl: 2.2 }}>\r\n                                                                ₹ {user.userWalletAmount\r\n                                                                    ? user.userWalletAmount\r\n                                                                    : '0.00'}\r\n                                                            </Box>\r\n                                                        </Box>\r\n                                                    </Typography>\r\n                                                </Box>\r\n                                            </Grid> */}\r\n\r\n                                                    </div>\r\n                                                ))}\r\n                                            </TableContainer>\r\n                                        </>\r\n                                    )}\r\n                                </TabPanel>\r\n                            </TabContext>\r\n                        </Card>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomFieldDetail;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","Dialog","padding","height","CustomFieldDetail","navigate","useNavigate","isOpen","setIsOpen","useTheme","React","isloading","setIsLoading","useState","customField","setCustomField","fieldName","setFieldName","credentail","setCredentail","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","vId","useParams","useEffect","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","isAddPermission","loadData","async","getdata","token","refreshToken","obj","id","res","APIservice","httpPost","recordList","valueList","join","defaultValue","replace","displayName","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","POSITION","TOP_RIGHT","value","setValue","_jsxs","ToastContainer","style","top","right","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","p","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","color","HomeIcon","textDecoration","Typography","variant","fontWeight","direction","xs","Card","TabContext","sx","borderBottom","borderColor","paddingLeft","overflowX","TabList","onChange","handleChange","event","newValue","Tab","label","TabPanel","Loader1","_Fragment","TableContainer","map","field","index","fontSize","sm","md","gutterBottom","name","mappedFieldName","description","valueTypeName","completeprofilesectioname","isRequired","allowInFilter","allowIncompleteProfile","allowInPreferences","allowInSearch","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableContainerRoot","overridesResolver","styles","root","width","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx","createSvgIcon","d"],"sourceRoot":""}