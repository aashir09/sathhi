{"version":3,"file":"static/js/5678.48aa0361.chunk.js","mappings":"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","sources":["components/Label/index.tsx","components/PageTitleWrapper/index.tsx","components/Footer/index.tsx","content/dashboards/loaderDashboard.tsx","content/dashboards/loaderCardDashboard.tsx","content/dashboards/loaderGraphDashboard.tsx","content/dashboards/Crypto/index.tsx"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { styled } from '@mui/material/styles';\r\n\r\ninterface LabelProps {\r\n  className?: string;\r\n  color?:\r\n    | 'primary'\r\n    | 'black'\r\n    | 'secondary'\r\n    | 'error'\r\n    | 'warning'\r\n    | 'success'\r\n    | 'info';\r\n  children?: ReactNode;\r\n}\r\n\r\nconst LabelWrapper = styled('span')(\r\n  ({ theme }) => `\r\n      background-color: ${theme.colors.alpha.black[5]};\r\n      padding: ${theme.spacing(0.5, 1)};\r\n      font-size: ${theme.typography.pxToRem(13)};\r\n      border-radius: ${theme.general.borderRadius};\r\n      display: inline-flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      max-height: ${theme.spacing(3)};\r\n      \r\n      &.MuiLabel {\r\n        &-primary {\r\n          background-color: ${theme.colors.primary.lighter};\r\n          color: ${theme.palette.primary.main}\r\n        }\r\n\r\n        &-black {\r\n          background-color: ${theme.colors.alpha.black[100]};\r\n          color: ${theme.colors.alpha.white[100]};\r\n        }\r\n        \r\n        &-secondary {\r\n          background-color: ${theme.colors.secondary.lighter};\r\n          color: ${theme.palette.secondary.main}\r\n        }\r\n        \r\n        &-success {\r\n          background-color: ${theme.colors.success.lighter};\r\n          color: ${theme.palette.success.main}\r\n        }\r\n        \r\n        &-warning {\r\n          background-color: ${theme.colors.warning.lighter};\r\n          color: ${theme.palette.warning.main}\r\n        }\r\n              \r\n        &-error {\r\n          background-color: ${theme.colors.error.lighter};\r\n          color: ${theme.palette.error.main}\r\n        }\r\n        \r\n        &-info {\r\n          background-color: ${theme.colors.info.lighter};\r\n          color: ${theme.palette.info.main}\r\n        }\r\n      }\r\n`\r\n);\r\n\r\nconst Label: FC<LabelProps> = ({\r\n  className,\r\n  color = 'secondary',\r\n  children,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <LabelWrapper className={'MuiLabel-' + color} {...rest}>\r\n      {children}\r\n    </LabelWrapper>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'primary',\r\n    'black',\r\n    'secondary',\r\n    'error',\r\n    'warning',\r\n    'success',\r\n    'info'\r\n  ])\r\n};\r\n\r\nexport default Label;\r\n","import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import { Box, Container, Link, Typography, styled } from '@mui/material';\r\n\r\nconst FooterWrapper = styled(Container)(\r\n  ({ theme }) => `\r\n        margin-top: ${theme.spacing(4)};\r\n        margin-bottom: ${theme.spacing(4)}\r\n`\r\n);\r\n\r\nfunction Footer() {\r\n  return (\r\n    <FooterWrapper className=\"footer-wrapper\">\r\n      <Box\r\n        // pb={0}\r\n        display={{ xs: 'block', md: 'flex' }}\r\n        alignItems=\"center\"\r\n        textAlign={{ xs: 'center', md: 'left' }}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Box>\r\n          <Typography variant=\"subtitle1\"></Typography>\r\n        </Box>\r\n      </Box>\r\n    </FooterWrapper>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport './loaderDashboard.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst LoaderSmallCard = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"smallcard-container\">\r\n      <div className=\"loading-smallcard-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderSmallCard;\r\n","import React from 'react';\r\nimport './loaderDashboard.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst LoaderCard = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"card-container\">\r\n      <div className=\"loading-card-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderCard;\r\n","import React from 'react';\r\nimport './loaderDashboard.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst LoaderGraph = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"graph-container\">\r\n      <div className=\"loading-graph-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderGraph;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from './../../../components/PageTitleWrapper';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport {\r\n  alpha,\r\n  Avatar,\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Chip,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  Stack,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme\r\n} from '@mui/material';\r\nimport Footer from 'src/components/Footer';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Label from 'src/components/Label';\r\nimport LoaderSmallCard from '../loaderDashboard';\r\nimport LoaderCard from '../loaderCardDashboard';\r\nimport LoaderGraph from '../loaderGraphDashboard';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport Chart from 'react-apexcharts';\r\nimport type { ApexOptions } from 'apexcharts';\r\nimport { format } from 'date-fns';\r\nimport { DateRangePicker } from 'react-date-range';\r\nimport 'react-date-range/dist/styles.css';\r\nimport 'react-date-range/dist/theme/default.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './dashboard.css';\r\n\r\nconst AvatarWrapper = styled(Avatar)(\r\n  ({ theme }) => `\r\n    margin: ${theme.spacing(2, 0, 1, -0.5)};\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right: ${theme.spacing(1)};\r\n    padding: ${theme.spacing(0.5)};\r\n    border-radius: 60px;\r\n    height: ${theme.spacing(5.5)};\r\n    width: ${theme.spacing(5.5)};\r\n    background: ${\r\n      theme.palette.mode === 'dark'\r\n        ? theme.colors.alpha.trueWhite[30]\r\n        : alpha(theme.colors.alpha.black[100], 0.07)\r\n    };\r\n\r\n    img {\r\n      background: ${theme.colors.alpha.trueWhite[100]};\r\n      padding: ${theme.spacing(0.5)};\r\n      display: block;\r\n      border-radius: inherit;\r\n      height: ${theme.spacing(4.5)};\r\n      width: ${theme.spacing(4.5)};\r\n    }\r\n`\r\n);\r\n\r\nconst initialState = {\r\n  fromDate: null,\r\n  toDate: null\r\n};\r\n\r\nfunction Dashboard() {\r\n  const theme = useTheme();\r\n\r\n  const [user, setUser] = React.useState<any>([]);\r\n  const [blockUser, setBlockUser] = useState<any>([]);\r\n  const [userData, setUserData] = useState<any>([]);\r\n  const [send, setSend] = useState<any>([]);\r\n  const [accept, setAccept] = useState<any>([]);\r\n  const [reject, setReject] = useState<any>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [monthlyProposal, setMonthlyProposal] = React.useState<number>(0);\r\n  const [todayProposal, setTodayProposal] = React.useState<number>(0);\r\n  const [todayRegistration, setTodayRegistration] = React.useState<number>(0);\r\n  const [monthlyRegistration, setMonthlyRegistration] =\r\n    React.useState<number>(0);\r\n  const [userValue, setUserValue] = React.useState<any>(initialState);\r\n  const [chip, setChip] = useState<boolean>(false);\r\n  const [state, setState] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: 'selection'\r\n    }\r\n  ]);\r\n  const [month, setMonth] = useState<any>([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // window.onpopstate = () => {\r\n  //   navigate(1);\r\n  // }\r\n\r\n  useEffect(() => {\r\n    getdata();\r\n  }, []);\r\n\r\n  const dateData = localStorage.getItem('DateFormat');\r\n\r\n  const getdata = async () => {\r\n    debugger\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let from = userValue.fromDate ? userValue.fromDate : '';\r\n      let to = userValue.toDate ? userValue.toDate : '';\r\n      let obj = {\r\n        fromDate: from,\r\n        toDate: to\r\n      };\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/dashboard/getDashboardData',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setUser(res.recordList ? res.recordList[0].recentUserResult : []);\r\n      setMonthlyProposal(res.recordList ? res.recordList[0].monthlyProposal : 0);\r\n      setMonthlyRegistration(res.recordList ? res.recordList[0].monthlyRegistration : 0);\r\n      setTodayProposal(res.recordList ? res.recordList[0].todayProposal : 0);\r\n      setTodayRegistration(res.recordList ? res.recordList[0].todayRegistration : 0);\r\n      setUserData(res.recordList ?\r\n        res.recordList[0].monthlyRegUserCount.map((item: any) => item.count) : []\r\n      );\r\n      setMonth( res.recordList ? \r\n        res.recordList[0].monthlyRegUserCount.map((item: any) => item.month) : []\r\n      );\r\n      if (res && res.status == 200) {\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n      getPendingBlockUser();\r\n      getProposal();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getProposal = async () => {\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let from = userValue.fromDate ? userValue.fromDate : '';\r\n      let to = userValue.toDate ? userValue.toDate : '';\r\n      let obj = {\r\n        fromDate: from,\r\n        toDate: to\r\n      };\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/report/getReceiveProposalReqReport',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setAccept(res.recordList.map((item: any) => item.count));\r\n      const res1 = await APIservice.httpPost(\r\n        '/api/admin/report/getSendProposalReqReport',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setSend(res1.recordList.map((item: any) => item.count));\r\n      const res2 = await APIservice.httpPost(\r\n        '/api/admin/report/getRejectProposalReqReport',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setReject(res2.recordList.map((item: any) => item.count));\r\n    } catch (error) {\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const series = [\r\n    {\r\n      name: 'Newly Registered User',\r\n      data: userData\r\n    }\r\n  ];\r\n\r\n  const options: ApexOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    colors: [theme.colors.primary.main],\r\n    theme: {\r\n      mode: theme.palette.mode\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      colors: [theme.colors.primary.main],\r\n      width: 3\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n    xaxis: {\r\n      categories: month\r\n    }\r\n  };\r\n\r\n  const series1 = [\r\n    {\r\n      name: 'Proposal Accept',\r\n      data: accept\r\n    },\r\n    {\r\n      name: 'Proposal Reject',\r\n      data: reject\r\n    },\r\n    {\r\n      name: 'Proposal Send',\r\n      data: send\r\n    }\r\n  ];\r\n\r\n  const chartOptions: ApexOptions = {\r\n    chart: {\r\n      background: 'transparent',\r\n      toolbar: {\r\n        show: false\r\n      }\r\n    },\r\n    labels: ['Proposal Accept', 'Proposal Reject', 'Proposal Send'],\r\n    xaxis: {\r\n      categories: month\r\n    }\r\n  };\r\n\r\n  const getPendingBlockUser = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let from = userValue.fromDate ? userValue.fromDate : '';\r\n      let to = userValue.toDate ? userValue.toDate : '';\r\n      let obj = {\r\n        fromDate: from,\r\n        toDate: to,\r\n        status: 'pending'\r\n      };\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/userBlockRequest/getUserBlockRequest',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setBlockUser(res.recordList);\r\n      if (res && res.status == 200) {\r\n      } else if (res.status == 401) {\r\n        localStorage.clear();\r\n        navigate('/admin');\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleOpenRangePicker = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleCloseDailog = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleSelect = (ranges: any) => {\r\n    const { selection } = ranges;\r\n    setState([selection]);\r\n    userValue.fromDate = ranges.selection.startDate;\r\n    userValue.toDate = ranges.selection.endDate;\r\n  };\r\n\r\n  const save = () => {\r\n    setIsOpen(false);\r\n    if (userValue.fromDate && userValue.toDate) {\r\n      setChip(true);\r\n    }\r\n    getdata();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    if (userValue.fromDate && userValue.toDate) {\r\n      userValue.fromDate = null;\r\n      userValue.toDate = null;\r\n      setChip(false);\r\n    }\r\n    setState([\r\n      {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection'\r\n      }\r\n    ]);\r\n    getdata();\r\n  };\r\n\r\n  const handleClear = () => {\r\n    userValue.fromDate = null;\r\n    userValue.toDate = null;\r\n    setChip(false);\r\n    setIsOpen(false);\r\n    setState([\r\n      {\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection'\r\n      }\r\n    ]);\r\n    getdata();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        style={{ top: '15%', left: '82%' }}\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title> Dashboard</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box pt={1.4} pb={1.45} pl={1.9}>\r\n          <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n            {/* <Grid item> */}\r\n            {/* {userData.image ?\r\n        <Avatar\r\n          sx={{\r\n            mr: 2,\r\n            width: theme.spacing(8),\r\n            height: theme.spacing(8)\r\n          }}\r\n          variant=\"rounded\"\r\n          alt=\"profileImage\"\r\n          src={process.env.REACT_APP_IMAGE_URL + userData.image}\r\n        />: <Avatar\r\n        sx={{\r\n          mr: 2,\r\n          width: theme.spacing(8),\r\n          height: theme.spacing(8)\r\n        }}\r\n        variant=\"rounded\"\r\n        alt=\"profileImage\">{userData.firstName ? userData.firstName[0] : null}</Avatar>} */}\r\n            {/* </Grid> */}\r\n            {/* <Grid item>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          Welcome! {userData.firstName}  {userData.lastName}\r\n        </Typography> */}\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link to=\"/admin\" style={{ display: 'flex', color: 'black' }}>\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                    style={{ fontWeight: 'bold' }}\r\n                  >\r\n                    Dashboard\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n            <div>\r\n              {chip === true ? (\r\n                <>\r\n                  <Chip\r\n                    label={\r\n                      format(new Date(userValue.fromDate), dateData) +\r\n                      '-' +\r\n                      format(new Date(userValue.toDate), dateData)\r\n                    }\r\n                    onDelete={(e) => {\r\n                      handleDelete();\r\n                    }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n            <Grid item>\r\n              <Tooltip title=\"Select Date\" arrow>\r\n                <IconButton\r\n                  sx={{\r\n                    '&:hover': {\r\n                      background: theme.colors.primary.lighter\r\n                    },\r\n                    color: theme.palette.primary.main\r\n                  }}\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={handleOpenRangePicker}\r\n                >\r\n                  <FilterAltIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={10}\r\n        >\r\n          <Grid item lg={12} xs={12}>\r\n            <>\r\n              <Grid container spacing={3}>\r\n                <Grid xs={12} sm={6} md={3} item>\r\n                  <Card\r\n                    sx={{\r\n                      px: 1,\r\n                      height: '201.17px'\r\n                    }}\r\n                  >\r\n                    {isLoading ? (\r\n                      <LoaderSmallCard title=\"Loading...\" />\r\n                    ) : (\r\n                      <>\r\n                        <Link\r\n                          to=\"/admin/appuser\"\r\n                          style={{ textDecoration: 'none', color: '#223354' }}\r\n                        >\r\n                          <CardContent>\r\n                            <AvatarWrapper>\r\n                              <img\r\n                                alt=\"Today Register\"\r\n                                src=\"https://img.icons8.com/external-flat-geotatah/2x/external-register-training-management-system-flat-flat-geotatah.png\"\r\n                              />\r\n                            </AvatarWrapper>\r\n                            <Typography variant=\"h5\" noWrap>\r\n                              Today Register\r\n                            </Typography>\r\n                            <Box\r\n                              sx={{\r\n                                pt: 3\r\n                              }}\r\n                            >\r\n                              <Typography variant=\"h3\" gutterBottom noWrap>\r\n                                {todayRegistration}\r\n                              </Typography>\r\n                            </Box>\r\n                          </CardContent>\r\n                        </Link>\r\n                      </>\r\n                    )}\r\n                  </Card>\r\n                </Grid>\r\n                <Grid xs={12} sm={6} md={3} item>\r\n                  <Card\r\n                    sx={{\r\n                      px: 1,\r\n                      height: '201.17px'\r\n                    }}\r\n                  >\r\n                    {isLoading ? (\r\n                      <LoaderSmallCard title=\"Loading...\" />\r\n                    ) : (\r\n                      <>\r\n                        <Link\r\n                          to=\"/admin/appuser\"\r\n                          style={{ textDecoration: 'none', color: '#223354' }}\r\n                        >\r\n                          <CardContent>\r\n                            <AvatarWrapper>\r\n                              <img\r\n                                alt=\"Month Register\"\r\n                                src=\"https://cdn-icons-png.flaticon.com/512/9875/9875512.png\"\r\n                              />\r\n                            </AvatarWrapper>\r\n                            <Typography variant=\"h5\" noWrap>\r\n                              Monthly Register\r\n                            </Typography>\r\n                            <Box\r\n                              sx={{\r\n                                pt: 3\r\n                              }}\r\n                            >\r\n                              <Typography variant=\"h3\" gutterBottom noWrap>\r\n                                {monthlyRegistration}\r\n                              </Typography>\r\n                            </Box>\r\n                          </CardContent>\r\n                        </Link>\r\n                      </>\r\n                    )}\r\n                  </Card>\r\n                </Grid>\r\n                <Grid xs={12} sm={6} md={3} item>\r\n                  <Card\r\n                    sx={{\r\n                      px: 1,\r\n                      height: '201.17px'\r\n                    }}\r\n                  >\r\n                    {isLoading ? (\r\n                      <LoaderSmallCard title=\"Loading...\" />\r\n                    ) : (\r\n                      <>\r\n                        <Link\r\n                          to=\"/admin/requestSendReport\"\r\n                          style={{ textDecoration: 'none', color: '#223354' }}\r\n                        >\r\n                          <CardContent>\r\n                            <AvatarWrapper>\r\n                              <img\r\n                                alt=\"Today Proposal\"\r\n                                src=\"https://img.icons8.com/external-wanicon-flat-wanicon/2x/external-diamond-ring-gift-box-wanicon-flat-wanicon.png\"\r\n                              />\r\n                            </AvatarWrapper>\r\n                            <Typography variant=\"h5\" noWrap>\r\n                              Today Proposal\r\n                            </Typography>\r\n                            <Box\r\n                              sx={{\r\n                                pt: 3\r\n                              }}\r\n                            >\r\n                              <Typography variant=\"h3\" gutterBottom noWrap>\r\n                                {todayProposal}\r\n                              </Typography>\r\n                            </Box>\r\n                          </CardContent>\r\n                        </Link>\r\n                      </>\r\n                    )}\r\n                  </Card>\r\n                </Grid>\r\n                <Grid xs={12} sm={6} md={3} item>\r\n                  <Card\r\n                    sx={{\r\n                      px: 1,\r\n                      height: '201.17px'\r\n                    }}\r\n                  >\r\n                    {isLoading ? (\r\n                      <LoaderSmallCard title=\"Loading...\" />\r\n                    ) : (\r\n                      <>\r\n                        <Link\r\n                          to=\"/admin/requestSendReport\"\r\n                          style={{ textDecoration: 'none', color: '#223354' }}\r\n                        >\r\n                          <CardContent>\r\n                            <AvatarWrapper>\r\n                              <img\r\n                                alt=\"Today Proposal\"\r\n                                src=\"https://img.icons8.com/external-others-maxicons/2x/external-proposal-about-love-others-maxicons.png\"\r\n                              />\r\n                            </AvatarWrapper>\r\n                            <Typography variant=\"h5\" noWrap>\r\n                              Monthly Proposal\r\n                            </Typography>\r\n                            <Box\r\n                              sx={{\r\n                                pt: 3\r\n                              }}\r\n                            >\r\n                              <Typography variant=\"h3\" gutterBottom noWrap>\r\n                                {monthlyProposal}\r\n                              </Typography>\r\n                            </Box>\r\n                          </CardContent>\r\n                        </Link>\r\n                      </>\r\n                    )}\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n              <div style={{ marginTop: '27px' }}>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <Card style={{ height: '439.66px' }}>\r\n                      {isLoading ? (\r\n                        <LoaderGraph title=\"Loading...\" />\r\n                      ) : (\r\n                        <>\r\n                          <CardHeader\r\n                            title={\r\n                              <Link\r\n                                to=\"/admin/appuser\"\r\n                                style={{\r\n                                  textDecoration: 'none',\r\n                                  color: '#223354'\r\n                                }}\r\n                              >\r\n                                Newly Registered User{' '}\r\n                              </Link>\r\n                            }\r\n                            action={\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                size=\"small\"\r\n                                sx={{ margin: '0px 4px' }}\r\n                              >\r\n                                <Link\r\n                                  to=\"/admin/appuser\"\r\n                                  style={{\r\n                                    textDecoration: 'none',\r\n                                    color: 'white'\r\n                                  }}\r\n                                >\r\n                                  {' '}\r\n                                  View All{' '}\r\n                                </Link>\r\n                              </Button>\r\n                            }\r\n                          />\r\n                          <Chart options={options} type=\"bar\" series={series} />\r\n                        </>\r\n                      )}\r\n                    </Card>\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <Card style={{ height: '439.66px' }}>\r\n                      {isLoading ? (\r\n                        <LoaderGraph title=\"Loading...\" />\r\n                      ) : (\r\n                        <>\r\n                          <CardHeader\r\n                            title={\r\n                              <Link\r\n                                to=\"/admin/requestSendReport\"\r\n                                style={{\r\n                                  textDecoration: 'none',\r\n                                  color: '#223354'\r\n                                }}\r\n                              >\r\n                                Monthly Proposal\r\n                              </Link>\r\n                            }\r\n                            action={\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                size=\"small\"\r\n                                sx={{ margin: '0px 4px' }}\r\n                              >\r\n                                <Link\r\n                                  to=\"/admin/requestSendReport\"\r\n                                  style={{\r\n                                    textDecoration: 'none',\r\n                                    color: 'white'\r\n                                  }}\r\n                                >\r\n                                  {' '}\r\n                                  View All{' '}\r\n                                </Link>\r\n                              </Button>\r\n                            }\r\n                          />\r\n                          <Chart\r\n                            options={chartOptions}\r\n                            type=\"line\"\r\n                            series={series1}\r\n                          />\r\n                        </>\r\n                      )}\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <div style={{ marginTop: '27px' }}>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <Card style={{ height: '514px' }}>\r\n                      {isLoading ? (\r\n                        <LoaderCard title=\"Loading...\" />\r\n                      ) : (\r\n                        <>\r\n                          <CardHeader\r\n                            title={\r\n                              <Link\r\n                                to=\"/admin/blockuser\"\r\n                                style={{\r\n                                  textDecoration: 'none',\r\n                                  color: '#223354'\r\n                                }}\r\n                              >\r\n                                {' '}\r\n                                Block User{' '}\r\n                              </Link>\r\n                            }\r\n                            action={\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                size=\"small\"\r\n                                sx={{ margin: '0px 4px' }}\r\n                              >\r\n                                <Link\r\n                                  to=\"/admin/blockuser\"\r\n                                  style={{\r\n                                    textDecoration: 'none',\r\n                                    color: 'white'\r\n                                  }}\r\n                                >\r\n                                  {' '}\r\n                                  View All{' '}\r\n                                </Link>\r\n                              </Button>\r\n                            }\r\n                          />\r\n                          <Divider />\r\n                          {blockUser && blockUser.length > 0 ? (\r\n                            <TableContainer\r\n                              style={{ height: '459px' }}\r\n                              // className=\"dashboard-table\"\r\n                            >\r\n                              <Table stickyHeader>\r\n                                <TableHead>\r\n                                  <TableRow>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Sr. No\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Request From User\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Request For User\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"center\">\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Reason\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    {/* <TableCell align=\"center\" >Created Date</TableCell> */}\r\n                                    <TableCell align=\"right\">\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Status\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                  {blockUser.map((arr: any, index: number) => {\r\n                                    return (\r\n                                      <TableRow hover key={arr.id}>\r\n                                        <TableCell>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {index + 1}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {arr.userName}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {arr.blockReqUserName}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {arr.reason}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        {/* <TableCell align=\"center\" >\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {format(new Date(arr.createdDate), dateData)}\r\n                                          </Typography>\r\n                                        </TableCell> */}\r\n                                        {arr.status === null && (\r\n                                          <TableCell align=\"right\">\r\n                                            <Label color=\"warning\">\r\n                                              Pending\r\n                                            </Label>\r\n                                          </TableCell>\r\n                                        )}\r\n                                      </TableRow>\r\n                                    );\r\n                                  })}\r\n                                </TableBody>\r\n                              </Table>\r\n                            </TableContainer>\r\n                          ) : (\r\n                            <Paper\r\n                              sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                textAlign: 'center',\r\n                                verticalAlign: 'middle',\r\n                                boxShadow: 'none',\r\n                                height: '459px'\r\n                              }}\r\n                            >\r\n                              <Typography variant=\"h5\" paragraph>\r\n                                Data not Found\r\n                              </Typography>\r\n                            </Paper>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </Card>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <Card style={{ height: '514px' }}>\r\n                      {isLoading ? (\r\n                        <LoaderCard title=\"Loading...\" />\r\n                      ) : (\r\n                        <>\r\n                          <CardHeader\r\n                            title={\r\n                              <Link\r\n                                to=\"/admin/appuser\"\r\n                                style={{\r\n                                  textDecoration: 'none',\r\n                                  color: '#223354'\r\n                                }}\r\n                              >\r\n                                {' '}\r\n                                New Application User{' '}\r\n                              </Link>\r\n                            }\r\n                            action={\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                size=\"small\"\r\n                                sx={{ margin: '0px 4px' }}\r\n                              >\r\n                                <Link\r\n                                  to=\"/admin/blockuser\"\r\n                                  style={{\r\n                                    textDecoration: 'none',\r\n                                    color: 'white'\r\n                                  }}\r\n                                >\r\n                                  {' '}\r\n                                  View All{' '}\r\n                                </Link>\r\n                              </Button>\r\n                            }\r\n                          />\r\n                          <Divider />\r\n                          {user && user.length > 0 ? (\r\n                            <TableContainer\r\n                              style={{ height: '459px' }}\r\n                              // className=\"dashboard-table\"\r\n                            >\r\n                              <Table stickyHeader>\r\n                                <TableHead>\r\n                                  <TableRow>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Sr. No\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Name\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Contact No\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Email\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    {/* <TableCell>Created Date</TableCell> */}\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        noWrap\r\n                                        style={{\r\n                                          fontSize: '13px',\r\n                                          fontWeight: 'bold',\r\n                                          marginBottom: 'none'\r\n                                        }}\r\n                                      >\r\n                                        Gender\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                  {user.map((arr: any, index: number) => {\r\n                                    return (\r\n                                      <TableRow hover key={index}>\r\n                                        <TableCell>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {index + 1}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {arr.firstName} {arr.middleName}{' '}\r\n                                            {arr.lastName}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {arr.contactNo}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {arr.email}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                        {/* <TableCell align=\"center\" >\r\n                                            <Typography\r\n                                              variant=\"body1\"\r\n                                              fontWeight=\"bold\"\r\n                                              color=\"text.primary\"\r\n                                              gutterBottom\r\n                                              noWrap\r\n                                            >\r\n                                              {format(new Date(arr.createdDate), dateData)}\r\n                                            </Typography>\r\n                                          </TableCell> */}\r\n                                        <TableCell>\r\n                                          <Typography\r\n                                            variant=\"body1\"\r\n                                            fontWeight=\"bold\"\r\n                                            color=\"text.primary\"\r\n                                            gutterBottom\r\n                                            noWrap\r\n                                          >\r\n                                            {arr.gender}\r\n                                          </Typography>\r\n                                        </TableCell>\r\n                                      </TableRow>\r\n                                    );\r\n                                  })}\r\n                                </TableBody>\r\n                              </Table>\r\n                            </TableContainer>\r\n                          ) : (\r\n                            <Paper\r\n                              sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                textAlign: 'center',\r\n                                verticalAlign: 'middle',\r\n                                boxShadow: 'none',\r\n                                height: '459px'\r\n                              }}\r\n                            >\r\n                              <Typography variant=\"h5\" paragraph>\r\n                                Data not Found\r\n                              </Typography>\r\n                            </Paper>\r\n                          )}\r\n                        </>\r\n                      )}\r\n                    </Card>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n      <div>\r\n        <Dialog open={isOpen} onClose={handleCloseDailog}>\r\n          <DialogTitle\r\n            sx={{ m: 0, p: 2, fontSize: '18px', fontWeight: 'bold' }}\r\n          >\r\n            Select Date\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              onClick={handleCloseDailog}\r\n              sx={{\r\n                position: 'absolute',\r\n                right: 13,\r\n                top: 13,\r\n                color: (theme) => theme.palette.grey[500]\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <DateRangePicker\r\n              className=\"rangepicker\"\r\n              // ranges={[selectionRange]}\r\n              ranges={state}\r\n              onChange={handleSelect}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions sx={{ pl: '24px', pr: '24px' }}>\r\n            <Button onClick={save}>Save</Button>\r\n            <Button onClick={handleClear}>Clear</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"names":["LabelWrapper","styled","_ref","theme","colors","alpha","black","spacing","typography","pxToRem","general","borderRadius","primary","lighter","palette","main","white","secondary","success","warning","error","info","_ref2","className","color","children","rest","_jsx","PageTitle","Box","Container","maxWidth","FooterWrapper","display","xs","md","alignItems","textAlign","justifyContent","Typography","variant","props","title","AvatarWrapper","Avatar","mode","trueWhite","initialState","fromDate","toDate","useTheme","user","setUser","React","blockUser","setBlockUser","useState","userData","setUserData","send","setSend","accept","setAccept","reject","setReject","isLoading","setIsLoading","isOpen","setIsOpen","monthlyProposal","setMonthlyProposal","todayProposal","setTodayProposal","todayRegistration","setTodayRegistration","monthlyRegistration","setMonthlyRegistration","userValue","setUserValue","chip","setChip","state","setState","startDate","Date","endDate","key","month","setMonth","navigate","useNavigate","useEffect","getdata","dateData","localStorage","getItem","async","token","refreshToken","obj","res","APIservice","httpPost","recordList","recentUserResult","monthlyRegUserCount","map","item","count","status","clear","toast","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","POSITION","TOP_RIGHT","getPendingBlockUser","getProposal","console","log","res1","res2","series","name","data","options","chart","background","toolbar","show","stroke","width","legend","xaxis","categories","series1","chartOptions","labels","handleCloseDailog","_jsxs","_Fragment","ToastContainer","style","top","left","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","pt","pb","pl","Grid","container","Stack","Breadcrumbs","Link","to","HomeIcon","fontWeight","Chip","label","format","onDelete","e","Tooltip","arrow","IconButton","sx","size","onClick","handleOpenRangePicker","FilterAltIcon","direction","lg","sm","Card","px","height","LoaderSmallCard","textDecoration","CardContent","alt","src","noWrap","gutterBottom","marginTop","LoaderGraph","CardHeader","action","Button","margin","Chart","type","LoaderCard","Divider","length","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","fontSize","marginBottom","align","TableBody","arr","index","hover","userName","blockReqUserName","reason","Label","id","Paper","verticalAlign","boxShadow","paragraph","firstName","middleName","lastName","contactNo","email","gender","Footer","Dialog","open","onClose","DialogTitle","m","p","right","grey","CloseIcon","DialogContent","dividers","DateRangePicker","ranges","onChange","selection","DialogActions","pr","save","handleClear"],"sourceRoot":""}