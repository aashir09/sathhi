{"version":3,"file":"static/js/950.c2aebbca.chunk.js","mappings":"uKAIA,MAAMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAChBE,IAAA,IAAC,MAAEC,GAAOD,EAAA,MAAK,sBACEC,EAAMC,QAAQ,OAChC,IAmBD,EAZoDC,IAAmB,IAAlB,SAAEC,GAAUD,EAC/D,OACEE,EAAAA,EAAAA,KAACR,EAAS,CAACS,UAAU,uBAAsBF,UACzCC,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAACC,SAAS,KAAIJ,SAAEA,KAChB,C,2DCXhB,MAaA,EAbiBK,IACf,MAAM,MAAEC,GAAUD,EAClB,OAKEJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBF,UAChCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBACX,C,uaCuBV,MAqgBA,EArgBuBK,KACrB,MAAOC,EAAMC,GAAWC,EAAAA,SAAoB,KACrCC,EAAOC,GAAYF,EAAAA,SAAoB,KACvCG,EAAWC,GAAgBJ,EAAAA,UAAe,IAC1CK,EAAKC,IAAUC,EAAAA,EAAAA,UAAiB,KAChCC,EAAMC,GAAWT,EAAAA,SAAuB,IACxCU,EAAOC,GAAYX,EAAAA,SAAuB,KAC1CY,EAAWC,IAAgBN,EAAAA,EAAAA,UAAc,IAE1CO,GAAWC,EAAAA,EAAAA,MAEjBf,EAAAA,WAAgB,KACdgB,EAAQR,EAAME,EAAM,GACnB,IAEH,MAAMM,EAAUC,MAAOC,EAAoBC,KACzC,IACEf,GAAa,GACb,MAAMgB,EAAQC,aAAaC,QAAQ,gBAC7BC,EAAeF,aAAaC,QAAQ,gBAC1C,IAAIE,EAAM,CACRN,WAAYA,EACZC,YAAaA,GAEf,MAAMM,QAAYC,EAAAA,EAAWC,SAC3B,mDACAH,EACAJ,EACAG,GAEFxB,EAAQ0B,EAAIG,YACZtB,EAAOmB,EAAII,cACPJ,GAAqB,KAAdA,EAAIK,SACU,KAAdL,EAAIK,QACbhB,EAAS,UACTO,aAAaU,UACU,KAAdN,EAAIK,QAWU,KAAdL,EAAIK,QAWU,KAAdL,EAAIK,QAWU,KAAdL,EAAIK,SAhCbE,EAAAA,GAAMC,MAAMR,EAAIS,QAAS,CACvBC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVtD,MAAO,UACPuD,SAAUV,EAAAA,GAAMW,SAASC,aAoC7BxC,GAAa,EACf,CAAE,MAAO6B,GACP7B,GAAa,GACb4B,EAAAA,GAAMC,MAAMA,EAAO,CACjBE,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVtD,MAAO,UACPuD,SAAUV,EAAAA,GAAMW,SAASC,WAE7B,GA2KIzD,GAAQ0D,EAAAA,EAAAA,KAEd,OAEEC,EAAAA,EAAAA,MAAA,OAAAxD,SAAA,EACEC,EAAAA,EAAAA,KAACwD,EAAAA,GAAc,CACbC,MAAO,CAAEC,IAAK,OAAQC,MAAO,MAE7Bf,UAAW,IACXC,iBAAiB,EACjBe,aAAa,EACbd,cAAY,EACZe,KAAK,EACLC,kBAAgB,EAChBd,WAAS,EACTD,cAAY,KAEd/C,EAAAA,EAAAA,KAAC+D,EAAAA,GAAM,CAAAhE,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,6BAETC,EAAAA,EAAAA,KAACgE,EAAAA,EAAgB,CAAAjE,UACfC,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACuE,GAAI,IAAKC,GAAI,IAAKC,GAAI,EAAEpE,UAC3BwD,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CACHC,WAAS,EACTC,eAAe,gBACfC,WAAW,SACX1E,QAAS,EAAEE,SAAA,EAEXC,EAAAA,EAAAA,KAACoE,EAAAA,GAAI,CAACI,MAAI,EAAAzE,UACRC,EAAAA,EAAAA,KAACyE,EAAAA,EAAK,CAACF,WAAW,OAAOD,eAAe,gBAAevE,UACrDwD,EAAAA,EAAAA,MAACmB,EAAAA,EAAW,CAAC,aAAW,aAAY3E,SAAA,EAClCC,EAAAA,EAAAA,KAAC2E,EAAAA,GAAI,CAACC,GAAG,SAASnB,MAAO,CAAEoB,QAAS,OAAQC,MAAO,SAAU/E,UAC3DC,EAAAA,EAAAA,KAAC+E,EAAAA,EAAQ,OAEX/E,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CACTF,MAAM,UACNG,QAAQ,YACRC,WAAW,OAAMnF,SAClB,kCAMPwD,EAAAA,EAAAA,MAACa,EAAAA,GAAI,CAACI,MAAI,EAAAzE,SAAA,EACRC,EAAAA,EAAAA,KAACmF,EAAAA,EAAO,CAAC9E,MAAM,QAAQ+E,OAAK,EAAArF,UAC1BC,EAAAA,EAAAA,KAACqF,EAAAA,EAAU,CACTC,GAAI,CACF,UAAW,CAAEC,WAAY3F,EAAM4F,OAAOC,QAAQC,SAC9CZ,MAAOlF,EAAM+F,QAAQF,QAAQG,KAC7BC,UAAW,OAEbf,MAAM,UACNgB,KAAK,QACLC,QAjNIrE,UAClB,MAAMG,EAAQC,aAAaC,QAAQ,gBAC7BC,EAAeF,aAAaC,QAAQ,gBACpCG,QAAYC,EAAAA,EAAWC,SAC3B,mDACA,CAAC,EACDP,EACAG,GAEFV,EAAaY,EAAIG,YACbH,GAAqB,KAAdA,EAAIK,QACU,KAAdL,EAAIK,SACbhB,EAAS,UACTO,aAAaU,SAEf,IAAIwD,EAAO,ukEA+FX,IAAK,IAAIC,EAAI,EAAGA,EAAI/D,EAAIG,WAAW6D,OAAQD,IACzCD,GACE,oCAECC,EAAI,GACL,oCAEA/D,EAAIG,WAAW4D,GAAGE,UAClB,IACAjE,EAAIG,WAAW4D,GAAGG,SAClB,oCAEAlE,EAAIG,WAAW4D,GAAGI,eAClB,oCAEAnE,EAAIG,WAAW4D,GAAGK,OAClB,yBAGJN,GAAQ,uDAKR,IAAIO,EAASC,SAASC,cAAc,UACpCF,EAAOG,KAAO,SACdH,EAAO9C,MAAMN,SAAW,WACxBoD,EAAO9C,MAAMC,IAAM,aACnB8C,SAASG,KAAKC,YAAYL,GAC1BA,EAAOM,cAAcL,SAASM,OAC9BP,EAAOM,cAAcL,SAASO,MAAMf,GACpCO,EAAOM,cAAcL,SAASQ,OAAO,EAoEFjH,UAErBC,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CAACC,SAAS,gBAGxBlH,EAAAA,EAAAA,KAACmF,EAAAA,EAAO,CAAC9E,MAAM,cAAc+E,OAAK,EAAArF,UAChCC,EAAAA,EAAAA,KAACqF,EAAAA,EAAU,CACTC,GAAI,CACF,UAAW,CAAEC,WAAY3F,EAAM4F,OAAOC,QAAQC,SAC9CZ,MAAOlF,EAAM+F,QAAQF,QAAQG,MAE/Bd,MAAM,UACNgB,KAAK,QACLC,QA3OCoB,KACf,MAAMC,EAAO7G,EAAK8G,KAAI,CAACC,EAAUC,KACZ,CACjBC,GAAID,EAAQ,EACZE,KAAMH,EAAInB,UAAY,IAAMmB,EAAIlB,SAChC,kBAAmBkB,EAAIjB,eACvBqB,OAAQJ,EAAIhB,WAIhB3F,EAASyG,EAAK,EAiOkBrH,UAElBC,EAAAA,EAAAA,KAAC2H,EAAAA,QAAO,CACNpH,KAAMG,EACNkH,SAAU,2BACVnE,MAAO,CACL,UAAW,CAAE8B,WAAY3F,EAAM4F,OAAOC,QAAQC,SAC9CZ,MAAOlF,EAAM+F,QAAQF,QAAQG,MAC7B7F,UAEFC,EAAAA,EAAAA,KAAC6H,EAAAA,EAAqB,qBAQpC7H,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAACC,SAAS,KAAIJ,UACtBC,EAAAA,EAAAA,KAACoE,EAAAA,GAAI,CACHC,WAAS,EACTyD,UAAU,MACVxD,eAAe,SACfC,WAAW,UACX1E,QAAS,EAAEE,UAEXC,EAAAA,EAAAA,KAACoE,EAAAA,GAAI,CAACI,MAAI,EAACuD,GAAI,GAAGhI,UAChBC,EAAAA,EAAAA,KAACgI,EAAAA,EAAI,CAAC/H,UAAU,mBAAkBF,UAChCC,EAAAA,EAAAA,KAAA,OAAAD,SACGa,GACCZ,EAAAA,EAAAA,KAACiI,EAAAA,EAAM,CAAC5H,MAAM,gBAEdkD,EAAAA,EAAAA,MAAA2E,EAAAA,SAAA,CAAAnI,SAAA,EACEC,EAAAA,EAAAA,KAACmI,EAAAA,EAAO,IACP5H,GAAQA,EAAK2F,OAAS,GACrB3C,EAAAA,EAAAA,MAAA2E,EAAAA,SAAA,CAAAnI,SAAA,EACEC,EAAAA,EAAAA,KAACoI,EAAAA,EAAc,CAACnI,UAAU,6BAA4BF,UACpDwD,EAAAA,EAAAA,MAAC8E,EAAAA,EAAK,CAACC,cAAY,EAAAvI,SAAA,EACjBC,EAAAA,EAAAA,KAACuI,EAAAA,EAAS,CAAAxI,UACRwD,EAAAA,EAAAA,MAACiF,EAAAA,EAAQ,CAAAzI,SAAA,EACPC,EAAAA,EAAAA,KAACyI,EAAAA,EAAS,CAAA1I,UACRC,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CACT0D,QAAM,EACNjF,MAAO,CACLyD,SAAU,OACVhC,WAAY,OACZyD,aAAc,QACd5I,SACH,UAIHC,EAAAA,EAAAA,KAACyI,EAAAA,EAAS,CAAA1I,UACRC,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CACT0D,QAAM,EACNjF,MAAO,CACLyD,SAAU,OACVhC,WAAY,OACZyD,aAAc,QACd5I,SACH,YAIHC,EAAAA,EAAAA,KAACyI,EAAAA,EAAS,CAAA1I,UACRC,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CACT0D,QAAM,EACNjF,MAAO,CACLyD,SAAU,OACVhC,WAAY,OACZyD,aAAc,QACd5I,SACH,uBAIHC,EAAAA,EAAAA,KAACyI,EAAAA,EAAS,CAAA1I,UACRC,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CACT0D,QAAM,EACNjF,MAAO,CACLyD,SAAU,OACVhC,WAAY,OACZyD,aAAc,QACd5I,SACH,mBAMPC,EAAAA,EAAAA,KAAC4I,EAAAA,EAAS,CAAA7I,SACPQ,EAAK8G,KAAI,CAACC,EAAUC,KAEjBhE,EAAAA,EAAAA,MAACiF,EAAAA,EAAQ,CAACK,OAAK,EAAA9I,SAAA,EACbC,EAAAA,EAAAA,KAACyI,EAAAA,EAAS,CAAA1I,UACRC,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CACTC,QAAQ,QACRC,WAAW,OACXJ,MAAM,eACNgE,cAAY,EACZJ,QAAM,EAAA3I,SAELkB,EAAOE,EAAQoG,EAAQ,OAG5BvH,EAAAA,EAAAA,KAACyI,EAAAA,EAAS,CAAA1I,UACRwD,EAAAA,EAAAA,MAACyB,EAAAA,EAAU,CACTC,QAAQ,QACRC,WAAW,OACXJ,MAAM,eACNgE,cAAY,EACZJ,QAAM,EAAA3I,SAAA,CAELuH,EAAInB,UAAU,IAAEmB,EAAIlB,eAGzBpG,EAAAA,EAAAA,KAACyI,EAAAA,EAAS,CAAA1I,UACRC,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CACTC,QAAQ,QACRC,WAAW,OACXJ,MAAM,eACNgE,cAAY,EACZJ,QAAM,EAAA3I,SAELuH,EAAIjB,oBAGTrG,EAAAA,EAAAA,KAACyI,EAAAA,EAAS,CAAA1I,UACRC,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CACTC,QAAQ,QACRC,WAAW,OACXJ,MAAM,eACNgE,cAAY,EACZJ,QAAM,EAAA3I,SAELuH,EAAIhB,aA1CUiB,aAmD/BvH,EAAAA,EAAAA,KAACN,EAAAA,EAAG,CAACqJ,EAAG,EAAEhJ,UACRC,EAAAA,EAAAA,KAACgJ,EAAAA,EAAe,CACdC,UAAU,MACVC,MAAOpI,EACPqI,aAlODC,CAACC,EAAYC,KACpCpI,EAAQoI,GACR7H,EAAQ6H,EAAUnI,EAAOA,EAAM,EAiOPoI,oBA9NCF,IACzBjI,EAASoI,SAASH,EAAMI,OAAOC,QAC/BxI,EAAQ,GACRO,EAAQ,EAAG+H,SAASH,EAAMI,OAAOC,OAAO,EA4NhBzI,KAAMA,EACN0I,YAAaxI,EACbyI,mBAAoB,CAAC,GAAI,GAAI,GAAI,YAKvC5J,EAAAA,EAAAA,KAAC6J,EAAAA,EAAK,CACJvE,GAAI,CACFT,QAAS,OACTP,eAAgB,SAChBC,WAAY,SACZuF,UAAW,SACXC,cAAe,SACfC,UAAW,QAEb/J,UAAU,6BAA4BF,UAEtCC,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CAACC,QAAQ,KAAKgF,WAAS,EAAAlK,SAAC,oCAajD,C,sBCriBNmK,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,sJACD,SACJN,EAAQ,EAAUG,C,sBCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,wTACD,qBACJN,EAAQ,EAAUG,C","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/Report/RequestReceive/RequestReceive.tsx","../node_modules/@mui/icons-material/Print.js","../node_modules/@mui/icons-material/UploadFileRounded.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import {\r\n  Box,\r\n  Breadcrumbs,\r\n  Card,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Paper,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n  useTheme\r\n} from '@mui/material';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from '../../../components/PageTitleWrapper';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport PrintIcon from '@mui/icons-material/Print';\r\n// import FileOpenIcon from '@mui/icons-material/FileOpen';\r\nimport UploadFileRoundedIcon from '@mui/icons-material/UploadFileRounded';\r\nimport CurrencyRupeeIcon from '@mui/icons-material/CurrencyRupee';\r\nimport DateRangeIcon from '@mui/icons-material/DateRange';\r\nimport Footer from 'src/components/Footer';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport React, { useState, ChangeEvent } from 'react';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport Loader from '../../Loader';\r\nimport { CSVLink } from 'react-csv';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../smallScreen.css';\r\n\r\nconst RequestReceive = () => {\r\n  const [data, setData] = React.useState<any>([]);\r\n  const [data1, setData1] = React.useState<any>([]);\r\n  const [isloading, setIsLoading] = React.useState(false);\r\n  const [row, setRow] = useState<number>(10);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [limit, setLimit] = React.useState<number>(10);\r\n  const [printUser, setPrintUser] = useState<any>([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  React.useEffect(() => {\r\n    getdata(page, limit);\r\n  }, []);\r\n\r\n  const getdata = async (startIndex: number, fetchRecord: number) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const token = localStorage.getItem('SessionToken');\r\n      const refreshToken = localStorage.getItem('RefreshToken');\r\n      let obj = {\r\n        startIndex: startIndex,\r\n        fetchRecord: fetchRecord\r\n      };\r\n      const res = await APIservice.httpPost(\r\n        '/api/admin/report/getTopProposalReceiveReqReport',\r\n        obj,\r\n        token,\r\n        refreshToken\r\n      );\r\n      setData(res.recordList);\r\n      setRow(res.totalRecords);\r\n      if (res && res.status == 200) {\r\n      } else if (res.status == 401) {\r\n        navigate('/admin');\r\n        localStorage.clear();\r\n      } else if (res.status == 400) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 500) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 300) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      } else if (res.status == 404) {\r\n        toast.error(res.message, {\r\n          autoClose: 6000,\r\n          hideProgressBar: true,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n          theme: 'colored',\r\n          position: toast.POSITION.TOP_RIGHT\r\n        });\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      toast.error(error, {\r\n        autoClose: 6000,\r\n        hideProgressBar: true,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: 'colored',\r\n        position: toast.POSITION.TOP_RIGHT\r\n      });\r\n    }\r\n  };\r\n\r\n  const DataSend = () => {\r\n    const user = data.map((arr: any, index: number) => {\r\n      const dataDetail = {\r\n        Id: index + 1,\r\n        Name: arr.firstName + ' ' + arr.lastName,\r\n        'Request Receive': arr.receiveRequest,\r\n        Gender: arr.gender\r\n      };\r\n      return dataDetail;\r\n    });\r\n    setData1(user);\r\n  };\r\n\r\n  const handlePrint = async () => {\r\n    const token = localStorage.getItem('SessionToken');\r\n    const refreshToken = localStorage.getItem('RefreshToken');\r\n    const res = await APIservice.httpPost(\r\n      '/api/admin/report/getTopProposalReceiveReqReport',\r\n      {},\r\n      token,\r\n      refreshToken\r\n    );\r\n    setPrintUser(res.recordList);\r\n    if (res && res.status == 200) {\r\n    } else if (res.status == 401) {\r\n      navigate('/admin');\r\n      localStorage.clear();\r\n    }\r\n    let html = `<html>\r\n        <div class=\"img-container\">\r\n        <img src=\"/Image20221010173301.png\" alt=\"logo\" height=\"30px\"/>\r\n        <span>Top Request Receive</span>\r\n    </div>\r\n\r\n      <body  onload=\"window.print(); window.close();\">\r\n      <style>\r\n      .img-container {\r\n        text-align: center;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        padding-Bottom: 20px;\r\n      }\r\n\r\n      span{\r\n        font-size: 30px;\r\n        padding-Left: 5px;\r\n      }\r\n      .date-container {\r\n        text-align: right;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n\r\n      table {\r\n         border-collapse: collapse;\r\n        border: 1px solid black;\r\n        width: 100%;\r\n      }\r\n\r\n      .th1 {\r\n        border-top: 0px;\r\n        border-bottom: 1px solid black;\r\n        border-right: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n\r\n\r\n      .th2 {\r\n        border-bottom: 1px solid black;\r\n        border-right: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n\r\n      .th3 {\r\n        border-bottom: 1px solid black;\r\n        border-right: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n\r\n      .th4 {\r\n        border-bottom: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n\r\n      .td1 {\r\n        border-right: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n\r\n      .td2 {\r\n        border-right: 1px solid black;\r\n        text-align: left;\r\n        padding: 8px;\r\n      }\r\n      .td3 {\r\n        border-right: 1px solid black;\r\n        text-align: center;\r\n        padding: 8px;\r\n      }\r\n\r\n      .td4 {\r\n          text-align: center;\r\n          padding: 8px;\r\n        }\r\n\r\n        tr:nth-child(even) {background-color: #f2f2f2;}\r\n        </style>\r\n        <table>\r\n        <Divider/>\r\n    <thead>\r\n      <th class=\"th1\">#</th>\r\n      <th class=\"th2\">Name</th>\r\n      <th class=\"th3\">Request Receive</th>\r\n      <th class=\"th4\">Gender</th>\r\n    </thead>\r\n    <tbody>`;\r\n    for (let i = 0; i < res.recordList.length; i++) {\r\n      html +=\r\n        `<tr>\r\n          <td class=\"td1\">` +\r\n        (i + 1) +\r\n        `</td>\r\n          <td class=\"td2\">` +\r\n        res.recordList[i].firstName +\r\n        ' ' +\r\n        res.recordList[i].lastName +\r\n        `</td>\r\n          <td class=\"td3\">` +\r\n        res.recordList[i].receiveRequest +\r\n        ` </td>\r\n         <td class=\"td4\">` +\r\n        res.recordList[i].gender +\r\n        ` </td>\r\n         </tr>`;\r\n    }\r\n    html += `</tbody>\r\n      </table>\r\n     </body>\r\n    </html >`;\r\n\r\n    let frame1 = document.createElement('iframe');\r\n    frame1.name = 'frame1';\r\n    frame1.style.position = 'absolute';\r\n    frame1.style.top = '-1000000px';\r\n    document.body.appendChild(frame1);\r\n    frame1.contentWindow.document.open();\r\n    frame1.contentWindow.document.write(html);\r\n    frame1.contentWindow.document.close();\r\n  };\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n    getdata(newPage * limit, limit);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n    setPage(0);\r\n    getdata(0, parseInt(event.target.value));\r\n  };\r\n\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    // eslint-disable-next-line\r\n    <div>\r\n      <ToastContainer\r\n        style={{ top: '8.5%', right: '0%' }}\r\n        // position=\"top-right\"\r\n        autoClose={6000}\r\n        hideProgressBar={true}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Helmet>\r\n        <title>Top Requests Received</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <Box pt={1.3} pb={1.2} pl={1}>\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n          >\r\n            <Grid item>\r\n              <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                  <Link to=\"/admin\" style={{ display: 'flex', color: 'black' }}>\r\n                    <HomeIcon />\r\n                  </Link>\r\n                  <Typography\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle2\"\r\n                    fontWeight=\"bold\"\r\n                  >\r\n                    Top Requests Received\r\n                  </Typography>\r\n                </Breadcrumbs>\r\n              </Stack>\r\n            </Grid>\r\n            <Grid item>\r\n              <Tooltip title=\"Print\" arrow>\r\n                <IconButton\r\n                  sx={{\r\n                    '&:hover': { background: theme.colors.primary.lighter },\r\n                    color: theme.palette.primary.main,\r\n                    marginTop: '3px'\r\n                  }}\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={handlePrint}\r\n                >\r\n                  <PrintIcon fontSize=\"medium\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip title=\"Export File\" arrow>\r\n                <IconButton\r\n                  sx={{\r\n                    '&:hover': { background: theme.colors.primary.lighter },\r\n                    color: theme.palette.primary.main\r\n                  }}\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={DataSend}\r\n                >\r\n                  <CSVLink\r\n                    data={data1}\r\n                    filename={'RequestReceiveReport.csv'}\r\n                    style={{\r\n                      '&:hover': { background: theme.colors.primary.lighter },\r\n                      color: theme.palette.primary.main\r\n                    }}\r\n                  >\r\n                    <UploadFileRoundedIcon />\r\n                  </CSVLink>\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card className=\"userProposalcard\">\r\n              <div>\r\n                {isloading ? (\r\n                  <Loader title=\"Loading...\" />\r\n                ) : (\r\n                  <>\r\n                    <Divider />\r\n                    {data && data.length > 0 ? (\r\n                      <>\r\n                        <TableContainer className=\"userProposalTableContainer\">\r\n                          <Table stickyHeader>\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell>\r\n                                  <Typography\r\n                                    noWrap\r\n                                    style={{\r\n                                      fontSize: '13px',\r\n                                      fontWeight: 'bold',\r\n                                      marginBottom: 'none'\r\n                                    }}\r\n                                  >\r\n                                    Id\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography\r\n                                    noWrap\r\n                                    style={{\r\n                                      fontSize: '13px',\r\n                                      fontWeight: 'bold',\r\n                                      marginBottom: 'none'\r\n                                    }}\r\n                                  >\r\n                                    Name\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography\r\n                                    noWrap\r\n                                    style={{\r\n                                      fontSize: '13px',\r\n                                      fontWeight: 'bold',\r\n                                      marginBottom: 'none'\r\n                                    }}\r\n                                  >\r\n                                    Request Receive\r\n                                  </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                  <Typography\r\n                                    noWrap\r\n                                    style={{\r\n                                      fontSize: '13px',\r\n                                      fontWeight: 'bold',\r\n                                      marginBottom: 'none'\r\n                                    }}\r\n                                  >\r\n                                    Gender\r\n                                  </Typography>\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                              {data.map((arr: any, index) => {\r\n                                return (\r\n                                  <TableRow hover key={index}>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        variant=\"body1\"\r\n                                        fontWeight=\"bold\"\r\n                                        color=\"text.primary\"\r\n                                        gutterBottom\r\n                                        noWrap\r\n                                      >\r\n                                        {page * limit + index + 1}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        variant=\"body1\"\r\n                                        fontWeight=\"bold\"\r\n                                        color=\"text.primary\"\r\n                                        gutterBottom\r\n                                        noWrap\r\n                                      >\r\n                                        {arr.firstName} {arr.lastName}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        variant=\"body1\"\r\n                                        fontWeight=\"bold\"\r\n                                        color=\"text.primary\"\r\n                                        gutterBottom\r\n                                        noWrap\r\n                                      >\r\n                                        {arr.receiveRequest}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography\r\n                                        variant=\"body1\"\r\n                                        fontWeight=\"bold\"\r\n                                        color=\"text.primary\"\r\n                                        gutterBottom\r\n                                        noWrap\r\n                                      >\r\n                                        {arr.gender}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                );\r\n                              })}\r\n                            </TableBody>\r\n                          </Table>\r\n                        </TableContainer>\r\n                        <Box p={2}>\r\n                          <TablePagination\r\n                            component=\"div\"\r\n                            count={row}\r\n                            onPageChange={handlePageChange}\r\n                            onRowsPerPageChange={handleLimitChange}\r\n                            page={page}\r\n                            rowsPerPage={limit}\r\n                            rowsPerPageOptions={[10, 20, 30, 40]}\r\n                          />\r\n                        </Box>\r\n                      </>\r\n                    ) : (\r\n                      <Paper\r\n                        sx={{\r\n                          display: 'flex',\r\n                          justifyContent: 'center',\r\n                          alignItems: 'center',\r\n                          textAlign: 'center',\r\n                          verticalAlign: 'middle',\r\n                          boxShadow: 'none'\r\n                        }}\r\n                        className=\"userProposalTableContainer\"\r\n                      >\r\n                        <Typography variant=\"h5\" paragraph>\r\n                          Data not Found\r\n                        </Typography>\r\n                      </Paper>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      {/* <Footer /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RequestReceive;\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\"\n}), 'Print');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m19.41 7.41-4.83-4.83c-.37-.37-.88-.58-1.41-.58H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8.83c0-.53-.21-1.04-.59-1.42zM14.8 15H13v3c0 .55-.45 1-1 1s-1-.45-1-1v-3H9.21c-.45 0-.67-.54-.35-.85l2.8-2.79c.2-.19.51-.19.71 0l2.79 2.79c.3.31.08.85-.36.85zM14 9c-.55 0-1-.45-1-1V3.5L18.5 9H14z\"\n}), 'UploadFileRounded');\nexports.default = _default;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","RequestReceive","data","setData","React","data1","setData1","isloading","setIsLoading","row","setRow","useState","page","setPage","limit","setLimit","printUser","setPrintUser","navigate","useNavigate","getdata","async","startIndex","fetchRecord","token","localStorage","getItem","refreshToken","obj","res","APIservice","httpPost","recordList","totalRecords","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","POSITION","TOP_RIGHT","useTheme","_jsxs","ToastContainer","style","top","right","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","pt","pb","pl","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","color","HomeIcon","Typography","variant","fontWeight","Tooltip","arrow","IconButton","sx","background","colors","primary","lighter","palette","main","marginTop","size","onClick","html","i","length","firstName","lastName","receiveRequest","gender","frame1","document","createElement","name","body","appendChild","contentWindow","open","write","close","PrintIcon","fontSize","DataSend","user","map","arr","index","Id","Name","Gender","CSVLink","filename","UploadFileRoundedIcon","direction","xs","Card","Loader","_Fragment","Divider","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","noWrap","marginBottom","TableBody","hover","gutterBottom","p","TablePagination","component","count","onPageChange","handlePageChange","event","newPage","onRowsPerPageChange","parseInt","target","value","rowsPerPage","rowsPerPageOptions","Paper","textAlign","verticalAlign","boxShadow","paragraph","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}