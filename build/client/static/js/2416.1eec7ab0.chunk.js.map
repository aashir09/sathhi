{"version":3,"file":"static/js/2416.1eec7ab0.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/Loader.tsx","content/blog/view/blogDetail.tsx","../node_modules/@mui/material/TableContainer/tableContainerClasses.js","../node_modules/@mui/material/TableContainer/TableContainer.js"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(1)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Loader1 = (props: Props) => {\r\n  const { title } = props;\r\n  return (\r\n    // <div className=\"loader\">\r\n    //     <img className=\"img\" src={loader} alt=\"\" />\r\n    //     <span>{title}</span>\r\n    // </div>\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader1;\r\n","import { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from '../../../components/PageTitleWrapper';\r\nimport {\r\n    Grid,\r\n    Container,\r\n    Box,\r\n    Breadcrumbs,\r\n    Card,\r\n    Dialog,\r\n    DialogTitle,\r\n    IconButton,\r\n    Stack,\r\n    TableContainer,\r\n    Typography,\r\n    useTheme,\r\n    styled,\r\n    Chip,\r\n} from '@mui/material';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport React, { useState, ChangeEvent, useEffect } from 'react';\r\nimport Loader1 from '../.././Loader';\r\nimport APIservice from 'src/utils/APIservice';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../../content/smallScreen.css';\r\nimport 'react-quill/dist/quill.snow.css';\r\n// import './../manageCustomFields.css'\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport { Tab } from '@mui/material';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport './blogDetail.css'\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250\r\n        }\r\n    }\r\n};\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n        padding: theme.spacing(2)\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1)\r\n    },\r\n    '& .MuiPaper-root': {\r\n        height: '700px'\r\n    },\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n    id: string;\r\n    children?: React.ReactNode;\r\n    onClose: () => void;\r\n}\r\n\r\n\r\nconst initialState = {\r\n    id: 0,\r\n    title: '',\r\n    description: '',\r\n    tags: [],\r\n    authorName: '',\r\n    image: '',\r\n    publishDate: null,\r\n};\r\n\r\nconst CustomFieldDetail = () => {\r\n    const navigate = useNavigate();\r\n    const theme = useTheme();\r\n    const [isloading, setIsLoading] = useState(false);\r\n    // const [customNotifications, setCustomNotifications] = React.useState<any[]>([]);\r\n    let [blog, setBlog] = React.useState<any>([]);\r\n    const [fieldName, setFieldName] = React.useState<any>('');\r\n\r\n    let [credentail, setCredentail] = useState<any>();\r\n    let [apiUrl, setApiUrl] = useState<any>();\r\n\r\n\r\n    const [isReadPermission, setIsReadPermission] = useState(true);\r\n    const [isWritePermission, setIsWritePermission] = useState(true);\r\n    const [isEditPermission, setIsEditPermission] = useState(true);\r\n    const [isDeletePermission, setIsDeletePermission] = useState(true);\r\n\r\n    const vId = useParams();\r\n\r\n    useEffect(() => {\r\n        let cred = JSON.parse(localStorage.getItem('Credentials'));\r\n        setCredentail(cred);\r\n        if (cred) {\r\n            if (cred.roleId != 1) {\r\n                let ind = cred.pagePermissions.findIndex((c: any) => c.title === \"Block Users\");\r\n                if (ind >= 0) {\r\n                    setIsReadPermission(cred.pagePermissions[ind].isReadPermission);\r\n                    setIsWritePermission(cred.pagePermissions[ind].isAddPermission)\r\n                    setIsEditPermission(cred.pagePermissions[ind].isEditPermission);\r\n                    setIsDeletePermission(cred.pagePermissions[ind].isDeletePermission);\r\n\r\n                    if (cred.pagePermissions[ind].isReadPermission)\r\n                        loadData();\r\n                    loadjson();\r\n\r\n                }\r\n            } else {\r\n                loadData();\r\n                loadjson();\r\n\r\n            }\r\n        }\r\n\r\n    }, []);\r\n\r\n    const loadjson = async () => {\r\n        let res = await fetch('/admin/variable.json'); // Adjust the file path as needed\r\n        let url = await res.json();\r\n        setApiUrl(url);\r\n        apiUrl = url;\r\n    }\r\n\r\n    const loadData = async () => {\r\n        await getdata();\r\n    }\r\n\r\n    const getdata = async () => {\r\n        debugger\r\n        try {\r\n\r\n            setIsLoading(true);\r\n            const token = localStorage.getItem('SessionToken');\r\n            const refreshToken = localStorage.getItem('RefreshToken');\r\n            let obj = {\r\n                id: vId.id\r\n            };\r\n            const res = await APIservice.httpPost(\r\n                '/api/admin/blog/getBlogDetail',\r\n                obj,\r\n                token,\r\n                refreshToken\r\n            );\r\n            res.recordList[0].image =  res.recordList[0].image;\r\n            \r\n            res.recordList[0].publishDate = new Date(); // Or your date object\r\n            res.recordList[0].formatedate = res.recordList[0].publishDate.toLocaleDateString('en-US'); // Specify locale (optional)\r\n            \r\n            // console.log(formattedDate)\r\n            setBlog(res.recordList);\r\n\r\n            if (res && res.status == 200) {\r\n            } else if (res.status == 401) {\r\n                navigate('/admin');\r\n                localStorage.clear();\r\n            } else if (res.status == 500) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 300) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 400) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            } else if (res.status == 404) {\r\n                toast.error(res.message, {\r\n                    autoClose: 6000,\r\n                    hideProgressBar: true,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: 'colored',\r\n                    position: toast.POSITION.TOP_RIGHT\r\n                });\r\n            }\r\n            setIsLoading(false);\r\n            // }\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n            toast.error(error, {\r\n                autoClose: 6000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                theme: 'colored',\r\n                position: toast.POSITION.TOP_RIGHT\r\n            });\r\n        }\r\n    };\r\n\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (event: React.SyntheticEvent, newValue: string) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer\r\n                style={{ top: '8.5%', right: '0%' }}\r\n                // position=\"top-right\"\r\n                autoClose={6000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Helmet>\r\n                <title>Blog</title>\r\n            </Helmet>\r\n            <PageTitleWrapper>\r\n                <Box p={1}>\r\n                    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Stack alignItems=\"left\" justifyContent=\"space-between\">\r\n                                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                                    <Link to=\"/admin\" style={{ display: 'flex', color: 'black' }}>\r\n                                        <HomeIcon />\r\n                                    </Link>\r\n                                    <Link\r\n                                        to=\"/admin/blog\"\r\n                                        style={{\r\n                                            display: 'flex',\r\n                                            color: 'black',\r\n                                            textDecoration: 'none'\r\n                                        }}\r\n                                    >\r\n                                        Blog\r\n                                    </Link>\r\n                                    <Typography\r\n                                        variant=\"subtitle2\"\r\n                                        color=\"inherit\"\r\n                                        fontWeight=\"bold\"\r\n                                    > Detail</Typography>\r\n                                </Breadcrumbs>\r\n                            </Stack>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                </Box>\r\n            </PageTitleWrapper>\r\n            <Container maxWidth=\"lg\">\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"stretch\"\r\n                    spacing={3}\r\n                >\r\n                    <Grid item xs={12}>\r\n\r\n                        <Card className=\"religioncard\" style={{ height: 'calc(100vh - 228px)' }}>\r\n                            {/* <TabContext value={value}> */}\r\n                                {/* <Box\r\n                                    sx={{\r\n                                        borderBottom: 1,\r\n                                        borderColor: 'divider',\r\n                                        padding: '16px',\r\n                                        paddingLeft: '16px',\r\n                                        overflowX: 'auto'\r\n                                    }}\r\n                                >\r\n                                    <TabList\r\n                                        onChange={handleChange}\r\n                                        aria-label=\"scrollable force tabs example\"\r\n                                        variant=\"scrollable\"\r\n                                    //  scrollButtons\r\n                                    // allowScrollButtonsMobile\r\n                                    >\r\n                                        <Tab label=\"Detail\" value=\"1\" />\r\n\r\n                                    </TabList>\r\n                                </Box> */}\r\n                                <Typography style={{ height: 'calc(-248px + 100vh)', overflowX: 'hidden', padding: '30px 13%', textAlign: 'justify' }}>\r\n                                    {isloading ? (\r\n                                        <Loader1 title=\"Loading...\" />\r\n                                    ) : (\r\n                                        <>\r\n                                            <TableContainer style={{overflowX: 'hidden'}}>\r\n                                                {blog.map((ele: any, index: any) => (\r\n                                                    <div key={index}>\r\n                                                        <Grid container>\r\n                                                            <Grid item xs={12} sm={12} md={12}>\r\n                                                                {(ele.tags && ele.tags.length > 0) &&\r\n                                                                    <Typography style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n\r\n                                                                        {ele.tags.map((value, index) => (\r\n                                                                            <Typography\r\n                                                                                key={index}\r\n                                                                                style={{\r\n                                                                                    // paddingLeft: '4%',\r\n                                                                                    // paddingTop: '1.4%',\r\n                                                                                    paddingBottom: '1.4%',\r\n                                                                                    paddingRight: '1.4%',\r\n\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                <Chip\r\n                                                                                    key={index}\r\n                                                                                    label={value}\r\n                                                                                >\r\n                                                                                    {value}\r\n                                                                                </Chip>\r\n                                                                            </Typography>\r\n                                                                        ))}\r\n                                                                    </Typography>}\r\n                                                                <h3 style={{fontWeight: '600', fontSize: '26px' , marginTop: '15px'}}>{ele.title}</h3>\r\n                                                                <Typography className='author-name'>\r\n                                                                    {ele.authorName &&\r\n                                                                        <span>\r\n                                                                            By&nbsp;{ele.authorName}\r\n                                                                        </span>\r\n                                                                    }\r\n                                                                    {ele.publishDate &&\r\n                                                                        <span>\r\n                                                                            &nbsp;&nbsp;Publish on&nbsp;{ele.formatedate}\r\n                                                                        </span>\r\n                                                                    }\r\n\r\n                                                                </Typography>\r\n\r\n                                                                <Row>\r\n                                                                    <Col xs={12} md={12}>\r\n                                                                        <Typography style={{ height: '270px', width: 'auto', marginTop: '20px'  }}>\r\n                                                                            {ele.image ? (\r\n                                                                                <img\r\n                                                                                    src={ele.image}\r\n                                                                                    alt=\"notification Url\"\r\n                                                                                    style={{\r\n                                                                                        height: '100%',\r\n                                                                                        width: '100%',\r\n                                                                                        objectFit: 'contain'\r\n                                                                                        // borderRadius: '50%',\r\n                                                                                    }}\r\n                                                                                />\r\n                                                                            ) : (\r\n                                                                                <img\r\n                                                                                    src=\"/dummy.png\"\r\n                                                                                    alt=\"notification Url\"\r\n                                                                                    style={{\r\n                                                                                        height: '200px',\r\n                                                                                        width: '200px'\r\n                                                                                        // borderRadius: '50%',\r\n                                                                                    }}\r\n                                                                                />\r\n                                                                            )}\r\n                                                                        </Typography>\r\n                                                                    </Col>\r\n                                                                   \r\n                                                                </Row>\r\n\r\n                                                                <Row style={{marginTop: '40px'}}>\r\n                                                                    <Typography dangerouslySetInnerHTML={{ __html: ele.description }} className='detail-description'/>\r\n                                                                </Row>\r\n\r\n                                                            </Grid>\r\n\r\n                                                        </Grid>\r\n\r\n                                                    </div>\r\n                                                ))}\r\n                                            </TableContainer>\r\n                                        </>\r\n                                    )}\r\n                                </Typography>\r\n                            {/* </TabContext> */}\r\n                        </Card>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomFieldDetail;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiTableContainer', slot);\n}\nconst tableContainerClasses = generateUtilityClasses('MuiTableContainer', ['root']);\nexport default tableContainerClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableContainerUtilityClass } from './tableContainerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableContainerUtilityClass, classes);\n};\nconst TableContainerRoot = styled('div', {\n  name: 'MuiTableContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  width: '100%',\n  overflowX: 'auto'\n});\nconst TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableContainer'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TableContainerRoot, _extends({\n    ref: ref,\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Table`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableContainer;"],"names":["PageTitle","styled","Box","_ref","theme","spacing","_ref2","children","_jsx","className","Container","maxWidth","props","title","Dialog","padding","height","CustomFieldDetail","navigate","useNavigate","isloading","setIsLoading","useTheme","useState","blog","setBlog","React","fieldName","setFieldName","credentail","setCredentail","apiUrl","setApiUrl","isReadPermission","setIsReadPermission","isWritePermission","setIsWritePermission","isEditPermission","setIsEditPermission","isDeletePermission","setIsDeletePermission","vId","useParams","useEffect","cred","JSON","parse","localStorage","getItem","roleId","ind","pagePermissions","findIndex","c","isAddPermission","loadData","loadjson","async","res","fetch","url","json","getdata","token","refreshToken","obj","id","APIservice","httpPost","recordList","image","publishDate","Date","formatedate","toLocaleDateString","status","clear","toast","error","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","position","POSITION","TOP_RIGHT","value","setValue","_jsxs","ToastContainer","style","top","right","newestOnTop","rtl","pauseOnFocusLoss","Helmet","PageTitleWrapper","p","Grid","container","justifyContent","alignItems","item","Stack","Breadcrumbs","Link","to","display","color","HomeIcon","textDecoration","Typography","variant","fontWeight","direction","xs","Card","overflowX","textAlign","Loader1","_Fragment","TableContainer","map","ele","index","sm","md","tags","length","flexWrap","paddingBottom","paddingRight","Chip","label","fontSize","marginTop","authorName","Row","Col","width","src","alt","objectFit","dangerouslySetInnerHTML","__html","description","getTableContainerUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableContainerRoot","name","overridesResolver","styles","root","inProps","ref","useDefaultProps","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","as","clsx"],"sourceRoot":""}